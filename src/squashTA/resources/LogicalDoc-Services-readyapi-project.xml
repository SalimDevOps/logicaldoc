<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="1bc88d0e-0789-4d74-8d9c-9ecc320c93af" created="2.4.0" activeEnvironment="Default environment" name="LogicalDoc-Services" resourceRoot="${projectDir}" updated="2.4.0 2018-06-08T12:50:23Z" encryptionMode="Not encrypted" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:interface xsi:type="con:WsdlInterface" id="f97449eb-5f76-427c-95c0-1be78ab0015a" wsaVersion="NONE" name="SoapAuthServiceServiceSoapBinding" type="wsdl" bindingName="{http://endpoint.soap.webservice.logicaldoc.com/}SoapAuthServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/logicaldoc/services/Auth?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/logicaldoc/services/Auth?wsdl"><con:part><con:url>http://localhost:8080/logicaldoc/services/Auth?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SoapAuthServiceService" targetNamespace="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:import location="http://localhost:8080/logicaldoc/services/Auth?wsdl=Auth.wsdl" namespace="http://ws.logicaldoc.com"></wsdl:import>
  <wsdl:binding name="SoapAuthServiceServiceSoapBinding" type="ns1:Auth">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="valid">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="valid">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="logout">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="logout">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="logoutResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renew">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="renew">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="renewResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="login">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="login">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="loginResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SoapAuthServiceService">
    <wsdl:port binding="tns:SoapAuthServiceServiceSoapBinding" name="SoapAuthServicePort">
      <soap:address location="http://localhost:8080/logicaldoc/services/Auth"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/logicaldoc/services/Auth?wsdl=Auth.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="Auth" targetNamespace="http://ws.logicaldoc.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://ws.logicaldoc.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ws.logicaldoc.com">
      <xs:element name="login" type="tns:login"/>
      <xs:element name="loginResponse" type="tns:loginResponse"/>
      <xs:element name="logout" type="tns:logout"/>
      <xs:element name="logoutResponse" type="tns:logoutResponse"/>
      <xs:element name="renew" type="tns:renew"/>
      <xs:element name="renewResponse" type="tns:renewResponse"/>
      <xs:element name="valid" type="tns:valid"/>
      <xs:element name="validResponse" type="tns:validResponse"/>
      <xs:complexType name="valid">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="logout">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="logoutResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="renew">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="renewResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="login">
        <xs:sequence>
          <xs:element minOccurs="0" name="username" type="xs:string"/>
          <xs:element minOccurs="0" name="password" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="loginResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Exception" type="tns:Exception"/>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="valid">
    <wsdl:part element="ns1:valid" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="renewResponse">
    <wsdl:part element="ns1:renewResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validResponse">
    <wsdl:part element="ns1:validResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="logout">
    <wsdl:part element="ns1:logout" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="logoutResponse">
    <wsdl:part element="ns1:logoutResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="loginResponse">
    <wsdl:part element="ns1:loginResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="renew">
    <wsdl:part element="ns1:renew" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="login">
    <wsdl:part element="ns1:login" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="Exception">
    <wsdl:part element="ns1:Exception" name="Exception"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="Auth">
    <wsdl:operation name="valid">
      <wsdl:input message="ns1:valid" name="valid"></wsdl:input>
      <wsdl:output message="ns1:validResponse" name="validResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="logout">
      <wsdl:input message="ns1:logout" name="logout"></wsdl:input>
      <wsdl:output message="ns1:logoutResponse" name="logoutResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renew">
      <wsdl:input message="ns1:renew" name="renew"></wsdl:input>
      <wsdl:output message="ns1:renewResponse" name="renewResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="login">
      <wsdl:input message="ns1:login" name="login"></wsdl:input>
      <wsdl:output message="ns1:loginResponse" name="loginResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/logicaldoc/services/Auth</con:endpoint></con:endpoints><con:operation id="1230f725-bb70-4294-80f7-7c0394eb372d" isOneWay="false" action="" name="login" bindingOperationName="login" type="Request-Response" outputName="loginResponse" inputName="login" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e7dd104c-eb71-4b32-b921-9901bfaac22c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Auth</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:login>\r
         <!--Optional:-->\r
         <username>?</username>\r
         <!--Optional:-->\r
         <password>?</password>\r
      </ws:login>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Auth/login"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="88295fba-635c-4aa7-a9bb-453646622e6e" isOneWay="false" action="" name="logout" bindingOperationName="logout" type="Request-Response" outputName="logoutResponse" inputName="logout" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f669a591-2a03-42a5-8c2d-36811bfcedfd" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Auth</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:logout>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
      </ws:logout>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Auth/logout"/></con:call></con:operation><con:operation id="bcd817a2-762b-4e71-96e6-c8553e21881c" isOneWay="false" action="" name="renew" bindingOperationName="renew" type="Request-Response" outputName="renewResponse" inputName="renew" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="661059b2-cf14-46a7-a02b-7577b8a501a3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Auth</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:renew>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
      </ws:renew>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Auth/renew"/></con:call></con:operation><con:operation id="69c4df0a-ee84-4495-81bb-30f0f623dc0c" isOneWay="false" action="" name="valid" bindingOperationName="valid" type="Request-Response" outputName="validResponse" inputName="valid" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="04257a5e-2e96-4804-a506-20fe53df8dc8" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Auth</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:valid>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
      </ws:valid>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Auth/valid"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="65e6acf5-b75b-4302-9e3b-0bdd40af0776" wsaVersion="NONE" name="SoapBookmarkServiceServiceSoapBinding" type="wsdl" bindingName="{http://endpoint.soap.webservice.logicaldoc.com/}SoapBookmarkServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/logicaldoc/services/Bookmark?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/logicaldoc/services/Bookmark?wsdl"><con:part><con:url>http://localhost:8080/logicaldoc/services/Bookmark?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SoapBookmarkServiceService" targetNamespace="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:import location="http://localhost:8080/logicaldoc/services/Bookmark?wsdl=Bookmark.wsdl" namespace="http://ws.logicaldoc.com"></wsdl:import>
  <wsdl:binding name="SoapBookmarkServiceServiceSoapBinding" type="ns1:Bookmark">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="unbookmarkFolder">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="unbookmarkFolder">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="unbookmarkFolderResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="saveBookmark">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="saveBookmark">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="saveBookmarkResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="bookmarkDocument">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="bookmarkDocument">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="bookmarkDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteBookmark">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteBookmark">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteBookmarkResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unbookmarkDocument">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="unbookmarkDocument">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="unbookmarkDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBookmarks">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getBookmarks">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBookmarksResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="bookmarkFolder">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="bookmarkFolder">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="bookmarkFolderResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SoapBookmarkServiceService">
    <wsdl:port binding="tns:SoapBookmarkServiceServiceSoapBinding" name="SoapBookmarkServicePort">
      <soap:address location="http://localhost:8080/logicaldoc/services/Bookmark"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/logicaldoc/services/Bookmark?wsdl=Bookmark.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="Bookmark" targetNamespace="http://ws.logicaldoc.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://ws.logicaldoc.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ws.logicaldoc.com">
      <xs:element name="bookmarkDocument" type="tns:bookmarkDocument"/>
      <xs:element name="bookmarkDocumentResponse" type="tns:bookmarkDocumentResponse"/>
      <xs:element name="bookmarkFolder" type="tns:bookmarkFolder"/>
      <xs:element name="bookmarkFolderResponse" type="tns:bookmarkFolderResponse"/>
      <xs:element name="deleteBookmark" type="tns:deleteBookmark"/>
      <xs:element name="deleteBookmarkResponse" type="tns:deleteBookmarkResponse"/>
      <xs:element name="getBookmarks" type="tns:getBookmarks"/>
      <xs:element name="getBookmarksResponse" type="tns:getBookmarksResponse"/>
      <xs:element name="saveBookmark" type="tns:saveBookmark"/>
      <xs:element name="saveBookmarkResponse" type="tns:saveBookmarkResponse"/>
      <xs:element name="unbookmarkDocument" type="tns:unbookmarkDocument"/>
      <xs:element name="unbookmarkDocumentResponse" type="tns:unbookmarkDocumentResponse"/>
      <xs:element name="unbookmarkFolder" type="tns:unbookmarkFolder"/>
      <xs:element name="unbookmarkFolderResponse" type="tns:unbookmarkFolderResponse"/>
      <xs:complexType name="unbookmarkFolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="unbookmarkFolderResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="saveBookmark">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="bookmark" type="tns:WSBookmark"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSBookmark">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="fileType" type="xs:string"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element name="position" type="xs:int"/>
          <xs:element name="targetId" type="xs:long"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
          <xs:element name="type" type="xs:int"/>
          <xs:element name="userId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="saveBookmarkResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="bookmark" type="tns:WSBookmark"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bookmarkDocument">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bookmarkDocumentResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="bookmark" type="tns:WSBookmark"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteBookmark">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="bookmarkId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteBookmarkResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="unbookmarkDocument">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="unbookmarkDocumentResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getBookmarks">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getBookmarksResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="bookmark" type="tns:WSBookmark"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bookmarkFolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bookmarkFolderResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="bookmark" type="tns:WSBookmark"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Exception" type="tns:Exception"/>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="unbookmarkFolder">
    <wsdl:part element="ns1:unbookmarkFolder" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="saveBookmark">
    <wsdl:part element="ns1:saveBookmark" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="unbookmarkDocumentResponse">
    <wsdl:part element="ns1:unbookmarkDocumentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="saveBookmarkResponse">
    <wsdl:part element="ns1:saveBookmarkResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="bookmarkDocument">
    <wsdl:part element="ns1:bookmarkDocument" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteBookmark">
    <wsdl:part element="ns1:deleteBookmark" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="bookmarkDocumentResponse">
    <wsdl:part element="ns1:bookmarkDocumentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteBookmarkResponse">
    <wsdl:part element="ns1:deleteBookmarkResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="unbookmarkDocument">
    <wsdl:part element="ns1:unbookmarkDocument" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="bookmarkFolderResponse">
    <wsdl:part element="ns1:bookmarkFolderResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBookmarksResponse">
    <wsdl:part element="ns1:getBookmarksResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="unbookmarkFolderResponse">
    <wsdl:part element="ns1:unbookmarkFolderResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="Exception">
    <wsdl:part element="ns1:Exception" name="Exception"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="bookmarkFolder">
    <wsdl:part element="ns1:bookmarkFolder" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBookmarks">
    <wsdl:part element="ns1:getBookmarks" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="Bookmark">
    <wsdl:operation name="unbookmarkFolder">
      <wsdl:input message="ns1:unbookmarkFolder" name="unbookmarkFolder"></wsdl:input>
      <wsdl:output message="ns1:unbookmarkFolderResponse" name="unbookmarkFolderResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="saveBookmark">
      <wsdl:input message="ns1:saveBookmark" name="saveBookmark"></wsdl:input>
      <wsdl:output message="ns1:saveBookmarkResponse" name="saveBookmarkResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="bookmarkDocument">
      <wsdl:input message="ns1:bookmarkDocument" name="bookmarkDocument"></wsdl:input>
      <wsdl:output message="ns1:bookmarkDocumentResponse" name="bookmarkDocumentResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteBookmark">
      <wsdl:input message="ns1:deleteBookmark" name="deleteBookmark"></wsdl:input>
      <wsdl:output message="ns1:deleteBookmarkResponse" name="deleteBookmarkResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unbookmarkDocument">
      <wsdl:input message="ns1:unbookmarkDocument" name="unbookmarkDocument"></wsdl:input>
      <wsdl:output message="ns1:unbookmarkDocumentResponse" name="unbookmarkDocumentResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBookmarks">
      <wsdl:input message="ns1:getBookmarks" name="getBookmarks"></wsdl:input>
      <wsdl:output message="ns1:getBookmarksResponse" name="getBookmarksResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="bookmarkFolder">
      <wsdl:input message="ns1:bookmarkFolder" name="bookmarkFolder"></wsdl:input>
      <wsdl:output message="ns1:bookmarkFolderResponse" name="bookmarkFolderResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/logicaldoc/services/Bookmark</con:endpoint></con:endpoints><con:operation id="838e590e-d779-4725-acf4-1ff5eb0260cc" isOneWay="false" action="" name="bookmarkDocument" bindingOperationName="bookmarkDocument" type="Request-Response" outputName="bookmarkDocumentResponse" inputName="bookmarkDocument" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="77c9044c-6e48-4a5e-9d29-f6419f2b5f96" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Bookmark</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:bookmarkDocument>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
      </ws:bookmarkDocument>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Bookmark/bookmarkDocument"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="71e2e461-9095-4fd1-b969-994436431bf9" isOneWay="false" action="" name="bookmarkFolder" bindingOperationName="bookmarkFolder" type="Request-Response" outputName="bookmarkFolderResponse" inputName="bookmarkFolder" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="faf1a7e0-7912-46b5-b7c0-9e6c8d01d007" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Bookmark</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:bookmarkFolder>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <folderId>?</folderId>\r
      </ws:bookmarkFolder>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Bookmark/bookmarkFolder"/></con:call></con:operation><con:operation id="962b1a0b-9199-42af-9c80-f1f85f7a699b" isOneWay="false" action="" name="deleteBookmark" bindingOperationName="deleteBookmark" type="Request-Response" outputName="deleteBookmarkResponse" inputName="deleteBookmark" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6e64b390-5dab-45c5-8e96-2d2a75e88932" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Bookmark</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:deleteBookmark>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <bookmarkId>?</bookmarkId>\r
      </ws:deleteBookmark>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Bookmark/deleteBookmark"/></con:call></con:operation><con:operation id="61acf35c-69d3-4d09-adb6-a05abeb129b3" isOneWay="false" action="" name="getBookmarks" bindingOperationName="getBookmarks" type="Request-Response" outputName="getBookmarksResponse" inputName="getBookmarks" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f79b28fe-d220-496c-9b77-63a414a58104" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Bookmark</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getBookmarks>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
      </ws:getBookmarks>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Bookmark/getBookmarks"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="8d270f3b-daf6-4392-b755-de6ffd30c9d9" isOneWay="false" action="" name="saveBookmark" bindingOperationName="saveBookmark" type="Request-Response" outputName="saveBookmarkResponse" inputName="saveBookmark" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e50387a3-7e10-4f4e-baf6-fb9e53c2b010" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Bookmark</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:saveBookmark>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <!--Optional:-->\r
         <bookmark>\r
            <!--Optional:-->\r
            <description>?</description>\r
            <!--Optional:-->\r
            <fileType>?</fileType>\r
            <id>?</id>\r
            <position>?</position>\r
            <targetId>?</targetId>\r
            <!--Optional:-->\r
            <title>?</title>\r
            <type>?</type>\r
            <userId>?</userId>\r
         </bookmark>\r
      </ws:saveBookmark>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Bookmark/saveBookmark"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="4e799856-426c-44c1-afae-b4f388e28f88" isOneWay="false" action="" name="unbookmarkDocument" bindingOperationName="unbookmarkDocument" type="Request-Response" outputName="unbookmarkDocumentResponse" inputName="unbookmarkDocument" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="29fb1844-3921-430b-a421-71d18fac9f06" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Bookmark</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:unbookmarkDocument>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
      </ws:unbookmarkDocument>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Bookmark/unbookmarkDocument"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="021429d8-b55c-4d93-9115-70e42d4b6055" isOneWay="false" action="" name="unbookmarkFolder" bindingOperationName="unbookmarkFolder" type="Request-Response" outputName="unbookmarkFolderResponse" inputName="unbookmarkFolder" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8c682f16-4206-4c76-be82-0c2623625ae8" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Bookmark</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:unbookmarkFolder>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <folderId>?</folderId>\r
      </ws:unbookmarkFolder>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Bookmark/unbookmarkFolder"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="a34eb9ec-2e69-430e-94d8-6ee15713028e" wsaVersion="NONE" name="SoapDocumentServiceServiceSoapBinding" type="wsdl" bindingName="{http://endpoint.soap.webservice.logicaldoc.com/}SoapDocumentServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/logicaldoc/services/Document?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/logicaldoc/services/Document?wsdl"><con:part><con:url>http://localhost:8080/logicaldoc/services/Document?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SoapDocumentServiceService" targetNamespace="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:import location="http://localhost:8080/logicaldoc/services/Document?wsdl=Document.wsdl" namespace="http://ws.logicaldoc.com"></wsdl:import>
  <wsdl:binding name="SoapDocumentServiceServiceSoapBinding" type="ns1:Document">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="setPassword">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="setPassword">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setPasswordResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResource">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getResource">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getResourceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAliases">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAliases">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAliasesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createDownloadTicket">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createDownloadTicket">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createDownloadTicketResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLinks">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLinks">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLinksResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="upload">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="upload">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="uploadResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getContent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getContentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="link">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="link">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="linkResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="update">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="update">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unprotect">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="unprotect">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="unprotectResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="delete">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="uploadResource">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="uploadResource">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="uploadResourceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendEmail">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="sendEmail">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendEmailResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkin">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="checkin">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkinResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNotes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getNotes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNotesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteNote">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteNote">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteNoteResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="create">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="create">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getVersions">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getVersions">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getVersionsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="lock">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="lock">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="lockResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rateDocument">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="rateDocument">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="rateDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkout">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="checkout">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkoutResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAlias">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createAlias">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAliasResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentByCustomId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocumentByCustomId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentByCustomIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="move">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="move">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="moveResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unlock">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="unlock">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="unlockResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reindex">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="reindex">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="reindexResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="restore">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="restore">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="restoreResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocument">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocument">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocuments">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocuments">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteLink">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteLink">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteLinkResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listDocuments">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="listDocuments">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listDocumentsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteVersion">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteVersion">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteVersionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRatings">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRatings">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRatingsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getVersionContent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getVersionContent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getVersionContentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRecentDocuments">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRecentDocuments">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRecentDocumentsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExtractedText">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getExtractedText">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getExtractedTextResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addNote">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addNote">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addNoteResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rename">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="rename">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="renameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unsetPassword">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="unsetPassword">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="unsetPasswordResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="renameFile">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="renameFile">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="renameFileResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createPdf">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createPdf">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createPdfResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadable">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isReadable">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isReadableResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SoapDocumentServiceService">
    <wsdl:port binding="tns:SoapDocumentServiceServiceSoapBinding" name="SoapDocumentServicePort">
      <soap:address location="http://localhost:8080/logicaldoc/services/Document"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/logicaldoc/services/Document?wsdl=Document.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="Document" targetNamespace="http://ws.logicaldoc.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://ws.logicaldoc.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ws.logicaldoc.com">
      <xs:element name="addNote" type="tns:addNote"/>
      <xs:element name="addNoteResponse" type="tns:addNoteResponse"/>
      <xs:element name="attribute" type="tns:WSAttribute"/>
      <xs:element name="checkin" type="tns:checkin"/>
      <xs:element name="checkinResponse" type="tns:checkinResponse"/>
      <xs:element name="checkout" type="tns:checkout"/>
      <xs:element name="checkoutResponse" type="tns:checkoutResponse"/>
      <xs:element name="create" type="tns:create"/>
      <xs:element name="createAlias" type="tns:createAlias"/>
      <xs:element name="createAliasResponse" type="tns:createAliasResponse"/>
      <xs:element name="createDownloadTicket" type="tns:createDownloadTicket"/>
      <xs:element name="createDownloadTicketResponse" type="tns:createDownloadTicketResponse"/>
      <xs:element name="createPdf" type="tns:createPdf"/>
      <xs:element name="createPdfResponse" type="tns:createPdfResponse"/>
      <xs:element name="createResponse" type="tns:createResponse"/>
      <xs:element name="delete" type="tns:delete"/>
      <xs:element name="deleteLink" type="tns:deleteLink"/>
      <xs:element name="deleteLinkResponse" type="tns:deleteLinkResponse"/>
      <xs:element name="deleteNote" type="tns:deleteNote"/>
      <xs:element name="deleteNoteResponse" type="tns:deleteNoteResponse"/>
      <xs:element name="deleteResponse" type="tns:deleteResponse"/>
      <xs:element name="deleteVersion" type="tns:deleteVersion"/>
      <xs:element name="deleteVersionResponse" type="tns:deleteVersionResponse"/>
      <xs:element name="document" type="tns:WSDocument"/>
      <xs:element name="getAliases" type="tns:getAliases"/>
      <xs:element name="getAliasesResponse" type="tns:getAliasesResponse"/>
      <xs:element name="getContent" type="tns:getContent"/>
      <xs:element name="getContentResponse" type="tns:getContentResponse"/>
      <xs:element name="getDocument" type="tns:getDocument"/>
      <xs:element name="getDocumentByCustomId" type="tns:getDocumentByCustomId"/>
      <xs:element name="getDocumentByCustomIdResponse" type="tns:getDocumentByCustomIdResponse"/>
      <xs:element name="getDocumentResponse" type="tns:getDocumentResponse"/>
      <xs:element name="getDocuments" type="tns:getDocuments"/>
      <xs:element name="getDocumentsResponse" type="tns:getDocumentsResponse"/>
      <xs:element name="getExtractedText" type="tns:getExtractedText"/>
      <xs:element name="getExtractedTextResponse" type="tns:getExtractedTextResponse"/>
      <xs:element name="getLinks" type="tns:getLinks"/>
      <xs:element name="getLinksResponse" type="tns:getLinksResponse"/>
      <xs:element name="getNotes" type="tns:getNotes"/>
      <xs:element name="getNotesResponse" type="tns:getNotesResponse"/>
      <xs:element name="getRatings" type="tns:getRatings"/>
      <xs:element name="getRatingsResponse" type="tns:getRatingsResponse"/>
      <xs:element name="getRecentDocuments" type="tns:getRecentDocuments"/>
      <xs:element name="getRecentDocumentsResponse" type="tns:getRecentDocumentsResponse"/>
      <xs:element name="getResource" type="tns:getResource"/>
      <xs:element name="getResourceResponse" type="tns:getResourceResponse"/>
      <xs:element name="getVersionContent" type="tns:getVersionContent"/>
      <xs:element name="getVersionContentResponse" type="tns:getVersionContentResponse"/>
      <xs:element name="getVersions" type="tns:getVersions"/>
      <xs:element name="getVersionsResponse" type="tns:getVersionsResponse"/>
      <xs:element name="isReadable" type="tns:isReadable"/>
      <xs:element name="isReadableResponse" type="tns:isReadableResponse"/>
      <xs:element name="link" type="tns:link"/>
      <xs:element name="linkResponse" type="tns:linkResponse"/>
      <xs:element name="listDocuments" type="tns:listDocuments"/>
      <xs:element name="listDocumentsResponse" type="tns:listDocumentsResponse"/>
      <xs:element name="lock" type="tns:lock"/>
      <xs:element name="lockResponse" type="tns:lockResponse"/>
      <xs:element name="move" type="tns:move"/>
      <xs:element name="moveResponse" type="tns:moveResponse"/>
      <xs:element name="rateDocument" type="tns:rateDocument"/>
      <xs:element name="rateDocumentResponse" type="tns:rateDocumentResponse"/>
      <xs:element name="reindex" type="tns:reindex"/>
      <xs:element name="reindexResponse" type="tns:reindexResponse"/>
      <xs:element name="rename" type="tns:rename"/>
      <xs:element name="renameFile" type="tns:renameFile"/>
      <xs:element name="renameFileResponse" type="tns:renameFileResponse"/>
      <xs:element name="renameResponse" type="tns:renameResponse"/>
      <xs:element name="restore" type="tns:restore"/>
      <xs:element name="restoreResponse" type="tns:restoreResponse"/>
      <xs:element name="sendEmail" type="tns:sendEmail"/>
      <xs:element name="sendEmailResponse" type="tns:sendEmailResponse"/>
      <xs:element name="setPassword" type="tns:setPassword"/>
      <xs:element name="setPasswordResponse" type="tns:setPasswordResponse"/>
      <xs:element name="unlock" type="tns:unlock"/>
      <xs:element name="unlockResponse" type="tns:unlockResponse"/>
      <xs:element name="unprotect" type="tns:unprotect"/>
      <xs:element name="unprotectResponse" type="tns:unprotectResponse"/>
      <xs:element name="unsetPassword" type="tns:unsetPassword"/>
      <xs:element name="unsetPasswordResponse" type="tns:unsetPasswordResponse"/>
      <xs:element name="update" type="tns:update"/>
      <xs:element name="updateResponse" type="tns:updateResponse"/>
      <xs:element name="upload" type="tns:upload"/>
      <xs:element name="uploadResource" type="tns:uploadResource"/>
      <xs:element name="uploadResourceResponse" type="tns:uploadResourceResponse"/>
      <xs:element name="uploadResponse" type="tns:uploadResponse"/>
      <xs:complexType name="setPassword">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="password" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setPasswordResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="createDownloadTicket">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="suffix" type="xs:string"/>
          <xs:element minOccurs="0" name="expireHours" type="xs:int"/>
          <xs:element minOccurs="0" name="expireDate" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createDownloadTicketResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="ticket" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAliases">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAliasesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="aliases" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSDocument">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" nillable="true" type="tns:WSAttribute"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="creation" type="xs:string"/>
          <xs:element minOccurs="0" name="creator" type="xs:string"/>
          <xs:element name="creatorId" type="xs:long"/>
          <xs:element minOccurs="0" name="customId" type="xs:string"/>
          <xs:element minOccurs="0" name="date" type="xs:string"/>
          <xs:element minOccurs="0" name="deleteUserId" type="xs:long"/>
          <xs:element minOccurs="0" name="digest" type="xs:string"/>
          <xs:element minOccurs="0" name="docRef" type="xs:long"/>
          <xs:element minOccurs="0" name="docRefType" type="xs:string"/>
          <xs:element minOccurs="0" name="exportId" type="xs:long"/>
          <xs:element minOccurs="0" name="exportName" type="xs:string"/>
          <xs:element name="exportStatus" type="xs:int"/>
          <xs:element minOccurs="0" name="fileName" type="xs:string"/>
          <xs:element name="fileSize" type="xs:long"/>
          <xs:element minOccurs="0" name="fileVersion" type="xs:string"/>
          <xs:element minOccurs="0" name="folderId" type="xs:long"/>
          <xs:element minOccurs="0" name="formId" type="xs:long"/>
          <xs:element minOccurs="0" name="icon" type="xs:string"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element name="immutable" type="xs:int"/>
          <xs:element name="indexed" type="xs:int"/>
          <xs:element minOccurs="0" name="language" type="xs:string"/>
          <xs:element minOccurs="0" name="lastModified" type="xs:string"/>
          <xs:element minOccurs="0" name="lockUserId" type="xs:long"/>
          <xs:element name="nature" type="xs:int"/>
          <xs:element name="pages" type="xs:int"/>
          <xs:element minOccurs="0" name="passwordProtected" type="xs:int"/>
          <xs:element minOccurs="0" name="path" type="xs:string"/>
          <xs:element name="published" type="xs:int"/>
          <xs:element minOccurs="0" name="publisher" type="xs:string"/>
          <xs:element name="publisherId" type="xs:long"/>
          <xs:element minOccurs="0" name="rating" type="xs:int"/>
          <xs:element minOccurs="0" name="score" type="xs:int"/>
          <xs:element name="signed" type="xs:int"/>
          <xs:element name="stamped" type="xs:int"/>
          <xs:element minOccurs="0" name="startPublishing" type="xs:string"/>
          <xs:element name="status" type="xs:int"/>
          <xs:element minOccurs="0" name="stopPublishing" type="xs:string"/>
          <xs:element minOccurs="0" name="summary" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tags" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="templateId" type="xs:long"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
          <xs:element minOccurs="0" name="version" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowStatus" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSAttribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="dateValue" type="xs:string"/>
          <xs:element minOccurs="0" name="doubleValue" type="xs:double"/>
          <xs:element name="editor" type="xs:int"/>
          <xs:element minOccurs="0" name="intValue" type="xs:long"/>
          <xs:element minOccurs="0" name="label" type="xs:string"/>
          <xs:element name="mandatory" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="position" type="xs:int"/>
          <xs:element minOccurs="0" name="setId" type="xs:long"/>
          <xs:element minOccurs="0" name="stringValue" type="xs:string"/>
          <xs:element name="type" type="xs:int"/>
          <xs:element minOccurs="0" name="value" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getResource">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="fileVersion" type="xs:string"/>
          <xs:element minOccurs="0" name="suffix" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getResourceResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLinks">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLinksResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="link" type="tns:WSLink"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSLink">
        <xs:sequence>
          <xs:element name="doc1" type="xs:long"/>
          <xs:element name="doc2" type="xs:long"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="upload">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="folderId" type="xs:long"/>
          <xs:element name="release" type="xs:boolean"/>
          <xs:element minOccurs="0" name="filename" type="xs:string"/>
          <xs:element minOccurs="0" name="language" type="xs:string"/>
          <xs:element minOccurs="0" name="content" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="uploadResponse">
        <xs:sequence>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getContent">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getContentResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="link">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="doc1" type="xs:long"/>
          <xs:element name="doc2" type="xs:long"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="linkResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="link" type="tns:WSLink"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="document" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="unprotect">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="password" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="unprotectResponse">
        <xs:sequence>
          <xs:element name="unprotect" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="delete">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="uploadResource">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="fileVersion" type="xs:string"/>
          <xs:element minOccurs="0" name="suffix" type="xs:string"/>
          <xs:element minOccurs="0" name="content" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="uploadResourceResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="sendEmail">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="docIds" type="xs:long"/>
          <xs:element minOccurs="0" name="recipients" type="xs:string"/>
          <xs:element minOccurs="0" name="subject" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sendEmailResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="checkin">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="filename" type="xs:string"/>
          <xs:element name="release" type="xs:boolean"/>
          <xs:element minOccurs="0" name="content" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="checkinResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getNotes">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getNotesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="note" type="tns:WSNote"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSNote">
        <xs:sequence>
          <xs:element minOccurs="0" name="date" type="xs:dateTime"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
          <xs:element name="page" type="xs:int"/>
          <xs:element name="userId" type="xs:long"/>
          <xs:element minOccurs="0" name="username" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteNote">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="noteId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteNoteResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="create">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="document" type="tns:WSDocument"/>
          <xs:element minOccurs="0" name="content" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="document" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getVersions">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getVersionsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="document" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="lock">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="lockResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="rateDocument">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element name="vote" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="rateDocumentResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="rating" type="tns:WSRating"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSRating">
        <xs:sequence>
          <xs:element minOccurs="0" name="date" type="xs:dateTime"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element name="userId" type="xs:long"/>
          <xs:element minOccurs="0" name="username" type="xs:string"/>
          <xs:element name="vote" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="checkout">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="checkoutResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="createAlias">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element name="folderId" type="xs:long"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createAliasResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="document" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDocumentByCustomId">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="customId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDocumentByCustomIdResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="document" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="move">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="moveResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="unlock">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="unlockResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="reindex">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="content" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="reindexResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="restore">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="restoreResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getDocument">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDocumentResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="document" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDocuments">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="docIds" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDocumentsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="documents" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteLink">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="id" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteLinkResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="listDocuments">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
          <xs:element minOccurs="0" name="fileName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listDocumentsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="document" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteVersion">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="version" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteVersionResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="latest-version" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRatings">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRatingsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="rating" type="tns:WSRating"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getVersionContent">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="version" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getVersionContentResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRecentDocuments">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="maxHits" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRecentDocumentsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="document" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getExtractedText">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getExtractedTextResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="text" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addNote">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="note" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addNoteResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="note" type="tns:WSNote"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="rename">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="renameResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="unsetPassword">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="currentPassword" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="unsetPasswordResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="renameFile">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="renameFileResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="createPdf">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element minOccurs="0" name="fileVersion" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createPdfResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="isReadable">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="isReadableResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Exception" type="tns:Exception"/>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="setPassword">
    <wsdl:part element="ns1:setPassword" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAliasesResponse">
    <wsdl:part element="ns1:getAliasesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createDownloadTicket">
    <wsdl:part element="ns1:createDownloadTicket" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAliases">
    <wsdl:part element="ns1:getAliases" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getResource">
    <wsdl:part element="ns1:getResource" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addNoteResponse">
    <wsdl:part element="ns1:addNoteResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="upload">
    <wsdl:part element="ns1:upload" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createPdfResponse">
    <wsdl:part element="ns1:createPdfResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteVersionResponse">
    <wsdl:part element="ns1:deleteVersionResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getVersionContentResponse">
    <wsdl:part element="ns1:getVersionContentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="uploadResponse">
    <wsdl:part element="ns1:uploadResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkinResponse">
    <wsdl:part element="ns1:checkinResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="unprotect">
    <wsdl:part element="ns1:unprotect" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="moveResponse">
    <wsdl:part element="ns1:moveResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="restoreResponse">
    <wsdl:part element="ns1:restoreResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkin">
    <wsdl:part element="ns1:checkin" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="isReadableResponse">
    <wsdl:part element="ns1:isReadableResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteNote">
    <wsdl:part element="ns1:deleteNote" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="create">
    <wsdl:part element="ns1:create" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getVersions">
    <wsdl:part element="ns1:getVersions" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="lock">
    <wsdl:part element="ns1:lock" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="uploadResourceResponse">
    <wsdl:part element="ns1:uploadResourceResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createDownloadTicketResponse">
    <wsdl:part element="ns1:createDownloadTicketResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="lockResponse">
    <wsdl:part element="ns1:lockResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="linkResponse">
    <wsdl:part element="ns1:linkResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAliasResponse">
    <wsdl:part element="ns1:createAliasResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentsResponse">
    <wsdl:part element="ns1:getDocumentsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="unlock">
    <wsdl:part element="ns1:unlock" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendEmailResponse">
    <wsdl:part element="ns1:sendEmailResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="reindex">
    <wsdl:part element="ns1:reindex" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocument">
    <wsdl:part element="ns1:getDocument" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocuments">
    <wsdl:part element="ns1:getDocuments" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getResourceResponse">
    <wsdl:part element="ns1:getResourceResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContentResponse">
    <wsdl:part element="ns1:getContentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExtractedTextResponse">
    <wsdl:part element="ns1:getExtractedTextResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLinksResponse">
    <wsdl:part element="ns1:getLinksResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRatings">
    <wsdl:part element="ns1:getRatings" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getVersionContent">
    <wsdl:part element="ns1:getVersionContent" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="unsetPasswordResponse">
    <wsdl:part element="ns1:unsetPasswordResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecentDocumentsResponse">
    <wsdl:part element="ns1:getRecentDocumentsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="rateDocumentResponse">
    <wsdl:part element="ns1:rateDocumentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addNote">
    <wsdl:part element="ns1:addNote" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteLinkResponse">
    <wsdl:part element="ns1:deleteLinkResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="unsetPassword">
    <wsdl:part element="ns1:unsetPassword" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="renameFile">
    <wsdl:part element="ns1:renameFile" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="isReadable">
    <wsdl:part element="ns1:isReadable" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateResponse">
    <wsdl:part element="ns1:updateResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLinks">
    <wsdl:part element="ns1:getLinks" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listDocumentsResponse">
    <wsdl:part element="ns1:listDocumentsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContent">
    <wsdl:part element="ns1:getContent" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="link">
    <wsdl:part element="ns1:link" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="update">
    <wsdl:part element="ns1:update" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="delete">
    <wsdl:part element="ns1:delete" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="uploadResource">
    <wsdl:part element="ns1:uploadResource" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendEmail">
    <wsdl:part element="ns1:sendEmail" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNotes">
    <wsdl:part element="ns1:getNotes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteResponse">
    <wsdl:part element="ns1:deleteResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="renameResponse">
    <wsdl:part element="ns1:renameResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="rateDocument">
    <wsdl:part element="ns1:rateDocument" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getVersionsResponse">
    <wsdl:part element="ns1:getVersionsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkout">
    <wsdl:part element="ns1:checkout" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="reindexResponse">
    <wsdl:part element="ns1:reindexResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRatingsResponse">
    <wsdl:part element="ns1:getRatingsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAlias">
    <wsdl:part element="ns1:createAlias" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentByCustomId">
    <wsdl:part element="ns1:getDocumentByCustomId" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkoutResponse">
    <wsdl:part element="ns1:checkoutResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="unprotectResponse">
    <wsdl:part element="ns1:unprotectResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="move">
    <wsdl:part element="ns1:move" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="renameFileResponse">
    <wsdl:part element="ns1:renameFileResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentByCustomIdResponse">
    <wsdl:part element="ns1:getDocumentByCustomIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="restore">
    <wsdl:part element="ns1:restore" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createResponse">
    <wsdl:part element="ns1:createResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteLink">
    <wsdl:part element="ns1:deleteLink" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listDocuments">
    <wsdl:part element="ns1:listDocuments" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteVersion">
    <wsdl:part element="ns1:deleteVersion" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="Exception">
    <wsdl:part element="ns1:Exception" name="Exception"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentResponse">
    <wsdl:part element="ns1:getDocumentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteNoteResponse">
    <wsdl:part element="ns1:deleteNoteResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNotesResponse">
    <wsdl:part element="ns1:getNotesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="unlockResponse">
    <wsdl:part element="ns1:unlockResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecentDocuments">
    <wsdl:part element="ns1:getRecentDocuments" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExtractedText">
    <wsdl:part element="ns1:getExtractedText" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="rename">
    <wsdl:part element="ns1:rename" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setPasswordResponse">
    <wsdl:part element="ns1:setPasswordResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createPdf">
    <wsdl:part element="ns1:createPdf" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="Document">
    <wsdl:operation name="setPassword">
      <wsdl:input message="ns1:setPassword" name="setPassword"></wsdl:input>
      <wsdl:output message="ns1:setPasswordResponse" name="setPasswordResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createDownloadTicket">
      <wsdl:input message="ns1:createDownloadTicket" name="createDownloadTicket"></wsdl:input>
      <wsdl:output message="ns1:createDownloadTicketResponse" name="createDownloadTicketResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAliases">
      <wsdl:input message="ns1:getAliases" name="getAliases"></wsdl:input>
      <wsdl:output message="ns1:getAliasesResponse" name="getAliasesResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResource">
      <wsdl:input message="ns1:getResource" name="getResource"></wsdl:input>
      <wsdl:output message="ns1:getResourceResponse" name="getResourceResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLinks">
      <wsdl:input message="ns1:getLinks" name="getLinks"></wsdl:input>
      <wsdl:output message="ns1:getLinksResponse" name="getLinksResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="upload">
      <wsdl:input message="ns1:upload" name="upload"></wsdl:input>
      <wsdl:output message="ns1:uploadResponse" name="uploadResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContent">
      <wsdl:input message="ns1:getContent" name="getContent"></wsdl:input>
      <wsdl:output message="ns1:getContentResponse" name="getContentResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="link">
      <wsdl:input message="ns1:link" name="link"></wsdl:input>
      <wsdl:output message="ns1:linkResponse" name="linkResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="update">
      <wsdl:input message="ns1:update" name="update"></wsdl:input>
      <wsdl:output message="ns1:updateResponse" name="updateResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unprotect">
      <wsdl:input message="ns1:unprotect" name="unprotect"></wsdl:input>
      <wsdl:output message="ns1:unprotectResponse" name="unprotectResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <wsdl:input message="ns1:delete" name="delete"></wsdl:input>
      <wsdl:output message="ns1:deleteResponse" name="deleteResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="uploadResource">
      <wsdl:input message="ns1:uploadResource" name="uploadResource"></wsdl:input>
      <wsdl:output message="ns1:uploadResourceResponse" name="uploadResourceResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendEmail">
      <wsdl:input message="ns1:sendEmail" name="sendEmail"></wsdl:input>
      <wsdl:output message="ns1:sendEmailResponse" name="sendEmailResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkin">
      <wsdl:input message="ns1:checkin" name="checkin"></wsdl:input>
      <wsdl:output message="ns1:checkinResponse" name="checkinResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNotes">
      <wsdl:input message="ns1:getNotes" name="getNotes"></wsdl:input>
      <wsdl:output message="ns1:getNotesResponse" name="getNotesResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteNote">
      <wsdl:input message="ns1:deleteNote" name="deleteNote"></wsdl:input>
      <wsdl:output message="ns1:deleteNoteResponse" name="deleteNoteResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="create">
      <wsdl:input message="ns1:create" name="create"></wsdl:input>
      <wsdl:output message="ns1:createResponse" name="createResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getVersions">
      <wsdl:input message="ns1:getVersions" name="getVersions"></wsdl:input>
      <wsdl:output message="ns1:getVersionsResponse" name="getVersionsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="lock">
      <wsdl:input message="ns1:lock" name="lock"></wsdl:input>
      <wsdl:output message="ns1:lockResponse" name="lockResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rateDocument">
      <wsdl:input message="ns1:rateDocument" name="rateDocument"></wsdl:input>
      <wsdl:output message="ns1:rateDocumentResponse" name="rateDocumentResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkout">
      <wsdl:input message="ns1:checkout" name="checkout"></wsdl:input>
      <wsdl:output message="ns1:checkoutResponse" name="checkoutResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAlias">
      <wsdl:input message="ns1:createAlias" name="createAlias"></wsdl:input>
      <wsdl:output message="ns1:createAliasResponse" name="createAliasResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentByCustomId">
      <wsdl:input message="ns1:getDocumentByCustomId" name="getDocumentByCustomId"></wsdl:input>
      <wsdl:output message="ns1:getDocumentByCustomIdResponse" name="getDocumentByCustomIdResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="move">
      <wsdl:input message="ns1:move" name="move"></wsdl:input>
      <wsdl:output message="ns1:moveResponse" name="moveResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unlock">
      <wsdl:input message="ns1:unlock" name="unlock"></wsdl:input>
      <wsdl:output message="ns1:unlockResponse" name="unlockResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reindex">
      <wsdl:input message="ns1:reindex" name="reindex"></wsdl:input>
      <wsdl:output message="ns1:reindexResponse" name="reindexResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="restore">
      <wsdl:input message="ns1:restore" name="restore"></wsdl:input>
      <wsdl:output message="ns1:restoreResponse" name="restoreResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocument">
      <wsdl:input message="ns1:getDocument" name="getDocument"></wsdl:input>
      <wsdl:output message="ns1:getDocumentResponse" name="getDocumentResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocuments">
      <wsdl:input message="ns1:getDocuments" name="getDocuments"></wsdl:input>
      <wsdl:output message="ns1:getDocumentsResponse" name="getDocumentsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteLink">
      <wsdl:input message="ns1:deleteLink" name="deleteLink"></wsdl:input>
      <wsdl:output message="ns1:deleteLinkResponse" name="deleteLinkResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listDocuments">
      <wsdl:input message="ns1:listDocuments" name="listDocuments"></wsdl:input>
      <wsdl:output message="ns1:listDocumentsResponse" name="listDocumentsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteVersion">
      <wsdl:input message="ns1:deleteVersion" name="deleteVersion"></wsdl:input>
      <wsdl:output message="ns1:deleteVersionResponse" name="deleteVersionResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRatings">
      <wsdl:input message="ns1:getRatings" name="getRatings"></wsdl:input>
      <wsdl:output message="ns1:getRatingsResponse" name="getRatingsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getVersionContent">
      <wsdl:input message="ns1:getVersionContent" name="getVersionContent"></wsdl:input>
      <wsdl:output message="ns1:getVersionContentResponse" name="getVersionContentResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRecentDocuments">
      <wsdl:input message="ns1:getRecentDocuments" name="getRecentDocuments"></wsdl:input>
      <wsdl:output message="ns1:getRecentDocumentsResponse" name="getRecentDocumentsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExtractedText">
      <wsdl:input message="ns1:getExtractedText" name="getExtractedText"></wsdl:input>
      <wsdl:output message="ns1:getExtractedTextResponse" name="getExtractedTextResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addNote">
      <wsdl:input message="ns1:addNote" name="addNote"></wsdl:input>
      <wsdl:output message="ns1:addNoteResponse" name="addNoteResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rename">
      <wsdl:input message="ns1:rename" name="rename"></wsdl:input>
      <wsdl:output message="ns1:renameResponse" name="renameResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unsetPassword">
      <wsdl:input message="ns1:unsetPassword" name="unsetPassword"></wsdl:input>
      <wsdl:output message="ns1:unsetPasswordResponse" name="unsetPasswordResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="renameFile">
      <wsdl:input message="ns1:renameFile" name="renameFile"></wsdl:input>
      <wsdl:output message="ns1:renameFileResponse" name="renameFileResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createPdf">
      <wsdl:input message="ns1:createPdf" name="createPdf"></wsdl:input>
      <wsdl:output message="ns1:createPdfResponse" name="createPdfResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadable">
      <wsdl:input message="ns1:isReadable" name="isReadable"></wsdl:input>
      <wsdl:output message="ns1:isReadableResponse" name="isReadableResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint></con:endpoints><con:operation id="9eedd65a-dc83-4385-8697-8f722054a28b" isOneWay="false" action="" name="addNote" bindingOperationName="addNote" type="Request-Response" outputName="addNoteResponse" inputName="addNote" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4554864d-af8a-460e-af3f-a306cb5baf43" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:addNote>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
         <!--Optional:-->\r
         <note>?</note>\r
      </ws:addNote>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/addNote"/></con:call></con:operation><con:operation id="85864271-143b-4289-9e05-51d634d696a8" isOneWay="false" action="" name="checkin" bindingOperationName="checkin" type="Request-Response" outputName="checkinResponse" inputName="checkin" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="781e5f38-05ad-4124-9f13-5607f0104ff5" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:checkin>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
         <!--Optional:-->\r
         <comment>?</comment>\r
         <!--Optional:-->\r
         <filename>?</filename>\r
         <release>?</release>\r
         <!--Optional:-->\r
         <content>cid:1256731740657</content>\r
      </ws:checkin>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/checkin"/></con:call></con:operation><con:operation id="44a7c46a-405b-4bd6-855d-9ea9c1a4c43b" isOneWay="false" action="" name="checkout" bindingOperationName="checkout" type="Request-Response" outputName="checkoutResponse" inputName="checkout" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8b6b798b-261f-4408-b524-aa29c26380ab" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:checkout>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
      </ws:checkout>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/checkout"/></con:call></con:operation><con:operation id="41fb4f60-518c-4516-a53d-197418540394" isOneWay="false" action="" name="create" bindingOperationName="create" type="Request-Response" outputName="createResponse" inputName="create" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="255e7207-1956-4737-b8d4-a03fc1a35786" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:create>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <!--Optional:-->\r
         <document>\r
            <!--Zero or more repetitions:-->\r
            <attributes>\r
               <!--Optional:-->\r
               <dateValue>?</dateValue>\r
               <!--Optional:-->\r
               <doubleValue>?</doubleValue>\r
               <editor>?</editor>\r
               <!--Optional:-->\r
               <intValue>?</intValue>\r
               <!--Optional:-->\r
               <label>?</label>\r
               <mandatory>?</mandatory>\r
               <!--Optional:-->\r
               <name>?</name>\r
               <position>?</position>\r
               <!--Optional:-->\r
               <setId>?</setId>\r
               <!--Optional:-->\r
               <stringValue>?</stringValue>\r
               <type>?</type>\r
               <!--Optional:-->\r
               <value>?</value>\r
            </attributes>\r
            <!--Optional:-->\r
            <comment>?</comment>\r
            <!--Optional:-->\r
            <creation>?</creation>\r
            <!--Optional:-->\r
            <creator>?</creator>\r
            <creatorId>?</creatorId>\r
            <!--Optional:-->\r
            <customId>?</customId>\r
            <!--Optional:-->\r
            <date>?</date>\r
            <!--Optional:-->\r
            <deleteUserId>?</deleteUserId>\r
            <!--Optional:-->\r
            <digest>?</digest>\r
            <!--Optional:-->\r
            <docRef>?</docRef>\r
            <!--Optional:-->\r
            <docRefType>?</docRefType>\r
            <!--Optional:-->\r
            <exportId>?</exportId>\r
            <!--Optional:-->\r
            <exportName>?</exportName>\r
            <exportStatus>?</exportStatus>\r
            <!--Optional:-->\r
            <fileName>?</fileName>\r
            <fileSize>?</fileSize>\r
            <!--Optional:-->\r
            <fileVersion>?</fileVersion>\r
            <!--Optional:-->\r
            <folderId>?</folderId>\r
            <!--Optional:-->\r
            <formId>?</formId>\r
            <!--Optional:-->\r
            <icon>?</icon>\r
            <id>?</id>\r
            <immutable>?</immutable>\r
            <indexed>?</indexed>\r
            <!--Optional:-->\r
            <language>?</language>\r
            <!--Optional:-->\r
            <lastModified>?</lastModified>\r
            <!--Optional:-->\r
            <lockUserId>?</lockUserId>\r
            <nature>?</nature>\r
            <pages>?</pages>\r
            <!--Optional:-->\r
            <passwordProtected>?</passwordProtected>\r
            <!--Optional:-->\r
            <path>?</path>\r
            <published>?</published>\r
            <!--Optional:-->\r
            <publisher>?</publisher>\r
            <publisherId>?</publisherId>\r
            <!--Optional:-->\r
            <rating>?</rating>\r
            <!--Optional:-->\r
            <score>?</score>\r
            <signed>?</signed>\r
            <stamped>?</stamped>\r
            <!--Optional:-->\r
            <startPublishing>?</startPublishing>\r
            <status>?</status>\r
            <!--Optional:-->\r
            <stopPublishing>?</stopPublishing>\r
            <!--Optional:-->\r
            <summary>?</summary>\r
            <!--Zero or more repetitions:-->\r
            <tags>?</tags>\r
            <!--Optional:-->\r
            <templateId>?</templateId>\r
            <!--Optional:-->\r
            <title>?</title>\r
            <!--Optional:-->\r
            <type>?</type>\r
            <!--Optional:-->\r
            <version>?</version>\r
            <!--Optional:-->\r
            <workflowStatus>?</workflowStatus>\r
         </document>\r
         <!--Optional:-->\r
         <content>cid:1227959867564</content>\r
      </ws:create>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/create"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="7f21d383-9b6f-4538-bed5-b41d260583dd" isOneWay="false" action="" name="createAlias" bindingOperationName="createAlias" type="Request-Response" outputName="createAliasResponse" inputName="createAlias" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1a5a3920-2893-4d22-9e9c-5d32cf92c6bb" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:createAlias>
         <!--Optional:-->
         <sid>b319bc07-750c-4444-8f90-f3f9d934bbef</sid>
         <docId>1</docId>
         <folderId>3375124</folderId><type>1</type>
         <!--Optional:-->
         
      </ws:createAlias>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/createAlias"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="02b66d41-244d-4a97-a160-3fd0ac038349" isOneWay="false" action="" name="createDownloadTicket" bindingOperationName="createDownloadTicket" type="Request-Response" outputName="createDownloadTicketResponse" inputName="createDownloadTicket" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fce3f4b2-8f8b-47dd-b600-1c50f6d93722" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:createDownloadTicket>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
         <!--Optional:-->\r
         <suffix>?</suffix>\r
         <!--Optional:-->\r
         <expireHours>?</expireHours>\r
         <!--Optional:-->\r
         <expireDate>?</expireDate>\r
      </ws:createDownloadTicket>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/createDownloadTicket"/></con:call></con:operation><con:operation id="e5683507-3721-4c6d-8537-b468b16a6222" isOneWay="false" action="" name="createPdf" bindingOperationName="createPdf" type="Request-Response" outputName="createPdfResponse" inputName="createPdf" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="09052107-5c6e-4e16-b076-458d750fb8f0" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:createPdf>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
         <!--Optional:-->\r
         <fileVersion>?</fileVersion>\r
      </ws:createPdf>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/createPdf"/></con:call></con:operation><con:operation id="29eb8cc9-c51e-4f6e-9310-33513f5dc0df" isOneWay="false" action="" name="delete" bindingOperationName="delete" type="Request-Response" outputName="deleteResponse" inputName="delete" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f74955b4-a460-49e0-913f-dc3b815feb5f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:delete>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
      </ws:delete>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/delete"/></con:call></con:operation><con:operation id="6078ad3a-0817-4eb1-85db-ebe8d4727793" isOneWay="false" action="" name="deleteLink" bindingOperationName="deleteLink" type="Request-Response" outputName="deleteLinkResponse" inputName="deleteLink" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2556d52f-688e-4378-a561-cfcaa9311b4e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:deleteLink>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <id>?</id>\r
      </ws:deleteLink>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/deleteLink"/></con:call></con:operation><con:operation id="cb40ecf3-d9d0-48a4-85b7-c0e52c90ec91" isOneWay="false" action="" name="deleteNote" bindingOperationName="deleteNote" type="Request-Response" outputName="deleteNoteResponse" inputName="deleteNote" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="eb89f291-4901-4cd4-be91-4d73b998e48e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:deleteNote>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <noteId>?</noteId>\r
      </ws:deleteNote>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/deleteNote"/></con:call></con:operation><con:operation id="66e321a7-a2c2-4275-ba25-6b3888e1a171" isOneWay="false" action="" name="deleteVersion" bindingOperationName="deleteVersion" type="Request-Response" outputName="deleteVersionResponse" inputName="deleteVersion" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7ef67db1-f77e-48e7-8825-65e0133c91ca" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:deleteVersion>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
         <!--Optional:-->\r
         <version>?</version>\r
      </ws:deleteVersion>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/deleteVersion"/></con:call></con:operation><con:operation id="6b5c98ba-dd1e-4992-a50d-e8c03671a181" isOneWay="false" action="" name="getAliases" bindingOperationName="getAliases" type="Request-Response" outputName="getAliasesResponse" inputName="getAliases" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b8bbfe39-7c56-4134-80cc-5c5c0a4fda52" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getAliases>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
      </ws:getAliases>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getAliases"/></con:call></con:operation><con:operation id="fea550b8-7a92-44f5-858a-e13611ddddb2" isOneWay="false" action="" name="getContent" bindingOperationName="getContent" type="Request-Response" outputName="getContentResponse" inputName="getContent" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="dce2b969-8aa3-440f-9cd5-6d82f0693515" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getContent>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
      </ws:getContent>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getContent"/></con:call></con:operation><con:operation id="69b4c6b1-259f-425f-8d84-87e3dcf8094f" isOneWay="false" action="" name="getDocument" bindingOperationName="getDocument" type="Request-Response" outputName="getDocumentResponse" inputName="getDocument" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="59b1dc91-86b6-4e9d-ac90-8685772ad8da" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getDocument>
         <!--Optional:-->
         
         <sid>9f8509e3-1d35-458d-a834-0a75f909f205</sid><docId>3407875</docId>
      </ws:getDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getDocument"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="bbf0802f-b996-4552-bbe4-e820054be60b" isOneWay="false" action="" name="getDocumentByCustomId" bindingOperationName="getDocumentByCustomId" type="Request-Response" outputName="getDocumentByCustomIdResponse" inputName="getDocumentByCustomId" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="216ec525-8f76-4309-87d8-3639245af23d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getDocumentByCustomId>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <!--Optional:-->\r
         <customId>?</customId>\r
      </ws:getDocumentByCustomId>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getDocumentByCustomId"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="adc3af72-2cd7-4f1d-a22c-535d013fa559" isOneWay="false" action="" name="getDocuments" bindingOperationName="getDocuments" type="Request-Response" outputName="getDocumentsResponse" inputName="getDocuments" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ee86dd6a-27c8-4ccb-a6c2-7dad5d2969ba" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getDocuments>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <!--Zero or more repetitions:-->\r
         <docIds>?</docIds>\r
      </ws:getDocuments>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getDocuments"/></con:call></con:operation><con:operation id="95a3729c-960f-483c-85eb-8f92d8886614" isOneWay="false" action="" name="getExtractedText" bindingOperationName="getExtractedText" type="Request-Response" outputName="getExtractedTextResponse" inputName="getExtractedText" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e560a6ca-ebee-4fe5-bf36-641da6321a99" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getExtractedText>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
      </ws:getExtractedText>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getExtractedText"/></con:call></con:operation><con:operation id="60634cd3-6cf7-413b-a703-a2142deb5a7e" isOneWay="false" action="" name="getLinks" bindingOperationName="getLinks" type="Request-Response" outputName="getLinksResponse" inputName="getLinks" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="471b4a75-7678-4c3e-ba34-9e4ec3aa743b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getLinks>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
      </ws:getLinks>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getLinks"/></con:call></con:operation><con:operation id="b52bad3b-c263-4b8e-809e-7b0ff91ccd3f" isOneWay="false" action="" name="getNotes" bindingOperationName="getNotes" type="Request-Response" outputName="getNotesResponse" inputName="getNotes" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="85fb959a-d058-4770-ab29-6699e371b7b7" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getNotes>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
      </ws:getNotes>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getNotes"/></con:call></con:operation><con:operation id="be68fb14-f69e-45c9-bc10-abfd16c30143" isOneWay="false" action="" name="getRatings" bindingOperationName="getRatings" type="Request-Response" outputName="getRatingsResponse" inputName="getRatings" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="eeaac35b-4e30-49ad-8b3d-692ef3f96bbe" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getRatings>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
      </ws:getRatings>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getRatings"/></con:call></con:operation><con:operation id="547234b2-6076-43a7-a00e-b78ad4747c3c" isOneWay="false" action="" name="getRecentDocuments" bindingOperationName="getRecentDocuments" type="Request-Response" outputName="getRecentDocumentsResponse" inputName="getRecentDocuments" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="af94685b-6699-4f0c-8194-1902d8f8e55d" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getRecentDocuments>
         <!--Optional:-->
         <sid>?</sid>
         <!--Optional:-->
         <maxHits>?</maxHits>
      </ws:getRecentDocuments>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getRecentDocuments"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="64f1e4a3-2a91-46ff-bed6-73e51fce99c5" isOneWay="false" action="" name="getResource" bindingOperationName="getResource" type="Request-Response" outputName="getResourceResponse" inputName="getResource" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6e2ed43c-19a2-4260-bf4f-8f8fc859469c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getResource>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
         <!--Optional:-->\r
         <fileVersion>?</fileVersion>\r
         <!--Optional:-->\r
         <suffix>?</suffix>\r
      </ws:getResource>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getResource"/></con:call></con:operation><con:operation id="1f32cf19-8001-4b30-9f18-127527cd007c" isOneWay="false" action="" name="getVersionContent" bindingOperationName="getVersionContent" type="Request-Response" outputName="getVersionContentResponse" inputName="getVersionContent" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ef707338-9b74-4264-966f-2b9647ea6fdc" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getVersionContent>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
         <!--Optional:-->\r
         <version>?</version>\r
      </ws:getVersionContent>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getVersionContent"/></con:call></con:operation><con:operation id="ff169777-08ae-4122-b7b8-aaf0b553d047" isOneWay="false" action="" name="getVersions" bindingOperationName="getVersions" type="Request-Response" outputName="getVersionsResponse" inputName="getVersions" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="25cbc886-a10b-4ca6-8cc0-f53f179cc6cb" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getVersions>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
      </ws:getVersions>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getVersions"/></con:call></con:operation><con:operation id="800852ee-7e4e-44cc-973f-3366271a98f8" isOneWay="false" action="" name="isReadable" bindingOperationName="isReadable" type="Request-Response" outputName="isReadableResponse" inputName="isReadable" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="64d3e3f6-5a5c-4b48-93e3-2c6e1387d77f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:isReadable>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
      </ws:isReadable>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/isReadable"/></con:call></con:operation><con:operation id="6e04633d-db11-4e3e-b565-5ac3bca2de5c" isOneWay="false" action="" name="link" bindingOperationName="link" type="Request-Response" outputName="linkResponse" inputName="link" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="73ce388d-959c-4374-8279-edebee0d1437" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:link>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <doc1>?</doc1>\r
         <doc2>?</doc2>\r
         <!--Optional:-->\r
         <type>?</type>\r
      </ws:link>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/link"/></con:call></con:operation><con:operation id="8edef0df-a7cb-4f8f-9a10-041060a35e27" isOneWay="false" action="" name="listDocuments" bindingOperationName="listDocuments" type="Request-Response" outputName="listDocumentsResponse" inputName="listDocuments" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b69c3907-b5e5-4f0d-95a4-21832e7999c6" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:listDocuments>
         <!--Optional:-->
         <sid>?</sid>
         <folderId>?</folderId>
         <!--Optional:-->
         <fileName>?</fileName>
      </ws:listDocuments>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/listDocuments"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="1a9a78e7-4701-49d7-93e8-020d82f3a7ae" isOneWay="false" action="" name="lock" bindingOperationName="lock" type="Request-Response" outputName="lockResponse" inputName="lock" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d4fe9630-8797-4c28-8466-c4b92a342b8a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:lock>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
      </ws:lock>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/lock"/></con:call></con:operation><con:operation id="1e077df0-bb43-487f-9f14-16fb2de79eb1" isOneWay="false" action="" name="move" bindingOperationName="move" type="Request-Response" outputName="moveResponse" inputName="move" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9ecb01b1-8590-4f6c-a143-e4ee51edb9c9" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:move>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
         <folderId>?</folderId>\r
      </ws:move>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/move"/></con:call></con:operation><con:operation id="3f4c1a50-fa1b-4315-820b-a0e93b253b1c" isOneWay="false" action="" name="rateDocument" bindingOperationName="rateDocument" type="Request-Response" outputName="rateDocumentResponse" inputName="rateDocument" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8634518c-7446-4803-b79c-3c721c54b60b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:rateDocument>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
         <vote>?</vote>\r
      </ws:rateDocument>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/rateDocument"/></con:call></con:operation><con:operation id="cd926269-6120-4ec7-a45e-aa398f20a6fb" isOneWay="false" action="" name="reindex" bindingOperationName="reindex" type="Request-Response" outputName="reindexResponse" inputName="reindex" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1b2491f1-f4d3-40f2-99ab-8182b6182db7" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:reindex>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
         <!--Optional:-->\r
         <content>?</content>\r
      </ws:reindex>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/reindex"/></con:call></con:operation><con:operation id="57b57082-5375-4ccb-9257-b23cfee898be" isOneWay="false" action="" name="rename" bindingOperationName="rename" type="Request-Response" outputName="renameResponse" inputName="rename" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a28975a5-af2c-4bfb-9a8c-fbd5db2f5c25" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:rename>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
         <!--Optional:-->\r
         <name>?</name>\r
      </ws:rename>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/rename"/></con:call></con:operation><con:operation id="01ce4a16-442b-4664-8b95-ecc2024a3d62" isOneWay="false" action="" name="renameFile" bindingOperationName="renameFile" type="Request-Response" outputName="renameFileResponse" inputName="renameFile" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4956e63e-9593-4d64-8e50-4a32294b5c66" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:renameFile>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
         <!--Optional:-->\r
         <name>?</name>\r
      </ws:renameFile>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/renameFile"/></con:call></con:operation><con:operation id="efc38a0a-20bf-4713-af45-c57e0efb036a" isOneWay="false" action="" name="restore" bindingOperationName="restore" type="Request-Response" outputName="restoreResponse" inputName="restore" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5dc78f32-db71-4bfe-aa1d-f6ffcc58066b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:restore>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
         <folderId>?</folderId>\r
      </ws:restore>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/restore"/></con:call></con:operation><con:operation id="d2c42f22-341c-49f1-9556-80f7951089d5" isOneWay="false" action="" name="sendEmail" bindingOperationName="sendEmail" type="Request-Response" outputName="sendEmailResponse" inputName="sendEmail" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f5ba3b22-d4b4-4042-b456-4345ea618436" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:sendEmail>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <!--Zero or more repetitions:-->\r
         <docIds>?</docIds>\r
         <!--Optional:-->\r
         <recipients>?</recipients>\r
         <!--Optional:-->\r
         <subject>?</subject>\r
         <!--Optional:-->\r
         <message>?</message>\r
      </ws:sendEmail>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/sendEmail"/></con:call></con:operation><con:operation id="208a93ef-af53-4f47-9671-4a8b0d019026" isOneWay="false" action="" name="setPassword" bindingOperationName="setPassword" type="Request-Response" outputName="setPasswordResponse" inputName="setPassword" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="57f1ab0f-30b5-4a84-afa6-125c4cacaaf5" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:setPassword>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
         <!--Optional:-->\r
         <password>?</password>\r
      </ws:setPassword>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/setPassword"/></con:call></con:operation><con:operation id="692cf946-ba4a-4500-ba99-09cc144d4306" isOneWay="false" action="" name="unlock" bindingOperationName="unlock" type="Request-Response" outputName="unlockResponse" inputName="unlock" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cc6e2384-9290-4f35-884c-366626f1620f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:unlock>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
      </ws:unlock>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/unlock"/></con:call></con:operation><con:operation id="68947aa1-ae28-4910-a2fb-3f034b85f88b" isOneWay="false" action="" name="unprotect" bindingOperationName="unprotect" type="Request-Response" outputName="unprotectResponse" inputName="unprotect" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8972d3b9-bd12-489e-aa3a-43803e54ba9f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:unprotect>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
         <!--Optional:-->\r
         <password>?</password>\r
      </ws:unprotect>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/unprotect"/></con:call></con:operation><con:operation id="4b1841f1-837d-4725-a538-d5ad179e7c37" isOneWay="false" action="" name="unsetPassword" bindingOperationName="unsetPassword" type="Request-Response" outputName="unsetPasswordResponse" inputName="unsetPassword" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fda69f8e-6df9-4d38-8a85-eb852c6579f6" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:unsetPassword>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
         <!--Optional:-->\r
         <currentPassword>?</currentPassword>\r
      </ws:unsetPassword>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/unsetPassword"/></con:call></con:operation><con:operation id="c0bbf4bf-1d88-4a9a-9d5f-937e870ff1d9" isOneWay="false" action="" name="update" bindingOperationName="update" type="Request-Response" outputName="updateResponse" inputName="update" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a976b580-2a6c-4a42-9071-d443fb9cac1f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:update>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <!--Optional:-->\r
         <document>\r
            <!--Zero or more repetitions:-->\r
            <attributes>\r
               <!--Optional:-->\r
               <dateValue>?</dateValue>\r
               <!--Optional:-->\r
               <doubleValue>?</doubleValue>\r
               <editor>?</editor>\r
               <!--Optional:-->\r
               <intValue>?</intValue>\r
               <!--Optional:-->\r
               <label>?</label>\r
               <mandatory>?</mandatory>\r
               <!--Optional:-->\r
               <name>?</name>\r
               <position>?</position>\r
               <!--Optional:-->\r
               <setId>?</setId>\r
               <!--Optional:-->\r
               <stringValue>?</stringValue>\r
               <type>?</type>\r
               <!--Optional:-->\r
               <value>?</value>\r
            </attributes>\r
            <!--Optional:-->\r
            <comment>?</comment>\r
            <!--Optional:-->\r
            <creation>?</creation>\r
            <!--Optional:-->\r
            <creator>?</creator>\r
            <creatorId>?</creatorId>\r
            <!--Optional:-->\r
            <customId>?</customId>\r
            <!--Optional:-->\r
            <date>?</date>\r
            <!--Optional:-->\r
            <deleteUserId>?</deleteUserId>\r
            <!--Optional:-->\r
            <digest>?</digest>\r
            <!--Optional:-->\r
            <docRef>?</docRef>\r
            <!--Optional:-->\r
            <docRefType>?</docRefType>\r
            <!--Optional:-->\r
            <exportId>?</exportId>\r
            <!--Optional:-->\r
            <exportName>?</exportName>\r
            <exportStatus>?</exportStatus>\r
            <!--Optional:-->\r
            <fileName>?</fileName>\r
            <fileSize>?</fileSize>\r
            <!--Optional:-->\r
            <fileVersion>?</fileVersion>\r
            <!--Optional:-->\r
            <folderId>?</folderId>\r
            <!--Optional:-->\r
            <formId>?</formId>\r
            <!--Optional:-->\r
            <icon>?</icon>\r
            <id>?</id>\r
            <immutable>?</immutable>\r
            <indexed>?</indexed>\r
            <!--Optional:-->\r
            <language>?</language>\r
            <!--Optional:-->\r
            <lastModified>?</lastModified>\r
            <!--Optional:-->\r
            <lockUserId>?</lockUserId>\r
            <nature>?</nature>\r
            <pages>?</pages>\r
            <!--Optional:-->\r
            <passwordProtected>?</passwordProtected>\r
            <!--Optional:-->\r
            <path>?</path>\r
            <published>?</published>\r
            <!--Optional:-->\r
            <publisher>?</publisher>\r
            <publisherId>?</publisherId>\r
            <!--Optional:-->\r
            <rating>?</rating>\r
            <!--Optional:-->\r
            <score>?</score>\r
            <signed>?</signed>\r
            <stamped>?</stamped>\r
            <!--Optional:-->\r
            <startPublishing>?</startPublishing>\r
            <status>?</status>\r
            <!--Optional:-->\r
            <stopPublishing>?</stopPublishing>\r
            <!--Optional:-->\r
            <summary>?</summary>\r
            <!--Zero or more repetitions:-->\r
            <tags>?</tags>\r
            <!--Optional:-->\r
            <templateId>?</templateId>\r
            <!--Optional:-->\r
            <title>?</title>\r
            <!--Optional:-->\r
            <type>?</type>\r
            <!--Optional:-->\r
            <version>?</version>\r
            <!--Optional:-->\r
            <workflowStatus>?</workflowStatus>\r
         </document>\r
      </ws:update>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/update"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="af2778d6-8b76-41ce-b58d-17748492351e" isOneWay="false" action="" name="upload" bindingOperationName="upload" type="Request-Response" outputName="uploadResponse" inputName="upload" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b3906250-f275-48dc-b669-fd43118eac0d" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:upload>
         <!--Optional:-->
         <sid>?</sid>
         <!--Optional:-->
         <docId>?</docId>
         <!--Optional:-->
         <folderId>?</folderId>
         <release>true</release>
         <!--Optional:-->
         <filename>?</filename>
         <!--Optional:-->
         <language>?</language>
         <!--Optional:-->
         <content>cid:416219167540</content>
      </ws:upload>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/upload"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="8ffa9eb9-49c3-4a0b-9a3f-0225b2c14679" isOneWay="false" action="" name="uploadResource" bindingOperationName="uploadResource" type="Request-Response" outputName="uploadResourceResponse" inputName="uploadResource" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="95b29504-f5fe-4018-8111-da9364d1fcc9" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:uploadResource>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
         <!--Optional:-->\r
         <fileVersion>?</fileVersion>\r
         <!--Optional:-->\r
         <suffix>?</suffix>\r
         <!--Optional:-->\r
         <content>cid:124345820264</content>\r
      </ws:uploadResource>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/uploadResource"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="20bf2af6-1984-474a-a151-f89fbccfb3ee" wsaVersion="NONE" name="SoapFolderServiceServiceSoapBinding" type="wsdl" bindingName="{http://endpoint.soap.webservice.logicaldoc.com/}SoapFolderServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/logicaldoc/services/Folder?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/logicaldoc/services/Folder?wsdl"><con:part><con:url>http://localhost:8080/logicaldoc/services/Folder?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SoapFolderServiceService" targetNamespace="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:import location="http://localhost:8080/logicaldoc/services/Folder?wsdl=Folder.wsdl" namespace="http://ws.logicaldoc.com"></wsdl:import>
  <wsdl:binding name="SoapFolderServiceServiceSoapBinding" type="ns1:Folder">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="move">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="move">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="moveResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGrantedUsers">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getGrantedUsers">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getGrantedUsersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findByPath">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findByPath">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findByPathResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listWorkspaces">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="listWorkspaces">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listWorkspacesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="update">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="update">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="grantUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="grantUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="grantUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="delete">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGrantedGroups">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getGrantedGroups">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getGrantedGroupsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDefaultWorkspace">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDefaultWorkspace">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDefaultWorkspaceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getFolder">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getFolder">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getFolderResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rename">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="rename">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="renameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="grantGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="grantGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="grantGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isGranted">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isGranted">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isGrantedResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPath">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getPath">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPathResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="create">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="create">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="copy">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="copy">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="copyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createFolder">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createFolder">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createFolderResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createPath">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createPath">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createPathResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadable">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isReadable">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isReadableResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAlias">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createAlias">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAliasResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRootFolder">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRootFolder">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRootFolderResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listChildren">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="listChildren">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listChildrenResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isWriteable">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isWriteable">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isWriteableResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SoapFolderServiceService">
    <wsdl:port binding="tns:SoapFolderServiceServiceSoapBinding" name="SoapFolderServicePort">
      <soap:address location="http://localhost:8080/logicaldoc/services/Folder"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/logicaldoc/services/Folder?wsdl=Folder.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="Folder" targetNamespace="http://ws.logicaldoc.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://ws.logicaldoc.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ws.logicaldoc.com">
      <xs:element name="attribute" type="tns:WSAttribute"/>
      <xs:element name="copy" type="tns:copy"/>
      <xs:element name="copyResponse" type="tns:copyResponse"/>
      <xs:element name="create" type="tns:create"/>
      <xs:element name="createAlias" type="tns:createAlias"/>
      <xs:element name="createAliasResponse" type="tns:createAliasResponse"/>
      <xs:element name="createFolder" type="tns:createFolder"/>
      <xs:element name="createFolderResponse" type="tns:createFolderResponse"/>
      <xs:element name="createPath" type="tns:createPath"/>
      <xs:element name="createPathResponse" type="tns:createPathResponse"/>
      <xs:element name="createResponse" type="tns:createResponse"/>
      <xs:element name="delete" type="tns:delete"/>
      <xs:element name="deleteResponse" type="tns:deleteResponse"/>
      <xs:element name="findByPath" type="tns:findByPath"/>
      <xs:element name="findByPathResponse" type="tns:findByPathResponse"/>
      <xs:element name="folder" type="tns:WSFolder"/>
      <xs:element name="getDefaultWorkspace" type="tns:getDefaultWorkspace"/>
      <xs:element name="getDefaultWorkspaceResponse" type="tns:getDefaultWorkspaceResponse"/>
      <xs:element name="getFolder" type="tns:getFolder"/>
      <xs:element name="getFolderResponse" type="tns:getFolderResponse"/>
      <xs:element name="getGrantedGroups" type="tns:getGrantedGroups"/>
      <xs:element name="getGrantedGroupsResponse" type="tns:getGrantedGroupsResponse"/>
      <xs:element name="getGrantedUsers" type="tns:getGrantedUsers"/>
      <xs:element name="getGrantedUsersResponse" type="tns:getGrantedUsersResponse"/>
      <xs:element name="getPath" type="tns:getPath"/>
      <xs:element name="getPathResponse" type="tns:getPathResponse"/>
      <xs:element name="getRootFolder" type="tns:getRootFolder"/>
      <xs:element name="getRootFolderResponse" type="tns:getRootFolderResponse"/>
      <xs:element name="grantGroup" type="tns:grantGroup"/>
      <xs:element name="grantGroupResponse" type="tns:grantGroupResponse"/>
      <xs:element name="grantUser" type="tns:grantUser"/>
      <xs:element name="grantUserResponse" type="tns:grantUserResponse"/>
      <xs:element name="isGranted" type="tns:isGranted"/>
      <xs:element name="isGrantedResponse" type="tns:isGrantedResponse"/>
      <xs:element name="isReadable" type="tns:isReadable"/>
      <xs:element name="isReadableResponse" type="tns:isReadableResponse"/>
      <xs:element name="isWriteable" type="tns:isWriteable"/>
      <xs:element name="isWriteableResponse" type="tns:isWriteableResponse"/>
      <xs:element name="listChildren" type="tns:listChildren"/>
      <xs:element name="listChildrenResponse" type="tns:listChildrenResponse"/>
      <xs:element name="listWorkspaces" type="tns:listWorkspaces"/>
      <xs:element name="listWorkspacesResponse" type="tns:listWorkspacesResponse"/>
      <xs:element name="move" type="tns:move"/>
      <xs:element name="moveResponse" type="tns:moveResponse"/>
      <xs:element name="rename" type="tns:rename"/>
      <xs:element name="renameResponse" type="tns:renameResponse"/>
      <xs:element name="update" type="tns:update"/>
      <xs:element name="updateResponse" type="tns:updateResponse"/>
      <xs:complexType name="move">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
          <xs:element name="parentId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="moveResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="findByPath">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="path" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findByPathResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSFolder">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" nillable="true" type="tns:WSAttribute"/>
          <xs:element minOccurs="0" name="creation" type="xs:string"/>
          <xs:element minOccurs="0" name="creator" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="foldRef" type="xs:long"/>
          <xs:element name="hidden" type="xs:int"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="lastModified" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="parentId" type="xs:long"/>
          <xs:element name="position" type="xs:int"/>
          <xs:element minOccurs="0" name="storage" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tags" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="templateId" type="xs:long"/>
          <xs:element name="templateLocked" type="xs:int"/>
          <xs:element name="type" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSAttribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="dateValue" type="xs:string"/>
          <xs:element minOccurs="0" name="doubleValue" type="xs:double"/>
          <xs:element name="editor" type="xs:int"/>
          <xs:element minOccurs="0" name="intValue" type="xs:long"/>
          <xs:element minOccurs="0" name="label" type="xs:string"/>
          <xs:element name="mandatory" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="position" type="xs:int"/>
          <xs:element minOccurs="0" name="setId" type="xs:long"/>
          <xs:element minOccurs="0" name="stringValue" type="xs:string"/>
          <xs:element name="type" type="xs:int"/>
          <xs:element minOccurs="0" name="value" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getGrantedUsers">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getGrantedUsersResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:WSRight"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSRight">
        <xs:sequence>
          <xs:element name="id" type="xs:long"/>
          <xs:element name="permissions" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listWorkspaces">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listWorkspacesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="workspaces" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="update">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="grantUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
          <xs:element name="userId" type="xs:long"/>
          <xs:element name="permissions" type="xs:int"/>
          <xs:element name="recursive" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="grantUserResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="delete">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getGrantedGroups">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getGrantedGroupsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:WSRight"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDefaultWorkspace">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDefaultWorkspaceResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="workspace" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getFolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getFolderResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="rename">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="renameResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="grantGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
          <xs:element name="groupId" type="xs:long"/>
          <xs:element name="permissions" type="xs:int"/>
          <xs:element name="recursive" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="grantGroupResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="isGranted">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
          <xs:element name="permission" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="isGrantedResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getPath">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getPathResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="folders" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="create">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="copy">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
          <xs:element name="targetId" type="xs:long"/>
          <xs:element name="foldersOnly" type="xs:int"/>
          <xs:element name="inheritSecurity" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="copyResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="createFolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="parentId" type="xs:long"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createFolderResponse">
        <xs:sequence>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createPath">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="parentId" type="xs:long"/>
          <xs:element minOccurs="0" name="path" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createPathResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="isReadable">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="isReadableResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createAlias">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="arg1" type="xs:long"/>
          <xs:element name="arg2" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createAliasResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRootFolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRootFolderResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listChildren">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listChildrenResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="isWriteable">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="isWriteableResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Exception" type="tns:Exception"/>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getGrantedUsersResponse">
    <wsdl:part element="ns1:getGrantedUsersResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGrantedGroupsResponse">
    <wsdl:part element="ns1:getGrantedGroupsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPathResponse">
    <wsdl:part element="ns1:getPathResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findByPath">
    <wsdl:part element="ns1:findByPath" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listWorkspaces">
    <wsdl:part element="ns1:listWorkspaces" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="update">
    <wsdl:part element="ns1:update" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="moveResponse">
    <wsdl:part element="ns1:moveResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findByPathResponse">
    <wsdl:part element="ns1:findByPathResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="grantUser">
    <wsdl:part element="ns1:grantUser" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="delete">
    <wsdl:part element="ns1:delete" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFolder">
    <wsdl:part element="ns1:getFolder" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="isReadableResponse">
    <wsdl:part element="ns1:isReadableResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteResponse">
    <wsdl:part element="ns1:deleteResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="grantGroup">
    <wsdl:part element="ns1:grantGroup" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFolderResponse">
    <wsdl:part element="ns1:getFolderResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="renameResponse">
    <wsdl:part element="ns1:renameResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="isGranted">
    <wsdl:part element="ns1:isGranted" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPath">
    <wsdl:part element="ns1:getPath" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="create">
    <wsdl:part element="ns1:create" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="copy">
    <wsdl:part element="ns1:copy" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createFolder">
    <wsdl:part element="ns1:createFolder" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createPath">
    <wsdl:part element="ns1:createPath" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAlias">
    <wsdl:part element="ns1:createAlias" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="isWriteable">
    <wsdl:part element="ns1:isWriteable" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="isGrantedResponse">
    <wsdl:part element="ns1:isGrantedResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createFolderResponse">
    <wsdl:part element="ns1:createFolderResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRootFolderResponse">
    <wsdl:part element="ns1:getRootFolderResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="move">
    <wsdl:part element="ns1:move" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAliasResponse">
    <wsdl:part element="ns1:createAliasResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="isWriteableResponse">
    <wsdl:part element="ns1:isWriteableResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createPathResponse">
    <wsdl:part element="ns1:createPathResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGrantedUsers">
    <wsdl:part element="ns1:getGrantedUsers" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createResponse">
    <wsdl:part element="ns1:createResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDefaultWorkspaceResponse">
    <wsdl:part element="ns1:getDefaultWorkspaceResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGrantedGroups">
    <wsdl:part element="ns1:getGrantedGroups" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="Exception">
    <wsdl:part element="ns1:Exception" name="Exception"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listWorkspacesResponse">
    <wsdl:part element="ns1:listWorkspacesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDefaultWorkspace">
    <wsdl:part element="ns1:getDefaultWorkspace" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="grantUserResponse">
    <wsdl:part element="ns1:grantUserResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="copyResponse">
    <wsdl:part element="ns1:copyResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="rename">
    <wsdl:part element="ns1:rename" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="grantGroupResponse">
    <wsdl:part element="ns1:grantGroupResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listChildrenResponse">
    <wsdl:part element="ns1:listChildrenResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="isReadable">
    <wsdl:part element="ns1:isReadable" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateResponse">
    <wsdl:part element="ns1:updateResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRootFolder">
    <wsdl:part element="ns1:getRootFolder" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listChildren">
    <wsdl:part element="ns1:listChildren" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="Folder">
    <wsdl:operation name="move">
      <wsdl:input message="ns1:move" name="move"></wsdl:input>
      <wsdl:output message="ns1:moveResponse" name="moveResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findByPath">
      <wsdl:input message="ns1:findByPath" name="findByPath"></wsdl:input>
      <wsdl:output message="ns1:findByPathResponse" name="findByPathResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGrantedUsers">
      <wsdl:input message="ns1:getGrantedUsers" name="getGrantedUsers"></wsdl:input>
      <wsdl:output message="ns1:getGrantedUsersResponse" name="getGrantedUsersResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listWorkspaces">
      <wsdl:input message="ns1:listWorkspaces" name="listWorkspaces"></wsdl:input>
      <wsdl:output message="ns1:listWorkspacesResponse" name="listWorkspacesResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="update">
      <wsdl:input message="ns1:update" name="update"></wsdl:input>
      <wsdl:output message="ns1:updateResponse" name="updateResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="grantUser">
      <wsdl:input message="ns1:grantUser" name="grantUser"></wsdl:input>
      <wsdl:output message="ns1:grantUserResponse" name="grantUserResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <wsdl:input message="ns1:delete" name="delete"></wsdl:input>
      <wsdl:output message="ns1:deleteResponse" name="deleteResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGrantedGroups">
      <wsdl:input message="ns1:getGrantedGroups" name="getGrantedGroups"></wsdl:input>
      <wsdl:output message="ns1:getGrantedGroupsResponse" name="getGrantedGroupsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDefaultWorkspace">
      <wsdl:input message="ns1:getDefaultWorkspace" name="getDefaultWorkspace"></wsdl:input>
      <wsdl:output message="ns1:getDefaultWorkspaceResponse" name="getDefaultWorkspaceResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getFolder">
      <wsdl:input message="ns1:getFolder" name="getFolder"></wsdl:input>
      <wsdl:output message="ns1:getFolderResponse" name="getFolderResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rename">
      <wsdl:input message="ns1:rename" name="rename"></wsdl:input>
      <wsdl:output message="ns1:renameResponse" name="renameResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="grantGroup">
      <wsdl:input message="ns1:grantGroup" name="grantGroup"></wsdl:input>
      <wsdl:output message="ns1:grantGroupResponse" name="grantGroupResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isGranted">
      <wsdl:input message="ns1:isGranted" name="isGranted"></wsdl:input>
      <wsdl:output message="ns1:isGrantedResponse" name="isGrantedResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPath">
      <wsdl:input message="ns1:getPath" name="getPath"></wsdl:input>
      <wsdl:output message="ns1:getPathResponse" name="getPathResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="create">
      <wsdl:input message="ns1:create" name="create"></wsdl:input>
      <wsdl:output message="ns1:createResponse" name="createResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="copy">
      <wsdl:input message="ns1:copy" name="copy"></wsdl:input>
      <wsdl:output message="ns1:copyResponse" name="copyResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createFolder">
      <wsdl:input message="ns1:createFolder" name="createFolder"></wsdl:input>
      <wsdl:output message="ns1:createFolderResponse" name="createFolderResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createPath">
      <wsdl:input message="ns1:createPath" name="createPath"></wsdl:input>
      <wsdl:output message="ns1:createPathResponse" name="createPathResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadable">
      <wsdl:input message="ns1:isReadable" name="isReadable"></wsdl:input>
      <wsdl:output message="ns1:isReadableResponse" name="isReadableResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAlias">
      <wsdl:input message="ns1:createAlias" name="createAlias"></wsdl:input>
      <wsdl:output message="ns1:createAliasResponse" name="createAliasResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRootFolder">
      <wsdl:input message="ns1:getRootFolder" name="getRootFolder"></wsdl:input>
      <wsdl:output message="ns1:getRootFolderResponse" name="getRootFolderResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listChildren">
      <wsdl:input message="ns1:listChildren" name="listChildren"></wsdl:input>
      <wsdl:output message="ns1:listChildrenResponse" name="listChildrenResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isWriteable">
      <wsdl:input message="ns1:isWriteable" name="isWriteable"></wsdl:input>
      <wsdl:output message="ns1:isWriteableResponse" name="isWriteableResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint></con:endpoints><con:operation id="bf72b605-9fb7-40f7-8037-ca0d7ae3864f" isOneWay="false" action="" name="copy" bindingOperationName="copy" type="Request-Response" outputName="copyResponse" inputName="copy" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9e8f3ec0-cbc0-4de7-8865-0855b4d50d0e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:copy>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <folderId>?</folderId>\r
         <targetId>?</targetId>\r
         <foldersOnly>?</foldersOnly>\r
         <inheritSecurity>?</inheritSecurity>\r
      </ws:copy>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/copy"/></con:call></con:operation><con:operation id="2443b6dd-c4a7-4293-afce-d29cd971d461" isOneWay="false" action="" name="create" bindingOperationName="create" type="Request-Response" outputName="createResponse" inputName="create" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ba0d849d-fbc6-4946-85f8-91f154d46ffb" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:create>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <!--Optional:-->\r
         <folder>\r
            <!--Zero or more repetitions:-->\r
            <attributes>\r
               <!--Optional:-->\r
               <dateValue>?</dateValue>\r
               <!--Optional:-->\r
               <doubleValue>?</doubleValue>\r
               <editor>?</editor>\r
               <!--Optional:-->\r
               <intValue>?</intValue>\r
               <!--Optional:-->\r
               <label>?</label>\r
               <mandatory>?</mandatory>\r
               <!--Optional:-->\r
               <name>?</name>\r
               <position>?</position>\r
               <!--Optional:-->\r
               <setId>?</setId>\r
               <!--Optional:-->\r
               <stringValue>?</stringValue>\r
               <type>?</type>\r
               <!--Optional:-->\r
               <value>?</value>\r
            </attributes>\r
            <!--Optional:-->\r
            <creation>?</creation>\r
            <!--Optional:-->\r
            <creator>?</creator>\r
            <!--Optional:-->\r
            <description>?</description>\r
            <!--Optional:-->\r
            <foldRef>?</foldRef>\r
            <hidden>?</hidden>\r
            <id>?</id>\r
            <!--Optional:-->\r
            <lastModified>?</lastModified>\r
            <!--Optional:-->\r
            <name>?</name>\r
            <parentId>?</parentId>\r
            <position>?</position>\r
            <!--Optional:-->\r
            <storage>?</storage>\r
            <!--Zero or more repetitions:-->\r
            <tags>?</tags>\r
            <!--Optional:-->\r
            <templateId>?</templateId>\r
            <templateLocked>?</templateLocked>\r
            <type>?</type>\r
         </folder>\r
      </ws:create>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/create"/></con:call></con:operation><con:operation id="f41044b4-66eb-420f-9593-f806cd583a2c" isOneWay="false" action="" name="createAlias" bindingOperationName="createAlias" type="Request-Response" outputName="createAliasResponse" inputName="createAlias" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d3b45ff3-eb47-47a6-a846-62104bfdcd63" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:createAlias>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <arg1>?</arg1>\r
         <arg2>?</arg2>\r
      </ws:createAlias>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/createAlias"/></con:call></con:operation><con:operation id="3c4998d7-878e-4c16-b0b2-03ad83a6392c" isOneWay="false" action="" name="createFolder" bindingOperationName="createFolder" type="Request-Response" outputName="createFolderResponse" inputName="createFolder" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="50062bc3-3e0b-4258-9be4-5912e3665890" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:createFolder>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <parentId>?</parentId>\r
         <!--Optional:-->\r
         <name>?</name>\r
      </ws:createFolder>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/createFolder"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="00b5cfd1-7750-4dea-a3a8-138b32b44e2c" isOneWay="false" action="" name="createPath" bindingOperationName="createPath" type="Request-Response" outputName="createPathResponse" inputName="createPath" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4ec06ee8-f823-468c-abed-9159194c1cda" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:createPath>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <parentId>?</parentId>\r
         <!--Optional:-->\r
         <path>?</path>\r
      </ws:createPath>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/createPath"/></con:call></con:operation><con:operation id="5b29d92b-de90-47a9-a5f9-d4b44a7a04a1" isOneWay="false" action="" name="delete" bindingOperationName="delete" type="Request-Response" outputName="deleteResponse" inputName="delete" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1290c6ac-a421-42cf-8d52-e6853cdbc3ba" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:delete>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <folderId>?</folderId>\r
      </ws:delete>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/delete"/></con:call></con:operation><con:operation id="9c4cfd14-93fb-4a63-8a82-f927021afbf0" isOneWay="false" action="" name="findByPath" bindingOperationName="findByPath" type="Request-Response" outputName="findByPathResponse" inputName="findByPath" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b88db365-0bfc-48bc-83b7-5efff245844c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:findByPath>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <!--Optional:-->\r
         <path>?</path>\r
      </ws:findByPath>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/findByPath"/></con:call></con:operation><con:operation id="15f3e03b-c5df-4961-8095-857380874fba" isOneWay="false" action="" name="getDefaultWorkspace" bindingOperationName="getDefaultWorkspace" type="Request-Response" outputName="getDefaultWorkspaceResponse" inputName="getDefaultWorkspace" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="dd021de6-95c0-4a3b-b258-301de4ede9e6" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getDefaultWorkspace>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
      </ws:getDefaultWorkspace>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/getDefaultWorkspace"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="fc2454c9-ae0a-46ad-b00a-0006840aab14" isOneWay="false" action="" name="getFolder" bindingOperationName="getFolder" type="Request-Response" outputName="getFolderResponse" inputName="getFolder" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3e1a269c-98a2-4b9b-a3ac-4fa94eee2627" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getFolder>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <folderId>?</folderId>\r
      </ws:getFolder>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/getFolder"/></con:call></con:operation><con:operation id="ccdd7a68-7cbc-4e45-8f2c-e25790456024" isOneWay="false" action="" name="getGrantedGroups" bindingOperationName="getGrantedGroups" type="Request-Response" outputName="getGrantedGroupsResponse" inputName="getGrantedGroups" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ea1b1df8-ed34-4059-9e42-b93dcafce889" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getGrantedGroups>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <folderId>?</folderId>\r
      </ws:getGrantedGroups>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/getGrantedGroups"/></con:call></con:operation><con:operation id="4a888f7f-9f73-4f2c-b977-85990a824ab1" isOneWay="false" action="" name="getGrantedUsers" bindingOperationName="getGrantedUsers" type="Request-Response" outputName="getGrantedUsersResponse" inputName="getGrantedUsers" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="024f6a66-c3a9-4912-af19-282c752d1027" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getGrantedUsers>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <folderId>?</folderId>\r
      </ws:getGrantedUsers>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/getGrantedUsers"/></con:call></con:operation><con:operation id="70bfdb0d-e53e-4bd9-8ad2-892e8efc7a47" isOneWay="false" action="" name="getPath" bindingOperationName="getPath" type="Request-Response" outputName="getPathResponse" inputName="getPath" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2829f228-2fc1-4a19-9e25-48c66937929d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getPath>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <folderId>?</folderId>\r
      </ws:getPath>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/getPath"/></con:call></con:operation><con:operation id="62765a36-41ee-4451-87a0-59d51913e889" isOneWay="false" action="" name="getRootFolder" bindingOperationName="getRootFolder" type="Request-Response" outputName="getRootFolderResponse" inputName="getRootFolder" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="92fca8e3-5c5a-4e4d-9d5b-a408d51112d8" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getRootFolder>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
      </ws:getRootFolder>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/getRootFolder"/></con:call></con:operation><con:operation id="419a7e29-3ee8-4acb-aff9-cc53742e56f5" isOneWay="false" action="" name="grantGroup" bindingOperationName="grantGroup" type="Request-Response" outputName="grantGroupResponse" inputName="grantGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="82d889d6-7a6b-4345-a53b-5b6ba44376d1" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:grantGroup>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <folderId>?</folderId>\r
         <groupId>?</groupId>\r
         <permissions>?</permissions>\r
         <recursive>?</recursive>\r
      </ws:grantGroup>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/grantGroup"/></con:call></con:operation><con:operation id="07038765-d081-407e-bfa3-eb594249a7f0" isOneWay="false" action="" name="grantUser" bindingOperationName="grantUser" type="Request-Response" outputName="grantUserResponse" inputName="grantUser" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e68b586f-05c8-443a-89c6-cc745b3452e4" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:grantUser>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <folderId>?</folderId>\r
         <userId>?</userId>\r
         <permissions>?</permissions>\r
         <recursive>?</recursive>\r
      </ws:grantUser>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/grantUser"/></con:call></con:operation><con:operation id="c9058449-fc8d-4503-96e8-716ed06ddfad" isOneWay="false" action="" name="isGranted" bindingOperationName="isGranted" type="Request-Response" outputName="isGrantedResponse" inputName="isGranted" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e8405c8e-d9e2-4a15-9d51-ec3e4b72c724" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:isGranted>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <folderId>?</folderId>\r
         <permission>?</permission>\r
      </ws:isGranted>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/isGranted"/></con:call></con:operation><con:operation id="8f8a7d9c-a1c9-4537-9ef5-e66e67d636b3" isOneWay="false" action="" name="isReadable" bindingOperationName="isReadable" type="Request-Response" outputName="isReadableResponse" inputName="isReadable" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7c5b1fb4-63f3-44ba-87c2-a4b51d42331f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:isReadable>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <folderId>?</folderId>\r
      </ws:isReadable>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/isReadable"/></con:call></con:operation><con:operation id="c3e8918a-c970-45cd-917f-eef36e8faee7" isOneWay="false" action="" name="isWriteable" bindingOperationName="isWriteable" type="Request-Response" outputName="isWriteableResponse" inputName="isWriteable" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f12cf6a5-0740-4edc-ae30-45111ae375cc" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:isWriteable>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <folderId>?</folderId>\r
      </ws:isWriteable>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/isWriteable"/></con:call></con:operation><con:operation id="d13dfdee-31f2-4a24-882b-6a5d092a491c" isOneWay="false" action="" name="listChildren" bindingOperationName="listChildren" type="Request-Response" outputName="listChildrenResponse" inputName="listChildren" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="346c8f4b-1f74-40ca-96ae-68e89b00172d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:listChildren>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <folderId>?</folderId>\r
      </ws:listChildren>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/listChildren"/></con:call></con:operation><con:operation id="da4728d4-7eeb-469d-9c1f-243bfe48834f" isOneWay="false" action="" name="listWorkspaces" bindingOperationName="listWorkspaces" type="Request-Response" outputName="listWorkspacesResponse" inputName="listWorkspaces" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="678a970c-9b1b-4cf3-b5c6-8ee026762e8a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:listWorkspaces>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
      </ws:listWorkspaces>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/listWorkspaces"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="e7c63fbc-d4df-4a01-ac0c-7f2f2e570506" isOneWay="false" action="" name="move" bindingOperationName="move" type="Request-Response" outputName="moveResponse" inputName="move" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="352e9e59-e702-4852-843f-5235cc874d92" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:move>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <folderId>?</folderId>\r
         <parentId>?</parentId>\r
      </ws:move>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/move"/></con:call></con:operation><con:operation id="1d3ad23e-cbca-46b5-b05d-eb6d7a38be33" isOneWay="false" action="" name="rename" bindingOperationName="rename" type="Request-Response" outputName="renameResponse" inputName="rename" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5f7a3d8b-2548-4b4c-87cd-fefeddb5156b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:rename>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <folderId>?</folderId>\r
         <!--Optional:-->\r
         <name>?</name>\r
      </ws:rename>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/rename"/></con:call></con:operation><con:operation id="efe9a6fc-a7a0-47db-b1aa-f7260ab5e661" isOneWay="false" action="" name="update" bindingOperationName="update" type="Request-Response" outputName="updateResponse" inputName="update" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4a439f3f-e34f-4c42-9a26-ac8977ea1682" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:update>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <!--Optional:-->\r
         <folder>\r
            <!--Zero or more repetitions:-->\r
            <attributes>\r
               <!--Optional:-->\r
               <dateValue>?</dateValue>\r
               <!--Optional:-->\r
               <doubleValue>?</doubleValue>\r
               <editor>?</editor>\r
               <!--Optional:-->\r
               <intValue>?</intValue>\r
               <!--Optional:-->\r
               <label>?</label>\r
               <mandatory>?</mandatory>\r
               <!--Optional:-->\r
               <name>?</name>\r
               <position>?</position>\r
               <!--Optional:-->\r
               <setId>?</setId>\r
               <!--Optional:-->\r
               <stringValue>?</stringValue>\r
               <type>?</type>\r
               <!--Optional:-->\r
               <value>?</value>\r
            </attributes>\r
            <!--Optional:-->\r
            <creation>?</creation>\r
            <!--Optional:-->\r
            <creator>?</creator>\r
            <!--Optional:-->\r
            <description>?</description>\r
            <!--Optional:-->\r
            <foldRef>?</foldRef>\r
            <hidden>?</hidden>\r
            <id>?</id>\r
            <!--Optional:-->\r
            <lastModified>?</lastModified>\r
            <!--Optional:-->\r
            <name>?</name>\r
            <parentId>?</parentId>\r
            <position>?</position>\r
            <!--Optional:-->\r
            <storage>?</storage>\r
            <!--Zero or more repetitions:-->\r
            <tags>?</tags>\r
            <!--Optional:-->\r
            <templateId>?</templateId>\r
            <templateLocked>?</templateLocked>\r
            <type>?</type>\r
         </folder>\r
      </ws:update>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/update"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="665cd549-231a-4ef2-804c-6862be99781f" wsaVersion="NONE" name="SoapSearchServiceServiceSoapBinding" type="wsdl" bindingName="{http://endpoint.soap.webservice.logicaldoc.com/}SoapSearchServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/logicaldoc/services/Search?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/logicaldoc/services/Search?wsdl"><con:part><con:url>http://localhost:8080/logicaldoc/services/Search?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SoapSearchServiceService" targetNamespace="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:import location="http://localhost:8080/logicaldoc/services/Search?wsdl=Search.wsdl" namespace="http://ws.logicaldoc.com"></wsdl:import>
  <wsdl:binding name="SoapSearchServiceServiceSoapBinding" type="ns1:Search">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="findByFilename">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findByFilename">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findByFilenameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="find">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="find">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findFolders">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findFolders">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findFoldersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SoapSearchServiceService">
    <wsdl:port binding="tns:SoapSearchServiceServiceSoapBinding" name="SoapSearchServicePort">
      <soap:address location="http://localhost:8080/logicaldoc/services/Search"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/logicaldoc/services/Search?wsdl=Search.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="Search" targetNamespace="http://ws.logicaldoc.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://ws.logicaldoc.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ws.logicaldoc.com">
      <xs:element name="attribute" type="tns:WSAttribute"/>
      <xs:element name="document" type="tns:WSDocument"/>
      <xs:element name="find" type="tns:find"/>
      <xs:element name="findByFilename" type="tns:findByFilename"/>
      <xs:element name="findByFilenameResponse" type="tns:findByFilenameResponse"/>
      <xs:element name="findFolders" type="tns:findFolders"/>
      <xs:element name="findFoldersResponse" type="tns:findFoldersResponse"/>
      <xs:element name="findResponse" type="tns:findResponse"/>
      <xs:element name="folder" type="tns:WSFolder"/>
      <xs:element name="searchoptions" type="tns:WSSearchOptions"/>
      <xs:complexType name="findByFilename">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="filename" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findByFilenameResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="document" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSDocument">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" nillable="true" type="tns:WSAttribute"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="creation" type="xs:string"/>
          <xs:element minOccurs="0" name="creator" type="xs:string"/>
          <xs:element name="creatorId" type="xs:long"/>
          <xs:element minOccurs="0" name="customId" type="xs:string"/>
          <xs:element minOccurs="0" name="date" type="xs:string"/>
          <xs:element minOccurs="0" name="deleteUserId" type="xs:long"/>
          <xs:element minOccurs="0" name="digest" type="xs:string"/>
          <xs:element minOccurs="0" name="docRef" type="xs:long"/>
          <xs:element minOccurs="0" name="docRefType" type="xs:string"/>
          <xs:element minOccurs="0" name="exportId" type="xs:long"/>
          <xs:element minOccurs="0" name="exportName" type="xs:string"/>
          <xs:element name="exportStatus" type="xs:int"/>
          <xs:element minOccurs="0" name="fileName" type="xs:string"/>
          <xs:element name="fileSize" type="xs:long"/>
          <xs:element minOccurs="0" name="fileVersion" type="xs:string"/>
          <xs:element minOccurs="0" name="folderId" type="xs:long"/>
          <xs:element minOccurs="0" name="formId" type="xs:long"/>
          <xs:element minOccurs="0" name="icon" type="xs:string"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element name="immutable" type="xs:int"/>
          <xs:element name="indexed" type="xs:int"/>
          <xs:element minOccurs="0" name="language" type="xs:string"/>
          <xs:element minOccurs="0" name="lastModified" type="xs:string"/>
          <xs:element minOccurs="0" name="lockUserId" type="xs:long"/>
          <xs:element name="nature" type="xs:int"/>
          <xs:element name="pages" type="xs:int"/>
          <xs:element minOccurs="0" name="passwordProtected" type="xs:int"/>
          <xs:element minOccurs="0" name="path" type="xs:string"/>
          <xs:element name="published" type="xs:int"/>
          <xs:element minOccurs="0" name="publisher" type="xs:string"/>
          <xs:element name="publisherId" type="xs:long"/>
          <xs:element minOccurs="0" name="rating" type="xs:int"/>
          <xs:element minOccurs="0" name="score" type="xs:int"/>
          <xs:element name="signed" type="xs:int"/>
          <xs:element name="stamped" type="xs:int"/>
          <xs:element minOccurs="0" name="startPublishing" type="xs:string"/>
          <xs:element name="status" type="xs:int"/>
          <xs:element minOccurs="0" name="stopPublishing" type="xs:string"/>
          <xs:element minOccurs="0" name="summary" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tags" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="templateId" type="xs:long"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
          <xs:element minOccurs="0" name="version" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowStatus" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSAttribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="dateValue" type="xs:string"/>
          <xs:element minOccurs="0" name="doubleValue" type="xs:double"/>
          <xs:element name="editor" type="xs:int"/>
          <xs:element minOccurs="0" name="intValue" type="xs:long"/>
          <xs:element minOccurs="0" name="label" type="xs:string"/>
          <xs:element name="mandatory" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="position" type="xs:int"/>
          <xs:element minOccurs="0" name="setId" type="xs:long"/>
          <xs:element minOccurs="0" name="stringValue" type="xs:string"/>
          <xs:element name="type" type="xs:int"/>
          <xs:element minOccurs="0" name="value" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="find">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="options" type="tns:WSSearchOptions"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSSearchOptions">
        <xs:sequence>
          <xs:element name="caseSensitive" type="xs:int"/>
          <xs:element minOccurs="0" name="creationFrom" type="xs:string"/>
          <xs:element minOccurs="0" name="creationTo" type="xs:string"/>
          <xs:element minOccurs="0" name="dateFrom" type="xs:string"/>
          <xs:element minOccurs="0" name="dateTo" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="expression" type="xs:string"/>
          <xs:element minOccurs="0" name="expressionLanguage" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="fields" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="filterIds" nillable="true" type="xs:long"/>
          <xs:element minOccurs="0" name="folderId" type="xs:long"/>
          <xs:element minOccurs="0" name="format" type="xs:string"/>
          <xs:element minOccurs="0" name="language" type="xs:string"/>
          <xs:element name="maxHits" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="retrieveAliases" type="xs:int"/>
          <xs:element name="searchInSubPath" type="xs:int"/>
          <xs:element minOccurs="0" name="sizeMax" type="xs:long"/>
          <xs:element minOccurs="0" name="sizeMin" type="xs:long"/>
          <xs:element minOccurs="0" name="template" type="xs:long"/>
          <xs:element minOccurs="0" name="topOperator" type="xs:string"/>
          <xs:element name="type" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="searchResult" type="tns:WSSearchResult"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSSearchResult">
        <xs:sequence>
          <xs:element name="estimatedHitsNumber" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="hits" nillable="true" type="tns:WSDocument"/>
          <xs:element name="moreHits" type="xs:int"/>
          <xs:element name="time" type="xs:long"/>
          <xs:element name="totalHits" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findFolders">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findFoldersResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSFolder">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" nillable="true" type="tns:WSAttribute"/>
          <xs:element minOccurs="0" name="creation" type="xs:string"/>
          <xs:element minOccurs="0" name="creator" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="foldRef" type="xs:long"/>
          <xs:element name="hidden" type="xs:int"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="lastModified" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="parentId" type="xs:long"/>
          <xs:element name="position" type="xs:int"/>
          <xs:element minOccurs="0" name="storage" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tags" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="templateId" type="xs:long"/>
          <xs:element name="templateLocked" type="xs:int"/>
          <xs:element name="type" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Exception" type="tns:Exception"/>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="findByFilenameResponse">
    <wsdl:part element="ns1:findByFilenameResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="find">
    <wsdl:part element="ns1:find" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findFolders">
    <wsdl:part element="ns1:findFolders" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findByFilename">
    <wsdl:part element="ns1:findByFilename" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findResponse">
    <wsdl:part element="ns1:findResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="Exception">
    <wsdl:part element="ns1:Exception" name="Exception"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findFoldersResponse">
    <wsdl:part element="ns1:findFoldersResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="Search">
    <wsdl:operation name="findByFilename">
      <wsdl:input message="ns1:findByFilename" name="findByFilename"></wsdl:input>
      <wsdl:output message="ns1:findByFilenameResponse" name="findByFilenameResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="find">
      <wsdl:input message="ns1:find" name="find"></wsdl:input>
      <wsdl:output message="ns1:findResponse" name="findResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findFolders">
      <wsdl:input message="ns1:findFolders" name="findFolders"></wsdl:input>
      <wsdl:output message="ns1:findFoldersResponse" name="findFoldersResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/logicaldoc/services/Search</con:endpoint></con:endpoints><con:operation id="acb2be27-a6bc-4766-8127-4ddbcae76204" isOneWay="false" action="" name="find" bindingOperationName="find" type="Request-Response" outputName="findResponse" inputName="find" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ae9a5b91-e74c-4972-b6fa-e8c930373895" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Search</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:find>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <!--Optional:-->\r
         <options>\r
            <caseSensitive>?</caseSensitive>\r
            <!--Optional:-->\r
            <creationFrom>?</creationFrom>\r
            <!--Optional:-->\r
            <creationTo>?</creationTo>\r
            <!--Optional:-->\r
            <dateFrom>?</dateFrom>\r
            <!--Optional:-->\r
            <dateTo>?</dateTo>\r
            <!--Optional:-->\r
            <description>?</description>\r
            <!--Optional:-->\r
            <expression>?</expression>\r
            <!--Optional:-->\r
            <expressionLanguage>?</expressionLanguage>\r
            <!--Zero or more repetitions:-->\r
            <fields>?</fields>\r
            <!--Zero or more repetitions:-->\r
            <filterIds>?</filterIds>\r
            <!--Optional:-->\r
            <folderId>?</folderId>\r
            <!--Optional:-->\r
            <format>?</format>\r
            <!--Optional:-->\r
            <language>?</language>\r
            <maxHits>?</maxHits>\r
            <!--Optional:-->\r
            <name>?</name>\r
            <retrieveAliases>?</retrieveAliases>\r
            <searchInSubPath>?</searchInSubPath>\r
            <!--Optional:-->\r
            <sizeMax>?</sizeMax>\r
            <!--Optional:-->\r
            <sizeMin>?</sizeMin>\r
            <!--Optional:-->\r
            <template>?</template>\r
            <!--Optional:-->\r
            <topOperator>?</topOperator>\r
            <type>?</type>\r
         </options>\r
      </ws:find>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Search/find"/></con:call></con:operation><con:operation id="14545728-81c9-4ba1-bd39-46b4426a93d7" isOneWay="false" action="" name="findByFilename" bindingOperationName="findByFilename" type="Request-Response" outputName="findByFilenameResponse" inputName="findByFilename" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d1ec7ae3-8fe1-4c47-aba2-ce5b967ec443" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Search</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:findByFilename>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <!--Optional:-->\r
         <filename>?</filename>\r
      </ws:findByFilename>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Search/findByFilename"/></con:call></con:operation><con:operation id="74f99184-62f6-4ad3-9e2d-12991a88ca02" isOneWay="false" action="" name="findFolders" bindingOperationName="findFolders" type="Request-Response" outputName="findFoldersResponse" inputName="findFolders" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7d2580ef-1370-4e0c-ab60-2fd647d5689c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Search</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:findFolders>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <!--Optional:-->\r
         <name>?</name>\r
      </ws:findFolders>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Search/findFolders"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="3f55d56d-a786-4a79-b550-3c964a7be0f3" wsaVersion="NONE" name="SoapSecurityServiceServiceSoapBinding" type="wsdl" bindingName="{http://endpoint.soap.webservice.logicaldoc.com/}SoapSecurityServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/logicaldoc/services/Security?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/logicaldoc/services/Security?wsdl"><con:part><con:url>http://localhost:8080/logicaldoc/services/Security?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SoapSecurityServiceService" targetNamespace="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:import location="http://localhost:8080/logicaldoc/services/Security?wsdl=Security.wsdl" namespace="http://ws.logicaldoc.com"></wsdl:import>
  <wsdl:binding name="SoapSecurityServiceServiceSoapBinding" type="ns1:Security">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getUserByUsername">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUserByUsername">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUserByUsernameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listUsers">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="listUsers">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listUsersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="storeUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="storeUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="storeUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listGroups">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="listGroups">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listGroupsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="storeGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="storeGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="storeGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="changePassword">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="changePasswordResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SoapSecurityServiceService">
    <wsdl:port binding="tns:SoapSecurityServiceServiceSoapBinding" name="SoapSecurityServicePort">
      <soap:address location="http://localhost:8080/logicaldoc/services/Security"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/logicaldoc/services/Security?wsdl=Security.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="Security" targetNamespace="http://ws.logicaldoc.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://ws.logicaldoc.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ws.logicaldoc.com">
      <xs:element name="changePassword" type="tns:changePassword"/>
      <xs:element name="changePasswordResponse" type="tns:changePasswordResponse"/>
      <xs:element name="deleteGroup" type="tns:deleteGroup"/>
      <xs:element name="deleteGroupResponse" type="tns:deleteGroupResponse"/>
      <xs:element name="deleteUser" type="tns:deleteUser"/>
      <xs:element name="deleteUserResponse" type="tns:deleteUserResponse"/>
      <xs:element name="getGroup" type="tns:getGroup"/>
      <xs:element name="getGroupResponse" type="tns:getGroupResponse"/>
      <xs:element name="getUser" type="tns:getUser"/>
      <xs:element name="getUserByUsername" type="tns:getUserByUsername"/>
      <xs:element name="getUserByUsernameResponse" type="tns:getUserByUsernameResponse"/>
      <xs:element name="getUserResponse" type="tns:getUserResponse"/>
      <xs:element name="listGroups" type="tns:listGroups"/>
      <xs:element name="listGroupsResponse" type="tns:listGroupsResponse"/>
      <xs:element name="listUsers" type="tns:listUsers"/>
      <xs:element name="listUsersResponse" type="tns:listUsersResponse"/>
      <xs:element name="storeGroup" type="tns:storeGroup"/>
      <xs:element name="storeGroupResponse" type="tns:storeGroupResponse"/>
      <xs:element name="storeUser" type="tns:storeUser"/>
      <xs:element name="storeUserResponse" type="tns:storeUserResponse"/>
      <xs:complexType name="getUserByUsername">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="username" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUserByUsernameResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="user" type="tns:WSUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="city" type="xs:string"/>
          <xs:element minOccurs="0" name="country" type="xs:string"/>
          <xs:element minOccurs="0" name="email" type="xs:string"/>
          <xs:element minOccurs="0" name="email2" type="xs:string"/>
          <xs:element minOccurs="0" name="emailSignature" type="xs:string"/>
          <xs:element minOccurs="0" name="emailSignature2" type="xs:string"/>
          <xs:element name="enabled" type="xs:int"/>
          <xs:element minOccurs="0" name="firstName" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="groupIds" nillable="true" type="xs:long"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="language" type="xs:string"/>
          <xs:element minOccurs="0" name="lastModified" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="password" type="xs:string"/>
          <xs:element minOccurs="0" name="passwordChanged" type="xs:string"/>
          <xs:element name="passwordExpires" type="xs:int"/>
          <xs:element minOccurs="0" name="passwordmd4" type="xs:string"/>
          <xs:element minOccurs="0" name="postalcode" type="xs:string"/>
          <xs:element name="quota" type="xs:long"/>
          <xs:element name="quotaCount" type="xs:long"/>
          <xs:element name="source" type="xs:int"/>
          <xs:element minOccurs="0" name="state" type="xs:string"/>
          <xs:element minOccurs="0" name="street" type="xs:string"/>
          <xs:element minOccurs="0" name="telephone" type="xs:string"/>
          <xs:element minOccurs="0" name="telephone2" type="xs:string"/>
          <xs:element name="type" type="xs:int"/>
          <xs:element minOccurs="0" name="username" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listUsers">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listUsersResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="user" type="tns:WSUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="storeUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="user" type="tns:WSUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="storeUserResponse">
        <xs:sequence>
          <xs:element name="userId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="groupId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getGroupResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="group" type="tns:WSGroup"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="inheritGroupId" type="xs:long"/>
          <xs:element minOccurs="0" name="lastModified" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="type" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="userIds" nillable="true" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="userId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUserResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="user" type="tns:WSUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="userId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteUserResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="listGroups">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listGroupsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="group" type="tns:WSGroup"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="groupId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteGroupResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="storeGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="group" type="tns:WSGroup"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="storeGroupResponse">
        <xs:sequence>
          <xs:element name="groupId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="changePassword">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="userId" type="xs:long"/>
          <xs:element minOccurs="0" name="oldPassword" type="xs:string"/>
          <xs:element minOccurs="0" name="newPassword" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="changePasswordResponse">
        <xs:sequence>
          <xs:element name="changeResult" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Exception" type="tns:Exception"/>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getUserByUsernameResponse">
    <wsdl:part element="ns1:getUserByUsernameResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserResponse">
    <wsdl:part element="ns1:getUserResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="changePasswordResponse">
    <wsdl:part element="ns1:changePasswordResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserByUsername">
    <wsdl:part element="ns1:getUserByUsername" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupResponse">
    <wsdl:part element="ns1:getGroupResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUser">
    <wsdl:part element="ns1:getUser" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="Exception">
    <wsdl:part element="ns1:Exception" name="Exception"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="changePassword">
    <wsdl:part element="ns1:changePassword" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listGroupsResponse">
    <wsdl:part element="ns1:listGroupsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listUsersResponse">
    <wsdl:part element="ns1:listUsersResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="storeUserResponse">
    <wsdl:part element="ns1:storeUserResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listUsers">
    <wsdl:part element="ns1:listUsers" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="storeUser">
    <wsdl:part element="ns1:storeUser" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroup">
    <wsdl:part element="ns1:getGroup" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteUser">
    <wsdl:part element="ns1:deleteUser" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listGroups">
    <wsdl:part element="ns1:listGroups" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteGroupResponse">
    <wsdl:part element="ns1:deleteGroupResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteGroup">
    <wsdl:part element="ns1:deleteGroup" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="storeGroupResponse">
    <wsdl:part element="ns1:storeGroupResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteUserResponse">
    <wsdl:part element="ns1:deleteUserResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="storeGroup">
    <wsdl:part element="ns1:storeGroup" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="Security">
    <wsdl:operation name="getUserByUsername">
      <wsdl:input message="ns1:getUserByUsername" name="getUserByUsername"></wsdl:input>
      <wsdl:output message="ns1:getUserByUsernameResponse" name="getUserByUsernameResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listUsers">
      <wsdl:input message="ns1:listUsers" name="listUsers"></wsdl:input>
      <wsdl:output message="ns1:listUsersResponse" name="listUsersResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="storeUser">
      <wsdl:input message="ns1:storeUser" name="storeUser"></wsdl:input>
      <wsdl:output message="ns1:storeUserResponse" name="storeUserResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGroup">
      <wsdl:input message="ns1:getGroup" name="getGroup"></wsdl:input>
      <wsdl:output message="ns1:getGroupResponse" name="getGroupResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUser">
      <wsdl:input message="ns1:getUser" name="getUser"></wsdl:input>
      <wsdl:output message="ns1:getUserResponse" name="getUserResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <wsdl:input message="ns1:deleteUser" name="deleteUser"></wsdl:input>
      <wsdl:output message="ns1:deleteUserResponse" name="deleteUserResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listGroups">
      <wsdl:input message="ns1:listGroups" name="listGroups"></wsdl:input>
      <wsdl:output message="ns1:listGroupsResponse" name="listGroupsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteGroup">
      <wsdl:input message="ns1:deleteGroup" name="deleteGroup"></wsdl:input>
      <wsdl:output message="ns1:deleteGroupResponse" name="deleteGroupResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="storeGroup">
      <wsdl:input message="ns1:storeGroup" name="storeGroup"></wsdl:input>
      <wsdl:output message="ns1:storeGroupResponse" name="storeGroupResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <wsdl:input message="ns1:changePassword" name="changePassword"></wsdl:input>
      <wsdl:output message="ns1:changePasswordResponse" name="changePasswordResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/logicaldoc/services/Security</con:endpoint></con:endpoints><con:operation id="642aaee1-a603-4b28-9db8-ea3f7f08e784" isOneWay="false" action="" name="changePassword" bindingOperationName="changePassword" type="Request-Response" outputName="changePasswordResponse" inputName="changePassword" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a8d87310-c280-4ed7-8eb9-6c3f0146028c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Security</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:changePassword>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <userId>?</userId>\r
         <!--Optional:-->\r
         <oldPassword>?</oldPassword>\r
         <!--Optional:-->\r
         <newPassword>?</newPassword>\r
      </ws:changePassword>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Security/changePassword"/></con:call></con:operation><con:operation id="d39616f6-08b4-441d-bd29-1a3d69f32149" isOneWay="false" action="" name="deleteGroup" bindingOperationName="deleteGroup" type="Request-Response" outputName="deleteGroupResponse" inputName="deleteGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bd3c0eaf-fd32-4bd3-a739-2d9f531bd10d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Security</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:deleteGroup>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <groupId>?</groupId>\r
      </ws:deleteGroup>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Security/deleteGroup"/></con:call></con:operation><con:operation id="1c62c395-ae7a-4d04-a14e-9a91d9154704" isOneWay="false" action="" name="deleteUser" bindingOperationName="deleteUser" type="Request-Response" outputName="deleteUserResponse" inputName="deleteUser" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4772dbc1-e61f-4bdd-b02f-ad1d16fd8532" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Security</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:deleteUser>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <userId>?</userId>\r
      </ws:deleteUser>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Security/deleteUser"/></con:call></con:operation><con:operation id="f9d4ffd9-0850-4575-a34a-12f56e31c98b" isOneWay="false" action="" name="getGroup" bindingOperationName="getGroup" type="Request-Response" outputName="getGroupResponse" inputName="getGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="12f8321e-09bb-4a28-88d8-75717e8545d2" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Security</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getGroup>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <groupId>?</groupId>\r
      </ws:getGroup>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Security/getGroup"/></con:call></con:operation><con:operation id="c9c4694b-5dac-4941-becf-76ad09863e88" isOneWay="false" action="" name="getUser" bindingOperationName="getUser" type="Request-Response" outputName="getUserResponse" inputName="getUser" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="72b021fc-5e06-4f25-8a15-3f8557b3efa4" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Security</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getUser>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <userId>?</userId>\r
      </ws:getUser>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Security/getUser"/></con:call></con:operation><con:operation id="ff0eafa2-3903-4614-abf4-459bce1e41b3" isOneWay="false" action="" name="getUserByUsername" bindingOperationName="getUserByUsername" type="Request-Response" outputName="getUserByUsernameResponse" inputName="getUserByUsername" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8cef875a-1461-4f0b-8d77-c387753d5f55" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Security</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getUserByUsername>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <!--Optional:-->\r
         <username>?</username>\r
      </ws:getUserByUsername>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Security/getUserByUsername"/></con:call></con:operation><con:operation id="40e6c3d6-4c00-4c23-9d22-debb4eb30209" isOneWay="false" action="" name="listGroups" bindingOperationName="listGroups" type="Request-Response" outputName="listGroupsResponse" inputName="listGroups" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cf8215f0-b042-4491-80b4-821a9a93c43d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Security</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:listGroups>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
      </ws:listGroups>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Security/listGroups"/></con:call></con:operation><con:operation id="b352d11f-dec4-4ac6-9751-2f5557b003ef" isOneWay="false" action="" name="listUsers" bindingOperationName="listUsers" type="Request-Response" outputName="listUsersResponse" inputName="listUsers" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6f0cc187-2d06-49f5-bb86-1e315521ec96" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Security</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:listUsers>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
      </ws:listUsers>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Security/listUsers"/></con:call></con:operation><con:operation id="bf1e6ece-fd2a-416f-80bc-a22b1ac910f1" isOneWay="false" action="" name="storeGroup" bindingOperationName="storeGroup" type="Request-Response" outputName="storeGroupResponse" inputName="storeGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7ca4a651-31b2-4eb3-be58-d715f24a3a82" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Security</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:storeGroup>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <!--Optional:-->\r
         <group>\r
            <!--Optional:-->\r
            <description>?</description>\r
            <id>?</id>\r
            <!--Optional:-->\r
            <inheritGroupId>?</inheritGroupId>\r
            <!--Optional:-->\r
            <lastModified>?</lastModified>\r
            <!--Optional:-->\r
            <name>?</name>\r
            <type>?</type>\r
            <!--Zero or more repetitions:-->\r
            <userIds>?</userIds>\r
         </group>\r
      </ws:storeGroup>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Security/storeGroup"/></con:call></con:operation><con:operation id="537bdaaf-979c-4504-8b8f-89e2fd639542" isOneWay="false" action="" name="storeUser" bindingOperationName="storeUser" type="Request-Response" outputName="storeUserResponse" inputName="storeUser" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="378c456a-f17b-4824-82bf-cdbd5dc1ee1f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Security</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:storeUser>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <!--Optional:-->\r
         <user>\r
            <!--Optional:-->\r
            <city>?</city>\r
            <!--Optional:-->\r
            <country>?</country>\r
            <!--Optional:-->\r
            <email>?</email>\r
            <!--Optional:-->\r
            <email2>?</email2>\r
            <!--Optional:-->\r
            <emailSignature>?</emailSignature>\r
            <!--Optional:-->\r
            <emailSignature2>?</emailSignature2>\r
            <enabled>?</enabled>\r
            <!--Optional:-->\r
            <firstName>?</firstName>\r
            <!--Zero or more repetitions:-->\r
            <groupIds>?</groupIds>\r
            <id>?</id>\r
            <!--Optional:-->\r
            <language>?</language>\r
            <!--Optional:-->\r
            <lastModified>?</lastModified>\r
            <!--Optional:-->\r
            <name>?</name>\r
            <!--Optional:-->\r
            <password>?</password>\r
            <!--Optional:-->\r
            <passwordChanged>?</passwordChanged>\r
            <passwordExpires>?</passwordExpires>\r
            <!--Optional:-->\r
            <passwordmd4>?</passwordmd4>\r
            <!--Optional:-->\r
            <postalcode>?</postalcode>\r
            <quota>?</quota>\r
            <quotaCount>?</quotaCount>\r
            <source>?</source>\r
            <!--Optional:-->\r
            <state>?</state>\r
            <!--Optional:-->\r
            <street>?</street>\r
            <!--Optional:-->\r
            <telephone>?</telephone>\r
            <!--Optional:-->\r
            <telephone2>?</telephone2>\r
            <type>?</type>\r
            <!--Optional:-->\r
            <username>?</username>\r
         </user>\r
      </ws:storeUser>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Security/storeUser"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="3c6fa0be-32ba-4545-b0a1-33cf17d16374" wsaVersion="NONE" name="SoapSystemServiceServiceSoapBinding" type="wsdl" bindingName="{http://endpoint.soap.webservice.logicaldoc.com/}SoapSystemServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/logicaldoc/services/System?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/logicaldoc/services/System?wsdl"><con:part><con:url>http://localhost:8080/logicaldoc/services/System?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SoapSystemServiceService" targetNamespace="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:import location="http://localhost:8080/logicaldoc/services/System?wsdl=System.wsdl" namespace="http://ws.logicaldoc.com"></wsdl:import>
  <wsdl:binding name="SoapSystemServiceServiceSoapBinding" type="ns1:System">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getLanguages">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLanguages">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLanguagesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInfo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatistics">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getStatistics">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatisticsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SoapSystemServiceService">
    <wsdl:port binding="tns:SoapSystemServiceServiceSoapBinding" name="SoapSystemServicePort">
      <soap:address location="http://localhost:8080/logicaldoc/services/System"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/logicaldoc/services/System?wsdl=System.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="System" targetNamespace="http://ws.logicaldoc.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://ws.logicaldoc.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ws.logicaldoc.com">
      <xs:element name="getInfo" type="tns:getInfo"/>
      <xs:element name="getInfoResponse" type="tns:getInfoResponse"/>
      <xs:element name="getLanguages" type="tns:getLanguages"/>
      <xs:element name="getLanguagesResponse" type="tns:getLanguagesResponse"/>
      <xs:element name="getStatistics" type="tns:getStatistics"/>
      <xs:element name="getStatisticsResponse" type="tns:getStatisticsResponse"/>
      <xs:complexType name="getLanguages">
        <xs:sequence>
          <xs:element minOccurs="0" name="tenantOrSid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLanguagesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="language" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getInfo">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getInfoResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="tns:WSSystemInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSSystemInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="bugs" type="xs:string"/>
          <xs:element minOccurs="0" name="date" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="features" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="forum" type="xs:string"/>
          <xs:element minOccurs="0" name="help" type="xs:string"/>
          <xs:element minOccurs="0" name="hostName" type="xs:string"/>
          <xs:element minOccurs="0" name="installationId" type="xs:string"/>
          <xs:element minOccurs="0" name="licensee" type="xs:string"/>
          <xs:element minOccurs="0" name="product" type="xs:string"/>
          <xs:element minOccurs="0" name="productName" type="xs:string"/>
          <xs:element minOccurs="0" name="release" type="xs:string"/>
          <xs:element minOccurs="0" name="runLevel" type="xs:string"/>
          <xs:element minOccurs="0" name="support" type="xs:string"/>
          <xs:element minOccurs="0" name="url" type="xs:string"/>
          <xs:element minOccurs="0" name="vendor" type="xs:string"/>
          <xs:element minOccurs="0" name="vendorAddress" type="xs:string"/>
          <xs:element minOccurs="0" name="vendorCap" type="xs:string"/>
          <xs:element minOccurs="0" name="vendorCity" type="xs:string"/>
          <xs:element minOccurs="0" name="vendorCountry" type="xs:string"/>
          <xs:element minOccurs="0" name="year" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatistics">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatisticsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="parameter" type="tns:WSParameter"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSParameter">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Exception" type="tns:Exception"/>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getInfoResponse">
    <wsdl:part element="ns1:getInfoResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLanguagesResponse">
    <wsdl:part element="ns1:getLanguagesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getInfo">
    <wsdl:part element="ns1:getInfo" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatistics">
    <wsdl:part element="ns1:getStatistics" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLanguages">
    <wsdl:part element="ns1:getLanguages" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="Exception">
    <wsdl:part element="ns1:Exception" name="Exception"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatisticsResponse">
    <wsdl:part element="ns1:getStatisticsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="System">
    <wsdl:operation name="getLanguages">
      <wsdl:input message="ns1:getLanguages" name="getLanguages"></wsdl:input>
      <wsdl:output message="ns1:getLanguagesResponse" name="getLanguagesResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInfo">
      <wsdl:input message="ns1:getInfo" name="getInfo"></wsdl:input>
      <wsdl:output message="ns1:getInfoResponse" name="getInfoResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatistics">
      <wsdl:input message="ns1:getStatistics" name="getStatistics"></wsdl:input>
      <wsdl:output message="ns1:getStatisticsResponse" name="getStatisticsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/logicaldoc/services/System</con:endpoint></con:endpoints><con:operation id="73c99637-5081-4ea5-b776-d3933443ee69" isOneWay="false" action="" name="getInfo" bindingOperationName="getInfo" type="Request-Response" outputName="getInfoResponse" inputName="getInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e6c2f070-86f9-415a-a6e7-a322ebafbf39" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/System</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getInfo/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/System/getInfo"/></con:call></con:operation><con:operation id="319b8508-9cf6-4475-ae18-108fa8036e02" isOneWay="false" action="" name="getLanguages" bindingOperationName="getLanguages" type="Request-Response" outputName="getLanguagesResponse" inputName="getLanguages" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cb51f138-2630-4023-8f11-07173270867b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/System</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getLanguages>\r
         <!--Optional:-->\r
         <tenantOrSid>?</tenantOrSid>\r
      </ws:getLanguages>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/System/getLanguages"/></con:call></con:operation><con:operation id="98d49eb7-627d-47d8-84dc-82b40a4c8bf9" isOneWay="false" action="" name="getStatistics" bindingOperationName="getStatistics" type="Request-Response" outputName="getStatisticsResponse" inputName="getStatistics" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f158d2c4-1863-430e-bb12-8b9fcb1a02ae" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/System</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getStatistics>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
      </ws:getStatistics>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/System/getStatistics"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="f0f23725-8d6f-4a97-9351-362dba6abf4d" wsaVersion="NONE" name="SoapTagServiceServiceSoapBinding" type="wsdl" bindingName="{http://endpoint.soap.webservice.logicaldoc.com/}SoapTagServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/logicaldoc/services/Tag?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/logicaldoc/services/Tag?wsdl"><con:part><con:url>http://localhost:8080/logicaldoc/services/Tag?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SoapTagServiceService" targetNamespace="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://endpoint.soap.webservice.logicaldoc.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:import location="http://localhost:8080/logicaldoc/services/Tag?wsdl=Tag.wsdl" namespace="http://ws.logicaldoc.com"></wsdl:import>
  <wsdl:binding name="SoapTagServiceServiceSoapBinding" type="ns1:Tag">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="setFolderTags">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="setFolderTags">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setFolderTagsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTagCloud">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getTagCloud">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getTagCloudResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addDocumentTags">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addDocumentTags">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addDocumentTagsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findDocumentsByTag">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findDocumentsByTag">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findDocumentsByTagResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findFoldersByTag">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findFoldersByTag">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findFoldersByTagResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getFolderTags">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getFolderTags">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getFolderTagsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentTags">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocumentTags">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentTagsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTags">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getTags">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getTagsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setDocumentTags">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="setDocumentTags">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setDocumentTagsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addFolderTags">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addFolderTags">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addFolderTagsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SoapTagServiceService">
    <wsdl:port binding="tns:SoapTagServiceServiceSoapBinding" name="SoapTagServicePort">
      <soap:address location="http://localhost:8080/logicaldoc/services/Tag"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/logicaldoc/services/Tag?wsdl=Tag.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="Tag" targetNamespace="http://ws.logicaldoc.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://ws.logicaldoc.com">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://ws.logicaldoc.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ws.logicaldoc.com">
      <xs:element name="addDocumentTags" type="tns:addDocumentTags"/>
      <xs:element name="addDocumentTagsResponse" type="tns:addDocumentTagsResponse"/>
      <xs:element name="addFolderTags" type="tns:addFolderTags"/>
      <xs:element name="addFolderTagsResponse" type="tns:addFolderTagsResponse"/>
      <xs:element name="attribute" type="tns:WSAttribute"/>
      <xs:element name="document" type="tns:WSDocument"/>
      <xs:element name="findDocumentsByTag" type="tns:findDocumentsByTag"/>
      <xs:element name="findDocumentsByTagResponse" type="tns:findDocumentsByTagResponse"/>
      <xs:element name="findFoldersByTag" type="tns:findFoldersByTag"/>
      <xs:element name="findFoldersByTagResponse" type="tns:findFoldersByTagResponse"/>
      <xs:element name="folder" type="tns:WSFolder"/>
      <xs:element name="getDocumentTags" type="tns:getDocumentTags"/>
      <xs:element name="getDocumentTagsResponse" type="tns:getDocumentTagsResponse"/>
      <xs:element name="getFolderTags" type="tns:getFolderTags"/>
      <xs:element name="getFolderTagsResponse" type="tns:getFolderTagsResponse"/>
      <xs:element name="getTagCloud" type="tns:getTagCloud"/>
      <xs:element name="getTagCloudResponse" type="tns:getTagCloudResponse"/>
      <xs:element name="getTags" type="tns:getTags"/>
      <xs:element name="getTagsResponse" type="tns:getTagsResponse"/>
      <xs:element name="setDocumentTags" type="tns:setDocumentTags"/>
      <xs:element name="setDocumentTagsResponse" type="tns:setDocumentTagsResponse"/>
      <xs:element name="setFolderTags" type="tns:setFolderTags"/>
      <xs:element name="setFolderTagsResponse" type="tns:setFolderTagsResponse"/>
      <xs:complexType name="setFolderTags">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setFolderTagsResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getTagCloud">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getTagCloudResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tagCloud" type="tns:WSTagCloud"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSTagCloud">
        <xs:sequence>
          <xs:element name="count" type="xs:long"/>
          <xs:element name="scale" type="xs:int"/>
          <xs:element minOccurs="0" name="tag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addDocumentTags">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addDocumentTagsResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="findDocumentsByTag">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="tag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findDocumentsByTagResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="document" type="tns:WSDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSDocument">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" nillable="true" type="tns:WSAttribute"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="creation" type="xs:string"/>
          <xs:element minOccurs="0" name="creator" type="xs:string"/>
          <xs:element name="creatorId" type="xs:long"/>
          <xs:element minOccurs="0" name="customId" type="xs:string"/>
          <xs:element minOccurs="0" name="date" type="xs:string"/>
          <xs:element minOccurs="0" name="deleteUserId" type="xs:long"/>
          <xs:element minOccurs="0" name="digest" type="xs:string"/>
          <xs:element minOccurs="0" name="docRef" type="xs:long"/>
          <xs:element minOccurs="0" name="docRefType" type="xs:string"/>
          <xs:element minOccurs="0" name="exportId" type="xs:long"/>
          <xs:element minOccurs="0" name="exportName" type="xs:string"/>
          <xs:element name="exportStatus" type="xs:int"/>
          <xs:element minOccurs="0" name="fileName" type="xs:string"/>
          <xs:element name="fileSize" type="xs:long"/>
          <xs:element minOccurs="0" name="fileVersion" type="xs:string"/>
          <xs:element minOccurs="0" name="folderId" type="xs:long"/>
          <xs:element minOccurs="0" name="formId" type="xs:long"/>
          <xs:element minOccurs="0" name="icon" type="xs:string"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element name="immutable" type="xs:int"/>
          <xs:element name="indexed" type="xs:int"/>
          <xs:element minOccurs="0" name="language" type="xs:string"/>
          <xs:element minOccurs="0" name="lastModified" type="xs:string"/>
          <xs:element minOccurs="0" name="lockUserId" type="xs:long"/>
          <xs:element name="nature" type="xs:int"/>
          <xs:element name="pages" type="xs:int"/>
          <xs:element minOccurs="0" name="passwordProtected" type="xs:int"/>
          <xs:element minOccurs="0" name="path" type="xs:string"/>
          <xs:element name="published" type="xs:int"/>
          <xs:element minOccurs="0" name="publisher" type="xs:string"/>
          <xs:element name="publisherId" type="xs:long"/>
          <xs:element minOccurs="0" name="rating" type="xs:int"/>
          <xs:element minOccurs="0" name="score" type="xs:int"/>
          <xs:element name="signed" type="xs:int"/>
          <xs:element name="stamped" type="xs:int"/>
          <xs:element minOccurs="0" name="startPublishing" type="xs:string"/>
          <xs:element name="status" type="xs:int"/>
          <xs:element minOccurs="0" name="stopPublishing" type="xs:string"/>
          <xs:element minOccurs="0" name="summary" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tags" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="templateId" type="xs:long"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
          <xs:element minOccurs="0" name="version" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowStatus" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSAttribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="dateValue" type="xs:string"/>
          <xs:element minOccurs="0" name="doubleValue" type="xs:double"/>
          <xs:element name="editor" type="xs:int"/>
          <xs:element minOccurs="0" name="intValue" type="xs:long"/>
          <xs:element minOccurs="0" name="label" type="xs:string"/>
          <xs:element name="mandatory" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="position" type="xs:int"/>
          <xs:element minOccurs="0" name="setId" type="xs:long"/>
          <xs:element minOccurs="0" name="stringValue" type="xs:string"/>
          <xs:element name="type" type="xs:int"/>
          <xs:element minOccurs="0" name="value" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findFoldersByTag">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element minOccurs="0" name="tag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findFoldersByTagResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="folder" type="tns:WSFolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSFolder">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" nillable="true" type="tns:WSAttribute"/>
          <xs:element minOccurs="0" name="creation" type="xs:string"/>
          <xs:element minOccurs="0" name="creator" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="foldRef" type="xs:long"/>
          <xs:element name="hidden" type="xs:int"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="lastModified" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="parentId" type="xs:long"/>
          <xs:element name="position" type="xs:int"/>
          <xs:element minOccurs="0" name="storage" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tags" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="templateId" type="xs:long"/>
          <xs:element name="templateLocked" type="xs:int"/>
          <xs:element name="type" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getFolderTags">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getFolderTagsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDocumentTags">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDocumentTagsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getTags">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getTagsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setDocumentTags">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="docId" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setDocumentTagsResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="addFolderTags">
        <xs:sequence>
          <xs:element minOccurs="0" name="sid" type="xs:string"/>
          <xs:element name="folderId" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addFolderTagsResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="Exception" type="tns:Exception"/>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="setFolderTags">
    <wsdl:part element="ns1:setFolderTags" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTagCloudResponse">
    <wsdl:part element="ns1:getTagCloudResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addDocumentTagsResponse">
    <wsdl:part element="ns1:addDocumentTagsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addDocumentTags">
    <wsdl:part element="ns1:addDocumentTags" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTagsResponse">
    <wsdl:part element="ns1:getTagsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addFolderTagsResponse">
    <wsdl:part element="ns1:addFolderTagsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentTags">
    <wsdl:part element="ns1:getDocumentTags" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTags">
    <wsdl:part element="ns1:getTags" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="Exception">
    <wsdl:part element="ns1:Exception" name="Exception"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTagCloud">
    <wsdl:part element="ns1:getTagCloud" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFolderTagsResponse">
    <wsdl:part element="ns1:getFolderTagsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findDocumentsByTag">
    <wsdl:part element="ns1:findDocumentsByTag" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findFoldersByTagResponse">
    <wsdl:part element="ns1:findFoldersByTagResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findDocumentsByTagResponse">
    <wsdl:part element="ns1:findDocumentsByTagResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findFoldersByTag">
    <wsdl:part element="ns1:findFoldersByTag" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFolderTags">
    <wsdl:part element="ns1:getFolderTags" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setDocumentTags">
    <wsdl:part element="ns1:setDocumentTags" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentTagsResponse">
    <wsdl:part element="ns1:getDocumentTagsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setDocumentTagsResponse">
    <wsdl:part element="ns1:setDocumentTagsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addFolderTags">
    <wsdl:part element="ns1:addFolderTags" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setFolderTagsResponse">
    <wsdl:part element="ns1:setFolderTagsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="Tag">
    <wsdl:operation name="setFolderTags">
      <wsdl:input message="ns1:setFolderTags" name="setFolderTags"></wsdl:input>
      <wsdl:output message="ns1:setFolderTagsResponse" name="setFolderTagsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTagCloud">
      <wsdl:input message="ns1:getTagCloud" name="getTagCloud"></wsdl:input>
      <wsdl:output message="ns1:getTagCloudResponse" name="getTagCloudResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addDocumentTags">
      <wsdl:input message="ns1:addDocumentTags" name="addDocumentTags"></wsdl:input>
      <wsdl:output message="ns1:addDocumentTagsResponse" name="addDocumentTagsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findDocumentsByTag">
      <wsdl:input message="ns1:findDocumentsByTag" name="findDocumentsByTag"></wsdl:input>
      <wsdl:output message="ns1:findDocumentsByTagResponse" name="findDocumentsByTagResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findFoldersByTag">
      <wsdl:input message="ns1:findFoldersByTag" name="findFoldersByTag"></wsdl:input>
      <wsdl:output message="ns1:findFoldersByTagResponse" name="findFoldersByTagResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getFolderTags">
      <wsdl:input message="ns1:getFolderTags" name="getFolderTags"></wsdl:input>
      <wsdl:output message="ns1:getFolderTagsResponse" name="getFolderTagsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentTags">
      <wsdl:input message="ns1:getDocumentTags" name="getDocumentTags"></wsdl:input>
      <wsdl:output message="ns1:getDocumentTagsResponse" name="getDocumentTagsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTags">
      <wsdl:input message="ns1:getTags" name="getTags"></wsdl:input>
      <wsdl:output message="ns1:getTagsResponse" name="getTagsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setDocumentTags">
      <wsdl:input message="ns1:setDocumentTags" name="setDocumentTags"></wsdl:input>
      <wsdl:output message="ns1:setDocumentTagsResponse" name="setDocumentTagsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addFolderTags">
      <wsdl:input message="ns1:addFolderTags" name="addFolderTags"></wsdl:input>
      <wsdl:output message="ns1:addFolderTagsResponse" name="addFolderTagsResponse"></wsdl:output>
      <wsdl:fault message="ns1:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/logicaldoc/services/Tag</con:endpoint></con:endpoints><con:operation id="cbd537fd-6d74-4a50-ac74-d9462b21619d" isOneWay="false" action="" name="addDocumentTags" bindingOperationName="addDocumentTags" type="Request-Response" outputName="addDocumentTagsResponse" inputName="addDocumentTags" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f81354b5-e4fe-40ca-af5d-d9e28b89d910" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Tag</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:addDocumentTags>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
         <!--Zero or more repetitions:-->\r
         <tag>?</tag>\r
      </ws:addDocumentTags>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Tag/addDocumentTags"/></con:call></con:operation><con:operation id="5c63f79d-311d-4189-970c-996d845561a7" isOneWay="false" action="" name="addFolderTags" bindingOperationName="addFolderTags" type="Request-Response" outputName="addFolderTagsResponse" inputName="addFolderTags" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5f3ec791-aa4b-4620-90c3-8ca7e85e26ac" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Tag</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:addFolderTags>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <folderId>?</folderId>\r
         <!--Zero or more repetitions:-->\r
         <tag>?</tag>\r
      </ws:addFolderTags>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Tag/addFolderTags"/></con:call></con:operation><con:operation id="463712c7-1f21-48bb-add3-12976a9b725a" isOneWay="false" action="" name="findDocumentsByTag" bindingOperationName="findDocumentsByTag" type="Request-Response" outputName="findDocumentsByTagResponse" inputName="findDocumentsByTag" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="80e055e8-64e4-4aa9-875a-7e872737ef79" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Tag</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:findDocumentsByTag>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <!--Optional:-->\r
         <tag>?</tag>\r
      </ws:findDocumentsByTag>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Tag/findDocumentsByTag"/></con:call></con:operation><con:operation id="1c47beba-3ba5-4549-83a4-0c1d27dd1f17" isOneWay="false" action="" name="findFoldersByTag" bindingOperationName="findFoldersByTag" type="Request-Response" outputName="findFoldersByTagResponse" inputName="findFoldersByTag" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5b65e11b-464f-4e19-8bab-d109fe1f70bb" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Tag</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:findFoldersByTag>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <!--Optional:-->\r
         <tag>?</tag>\r
      </ws:findFoldersByTag>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Tag/findFoldersByTag"/></con:call></con:operation><con:operation id="0adbc200-9075-4f37-b001-0ea640ee6e21" isOneWay="false" action="" name="getDocumentTags" bindingOperationName="getDocumentTags" type="Request-Response" outputName="getDocumentTagsResponse" inputName="getDocumentTags" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="df954031-b38f-4446-9eb5-e4d262d730b1" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Tag</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getDocumentTags>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
      </ws:getDocumentTags>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Tag/getDocumentTags"/></con:call></con:operation><con:operation id="1e7114f5-d63f-4aaa-8c51-03f484820bd1" isOneWay="false" action="" name="getFolderTags" bindingOperationName="getFolderTags" type="Request-Response" outputName="getFolderTagsResponse" inputName="getFolderTags" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="61a5140a-d8c7-49ea-b5dd-1dfb3dc72b86" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Tag</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getFolderTags>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <folderId>?</folderId>\r
      </ws:getFolderTags>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Tag/getFolderTags"/></con:call></con:operation><con:operation id="819dc76a-4337-4527-a93b-2f1a00acf4cd" isOneWay="false" action="" name="getTagCloud" bindingOperationName="getTagCloud" type="Request-Response" outputName="getTagCloudResponse" inputName="getTagCloud" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b09d74b1-38c0-42bb-a417-dcd86a0cdc7a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Tag</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getTagCloud>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
      </ws:getTagCloud>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Tag/getTagCloud"/></con:call></con:operation><con:operation id="7aede2ba-6731-461e-a51f-131e6c8ba0c0" isOneWay="false" action="" name="getTags" bindingOperationName="getTags" type="Request-Response" outputName="getTagsResponse" inputName="getTags" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4203f90a-0297-4f0f-819b-f706e2b1ec23" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Tag</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:getTags>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
      </ws:getTags>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Tag/getTags"/></con:call></con:operation><con:operation id="189878a3-cf8a-4e25-bb50-1b7d0eaf9711" isOneWay="false" action="" name="setDocumentTags" bindingOperationName="setDocumentTags" type="Request-Response" outputName="setDocumentTagsResponse" inputName="setDocumentTags" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b2ff82b8-4c16-46ff-a0cb-bbce27cba2cd" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Tag</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:setDocumentTags>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <docId>?</docId>\r
         <!--Zero or more repetitions:-->\r
         <tag>?</tag>\r
      </ws:setDocumentTags>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Tag/setDocumentTags"/></con:call></con:operation><con:operation id="7cf317e6-65dd-4f65-9274-692e2d5758f6" isOneWay="false" action="" name="setFolderTags" bindingOperationName="setFolderTags" type="Request-Response" outputName="setFolderTagsResponse" inputName="setFolderTags" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8fe846a7-b0ee-4c08-98b0-539bf854db8f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Tag</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ws:setFolderTags>\r
         <!--Optional:-->\r
         <sid>?</sid>\r
         <folderId>?</folderId>\r
         <!--Zero or more repetitions:-->\r
         <tag>?</tag>\r
      </ws:setFolderTags>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Tag/setFolderTags"/></con:call></con:operation></con:interface><con:testSuite id="1e6caf46-4596-4c35-86f0-0a5a79af17f7" name="LogicalDoc-TestSuites"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="1c4c91d7-cf7a-4e6f-9f06-732ffe0ed6bc" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TestCase_Login" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Login-Properties" id="ff14a2eb-f422-409b-80d1-bed438ac7b92"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>admin</con:value></con:property><con:property><con:name>password</con:name><con:value>admin</con:value></con:property><con:property><con:name>sid</con:name><con:value>28e398f8-8188-489f-bc8a-d712661c83cf</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="bd8686e6-d332-4bf7-a832-78635eb3416a" name="login"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapAuthServiceServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="login" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="35ffab89-55e8-49a6-ae4e-2adacdfb6130"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Auth</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:login>
         <!--Optional:-->
         
         <!--Optional:-->
         <username>${Login-Properties#username}</username><password>${Login-Properties#password}</password>
      </ws:login>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e9007555-176d-4cf0-b186-f622490dff70" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="dd2dd279-9739-400f-a820-87a44d8ac7ab" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="d3d39e74-c86b-496d-85c1-91203ecb8c96" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="200992c0-d4ad-4243-8953-ef81651bea4b" name="Contains"><con:configuration><token>${#TestCase#sid}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Auth/login"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-Login" id="48a6a4dc-8e6f-46bd-a4ac-27c92779b9bb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>return</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>login</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:loginResponse[1]/return[1]</con:sourcePath><con:targetType>sid</con:targetType><con:targetStep>Login-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>48a6a4dc-8e6f-46bd-a4ac-27c92779b9bb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="b582de88-3876-4cce-bfda-6771c6957ea0" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TestCase_CreateFolder" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Login-Properties" id="7bccec0c-0476-44fd-906c-12c9b6d5e1cc"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>admin</con:value></con:property><con:property><con:name>password</con:name><con:value>admin</con:value></con:property><con:property><con:name>sid</con:name><con:value>76afa6e2-8767-4884-a0e5-8e4d2d7eb8a2</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="823ebb1c-2b2a-4cd0-993a-6d3c267710a8" name="login"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapAuthServiceServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="login" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="35ffab89-55e8-49a6-ae4e-2adacdfb6130"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Auth</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:login>
         <!--Optional:-->
         
         <!--Optional:-->
         <username>${Login-Properties#username}</username><password>${Login-Properties#password}</password>
      </ws:login>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e9007555-176d-4cf0-b186-f622490dff70" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="dd2dd279-9739-400f-a820-87a44d8ac7ab" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="d3d39e74-c86b-496d-85c1-91203ecb8c96" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="200992c0-d4ad-4243-8953-ef81651bea4b" name="Contains"><con:configuration><token>${#TestCase#sid}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Auth/login"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-Login" id="fbc16097-5e71-4e25-b916-36ef62a11ee4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>return</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>login</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:loginResponse[1]/return[1]</con:sourcePath><con:targetType>sid</con:targetType><con:targetStep>Login-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="CreateFolder-Properties" id="02d0e7ca-5a9c-4b1c-870b-cdc525ff9d02"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>name</con:name><con:value>Test</con:value></con:property><con:property><con:name>parentId</con:name><con:value>4</con:value></con:property><con:property><con:name>folderId</con:name><con:value>3375262</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="37389ce7-8939-405c-822d-8e30fbc48997" name="createFolder"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapFolderServiceServiceSoapBinding</con:interface><con:operation>createFolder</con:operation><con:request name="createFolder" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="24cf5f7c-05e0-4e70-94a2-91612b8dd58e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:createFolder>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <parentId>${CreateFolder-Properties#parentId}</parentId><name>${CreateFolder-Properties#name}</name>
         <!--Optional:-->
         
      </ws:createFolder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="bf3a3d10-dcdc-43f3-97a9-0361092ecb36" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="605aacae-0f88-408e-af4c-6f57dca4e52f" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="b09c2af7-d3e6-4ce0-9aa5-59bdadec18fb" name="Contains"><con:configuration><token>${#TestCase#folderId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/createFolder"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-CreateFolder" id="cb8f5094-fd27-4b20-8334-c491352dbf84"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>folderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createFolder</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createFolderResponse[1]/folderId[1]</con:sourcePath><con:targetType>folderId</con:targetType><con:targetStep>CreateFolder-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>48a6a4dc-8e6f-46bd-a4ac-27c92779b9bb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="8206cc51-fdd6-41af-8263-9c191c162773" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TestCase_CreateDocument" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Login-Properties" id="a7d23a29-4e9d-45ed-bf22-d361fb26190d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>admin</con:value></con:property><con:property><con:name>password</con:name><con:value>admin</con:value></con:property><con:property><con:name>sid</con:name><con:value>1a077083-3d63-4f79-8df9-c2046f907e01</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="a8442a3d-723d-407d-90d1-0a879ac67177" name="login"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapAuthServiceServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="login" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="35ffab89-55e8-49a6-ae4e-2adacdfb6130"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Auth</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:login>
         <!--Optional:-->
         
         <!--Optional:-->
         <username>${Login-Properties#username}</username><password>${Login-Properties#password}</password>
      </ws:login>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e9007555-176d-4cf0-b186-f622490dff70" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="dd2dd279-9739-400f-a820-87a44d8ac7ab" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="d3d39e74-c86b-496d-85c1-91203ecb8c96" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="200992c0-d4ad-4243-8953-ef81651bea4b" name="Contains"><con:configuration><token>${#TestCase#sid}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Auth/login"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-Login" id="097e3c8e-026b-40a5-aea9-5e6bd8a1a533"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>return</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>login</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:loginResponse[1]/return[1]</con:sourcePath><con:targetType>sid</con:targetType><con:targetStep>Login-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="CreateFolder-Properties" id="b5b05aed-d522-4f23-9535-40281cec6ae5"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>name</con:name><con:value>Test</con:value></con:property><con:property><con:name>parentId</con:name><con:value>4</con:value></con:property><con:property><con:name>folderId</con:name><con:value>3375263</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="dc351b54-1cf7-4433-91fe-f1c43a8f54a7" name="createFolder"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapFolderServiceServiceSoapBinding</con:interface><con:operation>createFolder</con:operation><con:request name="createFolder" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="24cf5f7c-05e0-4e70-94a2-91612b8dd58e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:createFolder>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <parentId>${CreateFolder-Properties#parentId}</parentId><name>${CreateFolder-Properties#name}</name>
         <!--Optional:-->
         
      </ws:createFolder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="bf3a3d10-dcdc-43f3-97a9-0361092ecb36" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="605aacae-0f88-408e-af4c-6f57dca4e52f" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="b09c2af7-d3e6-4ce0-9aa5-59bdadec18fb" name="Contains"><con:configuration><token>${#TestCase#folderId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/createFolder"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-CreateFolder" id="0626eb48-b685-4208-baa5-709c6ef33ef0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>folderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createFolder</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createFolderResponse[1]/folderId[1]</con:sourcePath><con:targetType>folderId</con:targetType><con:targetStep>CreateFolder-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="CreateDocument-Properties" id="e963237b-a884-49b7-b2d9-8056953f282d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>creator</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>creatorId</con:name><con:value>1</con:value></con:property><con:property><con:name>customId</con:name><con:value>1a077083-3d63-4f79-8df9-c2046f907e01</con:value></con:property><con:property><con:name>date</con:name><con:value>2018-08-27 17:30:30 +0200</con:value></con:property><con:property><con:name>exportStatus</con:name><con:value>0</con:value></con:property><con:property><con:name>fileName</con:name><con:value>Test.txt</con:value></con:property><con:property><con:name>fileSize</con:name><con:value>12</con:value></con:property><con:property><con:name>fileVersion</con:name><con:value>1.0</con:value></con:property><con:property><con:name>folderId</con:name><con:value><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   <soap:Body>
      <ns2:createResponse xmlns:ns2="http://ws.logicaldoc.com">
         <document>
            <creation>2018-08-27 17:30:30 +0200</creation>
            <creator>Admin Admin</creator>
            <creatorId>1</creatorId>
            <customId>1a077083-3d63-4f79-8df9-c2046f907e01</customId>
            <date>2018-08-27 17:30:30 +0200</date>
            <exportStatus>0</exportStatus>
            <fileName>Test.txt</fileName>
            <fileSize>12</fileSize>
            <fileVersion>1.0</fileVersion>
            <folderId>3375263</folderId>
            <id>3408028</id>
            <immutable>0</immutable>
            <indexed>0</indexed>
            <language>fr</language>
            <lastModified>2018-08-28 16:52:09 +0200</lastModified>
            <nature>0</nature>
            <pages>0</pages>
            <passwordProtected>0</passwordProtected>
            <published>1</published>
            <publisher>Admin Admin</publisher>
            <publisherId>1</publisherId>
            <rating>0</rating>
            <signed>0</signed>
            <stamped>0</stamped>
            <startPublishing>2018-08-26 00:00:00 +0200</startPublishing>
            <status>0</status>
            <title>Test</title>
            <type>txt</type>
            <version>1.0</version>
         </document>
      </ns2:createResponse>
   </soap:Body>
</soap:Envelope>]]></con:value></con:property><con:property><con:name>id</con:name><con:value>3408028</con:value></con:property><con:property><con:name>immutable</con:name><con:value>0</con:value></con:property><con:property><con:name>indexed</con:name><con:value>0</con:value></con:property><con:property><con:name>language</con:name><con:value>fr</con:value></con:property><con:property><con:name>lastModified</con:name><con:value>2018-08-28 16:52:09 +0200</con:value></con:property><con:property><con:name>nature</con:name><con:value>0</con:value></con:property><con:property><con:name>pages</con:name><con:value>0</con:value></con:property><con:property><con:name>passwordProtected</con:name><con:value>0</con:value></con:property><con:property><con:name>published</con:name><con:value>1</con:value></con:property><con:property><con:name>publisher</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>publisherId</con:name><con:value>1</con:value></con:property><con:property><con:name>rating</con:name><con:value>0</con:value></con:property><con:property><con:name>signed</con:name><con:value>0</con:value></con:property><con:property><con:name>stamped</con:name><con:value>0</con:value></con:property><con:property><con:name>startPublishing</con:name><con:value>2018-08-26 00:00:00 +0200</con:value></con:property><con:property><con:name>status</con:name><con:value>0</con:value></con:property><con:property><con:name>title</con:name><con:value>Test</con:value></con:property><con:property><con:name>type</con:name><con:value>txt</con:value></con:property><con:property><con:name>version</con:name><con:value>1.0</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="c65cb866-c38e-4061-b876-3852ef5f5e2e" name="createDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>create</con:operation><con:request name="createDocument" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="30765109-a296-4428-9e23-f8f3be296eb0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:create>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <!--Optional:-->
         <document>
            <!--Zero or more repetitions:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            <creator>${CreateDocument-Properties#creator}</creator>
            <creatorId>${CreateDocument-Properties#creatorId}</creatorId>
            <!--Optional:-->
            <customId>${Login-Properties#sid}</customId>
            <!--Optional:-->
            <date>${CreateDocument-Properties#date}</date>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <exportStatus>${CreateDocument-Properties#exportStatus}</exportStatus>
            <!--Optional:-->
            <fileName>${CreateDocument-Properties#fileName}</fileName>
            <fileSize>${CreateDocument-Properties#fileSize}</fileSize>
            <!--Optional:-->
            <fileVersion>${CreateDocument-Properties#fileVersion}</fileVersion>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <folderId>${CreateFolder-Properties#folderId}</folderId><id>${CreateDocument-Properties#id}</id>
            <immutable>${CreateDocument-Properties#immutable}</immutable>
            <indexed>${CreateDocument-Properties#indexed}</indexed>
            <!--Optional:-->
            <language>${CreateDocument-Properties#language}</language>
            <!--Optional:-->
            <lastModified>${CreateDocument-Properties#lastModified}</lastModified>
            <!--Optional:-->
            
            <nature>${CreateDocument-Properties#nature}</nature>
            <pages>${CreateDocument-Properties#pages}</pages>
            <!--Optional:-->
            <passwordProtected>${CreateDocument-Properties#passwordProtected}</passwordProtected>
            <!--Optional:-->
            
            <published>${CreateDocument-Properties#published}</published>
            <!--Optional:-->
            <publisher>${CreateDocument-Properties#publisher}</publisher>
            <publisherId>${CreateDocument-Properties#publisherId}</publisherId>
            <!--Optional:-->
            <rating>${CreateDocument-Properties#rating}</rating>
            <!--Optional:-->
            
            <signed>${CreateDocument-Properties#signed}</signed>
            <stamped>${CreateDocument-Properties#stamped}</stamped>
            <!--Optional:-->
            <startPublishing>${CreateDocument-Properties#startPublishing}</startPublishing>
            <status>${CreateDocument-Properties#status}</status>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Zero or more repetitions:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            <title>${CreateDocument-Properties#title}</title>
            <!--Optional:-->
            <type>${CreateDocument-Properties#type}</type>
            <!--Optional:-->
            <version>${CreateDocument-Properties#version}</version>
            <!--Optional:-->
            
         </document><content>cid:1227959867564</content>
         <!--Optional:-->
         
      </ws:create>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f7f14f8d-344e-4e6e-b6ae-fa02b3c29b45" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="5480d070-4532-472c-8ac9-db041896ccd0" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="9167b28f-56e4-4479-b202-354836309cb3" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="768ffe89-1455-4ece-be5e-a9f3523c5d1b" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/create"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-CreateDocument" id="2da9f40f-d33d-44cc-ac5e-7b5bd5ceb847"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creator</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/creator[1]</con:sourcePath><con:targetType>creator</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creatorId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/creatorId[1]</con:sourcePath><con:targetType>creatorId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>customId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/customId[1]</con:sourcePath><con:targetType>customId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>date</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/date[1]</con:sourcePath><con:targetType>date</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>exportStatus</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/exportStatus[1]</con:sourcePath><con:targetType>exportStatus</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/fileName[1]</con:sourcePath><con:targetType>fileName</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>fileSize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/fileSize[1]</con:sourcePath><con:targetType>fileSize</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileVersion</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/fileVersion[1]</con:sourcePath><con:targetType>fileVersion</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/id[1]</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>immutable</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/immutable[1]</con:sourcePath><con:targetType>immutable</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>indexed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/indexed[1]</con:sourcePath><con:targetType>indexed</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>language</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/language[1]</con:sourcePath><con:targetType>language</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lastModified</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/lastModified[1]</con:sourcePath><con:targetType>lastModified</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>nature</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/nature[1]</con:sourcePath><con:targetType>nature</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pages</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/pages[1]</con:sourcePath><con:targetType>pages</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passwordProtected</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/passwordProtected[1]</con:sourcePath><con:targetType>passwordProtected</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>published</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/published[1]</con:sourcePath><con:targetType>published</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisher</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/publisher[1]</con:sourcePath><con:targetType>publisher</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisherId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/publisherId[1]</con:sourcePath><con:targetType>publisherId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>rating</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/rating[1]</con:sourcePath><con:targetType>rating</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>signed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/signed[1]</con:sourcePath><con:targetType>signed</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>stamped</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/stamped[1]</con:sourcePath><con:targetType>stamped</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>startPublishing</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/startPublishing[1]</con:sourcePath><con:targetType>startPublishing</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>status</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/status[1]</con:sourcePath><con:targetType>status</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>title</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/title[1]</con:sourcePath><con:targetType>title</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/type[1]</con:sourcePath><con:targetType>type</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>version</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/version[1]</con:sourcePath><con:targetType>version</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>folderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath/><con:targetType>folderId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>48a6a4dc-8e6f-46bd-a4ac-27c92779b9bb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c65cb866-c38e-4061-b876-3852ef5f5e2e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a7d23a29-4e9d-45ed-bf22-d361fb26190d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8442a3d-723d-407d-90d1-0a879ac67177</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>097e3c8e-026b-40a5-aea9-5e6bd8a1a533</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dc351b54-1cf7-4433-91fe-f1c43a8f54a7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b5b05aed-d522-4f23-9535-40281cec6ae5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0626eb48-b685-4208-baa5-709c6ef33ef0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="32ebbbe1-5286-468b-a25c-a7772f176f83" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TestCase_UpdateDocument" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Login-Properties" id="515ad750-38a0-4590-bc87-16b2e47e373b"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>admin</con:value></con:property><con:property><con:name>password</con:name><con:value>admin</con:value></con:property><con:property><con:name>sid</con:name><con:value>c8262419-f3a5-48f5-a388-12485bc7d638</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="12d9456f-8ded-481d-bec7-cb9ea2aee666" name="login"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapAuthServiceServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="login" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="35ffab89-55e8-49a6-ae4e-2adacdfb6130"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Auth</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:login>
         <!--Optional:-->
         
         <!--Optional:-->
         <username>${Login-Properties#username}</username><password>${Login-Properties#password}</password>
      </ws:login>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e9007555-176d-4cf0-b186-f622490dff70" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="dd2dd279-9739-400f-a820-87a44d8ac7ab" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="d3d39e74-c86b-496d-85c1-91203ecb8c96" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="200992c0-d4ad-4243-8953-ef81651bea4b" name="Contains"><con:configuration><token>${#TestCase#sid}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Auth/login"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-Login" id="4b2ecfa5-bb73-485a-8c64-655e1f0602d2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>return</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>login</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:loginResponse[1]/return[1]</con:sourcePath><con:targetType>sid</con:targetType><con:targetStep>Login-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="CreateFolder-Properties" id="567ac73d-e853-4a16-a327-f5d673184ad0"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>name</con:name><con:value>Test</con:value></con:property><con:property><con:name>parentId</con:name><con:value>4</con:value></con:property><con:property><con:name>folderId</con:name><con:value>3375272</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="d8496446-e36f-4254-993d-047d7eb77803" name="createFolder"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapFolderServiceServiceSoapBinding</con:interface><con:operation>createFolder</con:operation><con:request name="createFolder" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="24cf5f7c-05e0-4e70-94a2-91612b8dd58e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:createFolder>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <parentId>${CreateFolder-Properties#parentId}</parentId><name>${CreateFolder-Properties#name}</name>
         <!--Optional:-->
         
      </ws:createFolder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="bf3a3d10-dcdc-43f3-97a9-0361092ecb36" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="605aacae-0f88-408e-af4c-6f57dca4e52f" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="b09c2af7-d3e6-4ce0-9aa5-59bdadec18fb" name="Contains"><con:configuration><token>${#TestCase#folderId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/createFolder"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-CreateFolder" id="2e09d9d0-018a-4190-aee7-8a3510716126"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>folderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createFolder</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createFolderResponse[1]/folderId[1]</con:sourcePath><con:targetType>folderId</con:targetType><con:targetStep>CreateFolder-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="CreateDocument-Properties" id="13681285-2680-4da5-a84b-2d72bb346a70"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>creator</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>creatorId</con:name><con:value>1</con:value></con:property><con:property><con:name>customId</con:name><con:value>c8262419-f3a5-48f5-a388-12485bc7d638</con:value></con:property><con:property><con:name>date</con:name><con:value>2018-08-27 17:30:30 +0200</con:value></con:property><con:property><con:name>exportStatus</con:name><con:value>0</con:value></con:property><con:property><con:name>fileName</con:name><con:value>Test.txt</con:value></con:property><con:property><con:name>fileSize</con:name><con:value>12</con:value></con:property><con:property><con:name>fileVersion</con:name><con:value>1.0</con:value></con:property><con:property><con:name>folderId</con:name><con:value><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   <soap:Body>
      <ns2:createResponse xmlns:ns2="http://ws.logicaldoc.com">
         <document>
            <creation>2018-08-27 17:30:30 +0200</creation>
            <creator>Admin Admin</creator>
            <creatorId>1</creatorId>
            <customId>c8262419-f3a5-48f5-a388-12485bc7d638</customId>
            <date>2018-08-27 17:30:30 +0200</date>
            <exportStatus>0</exportStatus>
            <fileName>Test.txt</fileName>
            <fileSize>12</fileSize>
            <fileVersion>1.0</fileVersion>
            <folderId>3375272</folderId>
            <id>3408037</id>
            <immutable>0</immutable>
            <indexed>0</indexed>
            <language>fr</language>
            <lastModified>2018-08-28 16:57:03 +0200</lastModified>
            <nature>0</nature>
            <pages>0</pages>
            <passwordProtected>0</passwordProtected>
            <published>1</published>
            <publisher>Admin Admin</publisher>
            <publisherId>1</publisherId>
            <rating>0</rating>
            <signed>0</signed>
            <stamped>0</stamped>
            <startPublishing>2018-08-26 00:00:00 +0200</startPublishing>
            <status>0</status>
            <title>Test</title>
            <type>txt</type>
            <version>1.0</version>
         </document>
      </ns2:createResponse>
   </soap:Body>
</soap:Envelope>]]></con:value></con:property><con:property><con:name>id</con:name><con:value>3408037</con:value></con:property><con:property><con:name>immutable</con:name><con:value>0</con:value></con:property><con:property><con:name>indexed</con:name><con:value>0</con:value></con:property><con:property><con:name>language</con:name><con:value>fr</con:value></con:property><con:property><con:name>lastModified</con:name><con:value>2018-08-28 16:57:03 +0200</con:value></con:property><con:property><con:name>nature</con:name><con:value>0</con:value></con:property><con:property><con:name>pages</con:name><con:value>0</con:value></con:property><con:property><con:name>passwordProtected</con:name><con:value>0</con:value></con:property><con:property><con:name>published</con:name><con:value>1</con:value></con:property><con:property><con:name>publisher</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>publisherId</con:name><con:value>1</con:value></con:property><con:property><con:name>rating</con:name><con:value>0</con:value></con:property><con:property><con:name>signed</con:name><con:value>0</con:value></con:property><con:property><con:name>stamped</con:name><con:value>0</con:value></con:property><con:property><con:name>startPublishing</con:name><con:value>2018-08-26 00:00:00 +0200</con:value></con:property><con:property><con:name>status</con:name><con:value>0</con:value></con:property><con:property><con:name>title</con:name><con:value>Test</con:value></con:property><con:property><con:name>type</con:name><con:value>txt</con:value></con:property><con:property><con:name>version</con:name><con:value>1.0</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="d49729a9-7fb9-451a-a37f-d18c7d5ea1b5" name="createDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>create</con:operation><con:request name="createDocument" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="30765109-a296-4428-9e23-f8f3be296eb0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:create>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <!--Optional:-->
         <document>
            <!--Zero or more repetitions:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            <creator>${CreateDocument-Properties#creator}</creator>
            <creatorId>${CreateDocument-Properties#creatorId}</creatorId>
            <!--Optional:-->
            <customId>${Login-Properties#sid}</customId>
            <!--Optional:-->
            <date>${CreateDocument-Properties#date}</date>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <exportStatus>${CreateDocument-Properties#exportStatus}</exportStatus>
            <!--Optional:-->
            <fileName>${CreateDocument-Properties#fileName}</fileName>
            <fileSize>${CreateDocument-Properties#fileSize}</fileSize>
            <!--Optional:-->
            <fileVersion>${CreateDocument-Properties#fileVersion}</fileVersion>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <folderId>${CreateFolder-Properties#folderId}</folderId><id>${CreateDocument-Properties#id}</id>
            <immutable>${CreateDocument-Properties#immutable}</immutable>
            <indexed>${CreateDocument-Properties#indexed}</indexed>
            <!--Optional:-->
            <language>${CreateDocument-Properties#language}</language>
            <!--Optional:-->
            <lastModified>${CreateDocument-Properties#lastModified}</lastModified>
            <!--Optional:-->
            
            <nature>${CreateDocument-Properties#nature}</nature>
            <pages>${CreateDocument-Properties#pages}</pages>
            <!--Optional:-->
            <passwordProtected>${CreateDocument-Properties#passwordProtected}</passwordProtected>
            <!--Optional:-->
            
            <published>${CreateDocument-Properties#published}</published>
            <!--Optional:-->
            <publisher>${CreateDocument-Properties#publisher}</publisher>
            <publisherId>${CreateDocument-Properties#publisherId}</publisherId>
            <!--Optional:-->
            <rating>${CreateDocument-Properties#rating}</rating>
            <!--Optional:-->
            
            <signed>${CreateDocument-Properties#signed}</signed>
            <stamped>${CreateDocument-Properties#stamped}</stamped>
            <!--Optional:-->
            <startPublishing>${CreateDocument-Properties#startPublishing}</startPublishing>
            <status>${CreateDocument-Properties#status}</status>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Zero or more repetitions:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            <title>${CreateDocument-Properties#title}</title>
            <!--Optional:-->
            <type>${CreateDocument-Properties#type}</type>
            <!--Optional:-->
            <version>${CreateDocument-Properties#version}</version>
            <!--Optional:-->
            
         </document><content>cid:1227959867564</content>
         <!--Optional:-->
         
      </ws:create>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f7f14f8d-344e-4e6e-b6ae-fa02b3c29b45" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="5480d070-4532-472c-8ac9-db041896ccd0" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="9167b28f-56e4-4479-b202-354836309cb3" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="768ffe89-1455-4ece-be5e-a9f3523c5d1b" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/create"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-CreateDocument" id="d6abfe71-36dd-4904-8d18-2398cc8a93b3"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creator</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/creator[1]</con:sourcePath><con:targetType>creator</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creatorId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/creatorId[1]</con:sourcePath><con:targetType>creatorId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>customId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/customId[1]</con:sourcePath><con:targetType>customId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>date</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/date[1]</con:sourcePath><con:targetType>date</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>exportStatus</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/exportStatus[1]</con:sourcePath><con:targetType>exportStatus</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/fileName[1]</con:sourcePath><con:targetType>fileName</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>fileSize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/fileSize[1]</con:sourcePath><con:targetType>fileSize</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileVersion</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/fileVersion[1]</con:sourcePath><con:targetType>fileVersion</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/id[1]</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>immutable</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/immutable[1]</con:sourcePath><con:targetType>immutable</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>indexed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/indexed[1]</con:sourcePath><con:targetType>indexed</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>language</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/language[1]</con:sourcePath><con:targetType>language</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lastModified</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/lastModified[1]</con:sourcePath><con:targetType>lastModified</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>nature</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/nature[1]</con:sourcePath><con:targetType>nature</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pages</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/pages[1]</con:sourcePath><con:targetType>pages</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passwordProtected</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/passwordProtected[1]</con:sourcePath><con:targetType>passwordProtected</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>published</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/published[1]</con:sourcePath><con:targetType>published</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisher</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/publisher[1]</con:sourcePath><con:targetType>publisher</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisherId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/publisherId[1]</con:sourcePath><con:targetType>publisherId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>rating</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/rating[1]</con:sourcePath><con:targetType>rating</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>signed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/signed[1]</con:sourcePath><con:targetType>signed</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>stamped</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/stamped[1]</con:sourcePath><con:targetType>stamped</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>startPublishing</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/startPublishing[1]</con:sourcePath><con:targetType>startPublishing</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>status</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/status[1]</con:sourcePath><con:targetType>status</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>title</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/title[1]</con:sourcePath><con:targetType>title</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/type[1]</con:sourcePath><con:targetType>type</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>version</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/version[1]</con:sourcePath><con:targetType>version</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>folderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath/><con:targetType>folderId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="05e90777-cbfb-4068-b56d-694d39c06568" name="getDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>getDocument</con:operation><con:request name="getDocument" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6efc1e9b-1127-4db7-ba97-aca600cff543"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getDocument>
         <!--Optional:-->
         
         <sid>${Login-Properties#sid}</sid><docId>${CreateDocument-Properties#id}</docId>
      </ws:getDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0394bfe2-64a2-4524-93da-40244412f3ab" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="d628340b-7008-440d-9faa-fb9d74fa4c67" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="ef0a31ab-39da-4ab9-bc19-ab41b5d92264" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="597f19c8-29f0-4b14-8447-a5a5bfdc3154" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getDocument"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="UpdateDocument-Properties" id="3854c7b3-1766-4745-9dae-ab4a89c64ff6"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>creator</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>creation</con:name><con:value>2018-08-27 17:30:30 +0200</con:value></con:property><con:property><con:name>creatorId</con:name><con:value>1</con:value></con:property><con:property><con:name>customId</con:name><con:value>c8262419-f3a5-48f5-a388-12485bc7d638</con:value></con:property><con:property><con:name>date</con:name><con:value>2018-08-27 17:30:30 +0200</con:value></con:property><con:property><con:name>exportStatus</con:name><con:value>0</con:value></con:property><con:property><con:name>fileName</con:name><con:value>Test.txt</con:value></con:property><con:property><con:name>fileSize</con:name><con:value>12</con:value></con:property><con:property><con:name>fileVersion</con:name><con:value>1.0</con:value></con:property><con:property><con:name>folderId</con:name><con:value>3375272</con:value></con:property><con:property><con:name>id</con:name><con:value>3408037</con:value></con:property><con:property><con:name>immutable</con:name><con:value>0</con:value></con:property><con:property><con:name>indexed</con:name><con:value>0</con:value></con:property><con:property><con:name>language</con:name><con:value>fr</con:value></con:property><con:property><con:name>lastModified</con:name><con:value>2018-08-28 16:57:03 +0200</con:value></con:property><con:property><con:name>nature</con:name><con:value>0</con:value></con:property><con:property><con:name>pages</con:name><con:value>0</con:value></con:property><con:property><con:name>passwordProtected</con:name><con:value>0</con:value></con:property><con:property><con:name>published</con:name><con:value>1</con:value></con:property><con:property><con:name>publisher</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>publisherId</con:name><con:value>1</con:value></con:property><con:property><con:name>rating</con:name><con:value>0</con:value></con:property><con:property><con:name>signed</con:name><con:value>0</con:value></con:property><con:property><con:name>stamped</con:name><con:value>0</con:value></con:property><con:property><con:name>startPublishing</con:name><con:value>2018-08-26 00:00:00 +0200</con:value></con:property><con:property><con:name>status</con:name><con:value>0</con:value></con:property><con:property><con:name>title</con:name><con:value>Test</con:value></con:property><con:property><con:name>type</con:name><con:value>txt</con:value></con:property><con:property><con:name>version</con:name><con:value>1.0</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="7fd256dd-f50f-4627-9068-bce280e6cb53" name="getDocumentByCustomId-Request1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>getDocumentByCustomId</con:operation><con:request name="getDocumentByCustomId-Request1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3740dbf3-fff3-49c5-a025-840ba2c45bb0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getDocumentByCustomId>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid><customId>${UpdateDocument-Properties#customId}</customId>
         <!--Optional:-->
         
      </ws:getDocumentByCustomId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d20b60f8-1729-4e09-8af6-d4205d4ce0ce" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="82d5153a-0dc8-4c13-9057-4a1d693793dd" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="5a0ebc8f-b79d-42dc-9a34-2e19a93fb3c3" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="a95b4170-d747-462a-8ca2-fa07338afa11" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getDocumentByCustomId"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-GetDocumentByCustomId" id="26289607-254a-4337-ae04-3b2de3b25461"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creation</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/creation[1]</con:sourcePath><con:targetType>creation</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creator</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/creator[1]</con:sourcePath><con:targetType>creator</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>creatorId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/creatorId[1]</con:sourcePath><con:targetType>creatorId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>customId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/customId[1]</con:sourcePath><con:targetType>customId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>date</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/date[1]</con:sourcePath><con:targetType>date</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>exportStatus</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/exportStatus[1]</con:sourcePath><con:targetType>exportStatus</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/fileName[1]</con:sourcePath><con:targetType>fileName</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileSize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/fileSize[1]</con:sourcePath><con:targetType>fileSize</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileVersion</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/fileVersion[1]</con:sourcePath><con:targetType>fileVersion</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>folderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/folderId[1]</con:sourcePath><con:targetType>folderId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/id[1]</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>immutable</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/immutable[1]</con:sourcePath><con:targetType>immutable</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>indexed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/indexed[1]</con:sourcePath><con:targetType>indexed</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>language</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/language[1]</con:sourcePath><con:targetType>language</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>lastModified</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/lastModified[1]</con:sourcePath><con:targetType>lastModified</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>nature</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/nature[1]</con:sourcePath><con:targetType>nature</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pages</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/pages[1]</con:sourcePath><con:targetType>pages</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>passwordProtected</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/passwordProtected[1]</con:sourcePath><con:targetType>passwordProtected</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>published</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/published[1]</con:sourcePath><con:targetType>published</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisher</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/publisher[1]</con:sourcePath><con:targetType>publisher</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisherId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/publisherId[1]</con:sourcePath><con:targetType>publisherId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>rating</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/rating[1]</con:sourcePath><con:targetType>rating</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>signed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/signed[1]</con:sourcePath><con:targetType>signed</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>stamped</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/stamped[1]</con:sourcePath><con:targetType>stamped</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>startPublishing</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/startPublishing[1]</con:sourcePath><con:targetType>startPublishing</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>status</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/status[1]</con:sourcePath><con:targetType>status</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>title</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/title[1]</con:sourcePath><con:targetType>title</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/type[1]</con:sourcePath><con:targetType>type</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" ignoreEmpty="false" transferToAll="false" transferChildNodes="false"><con:name>version</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/version[1]</con:sourcePath><con:targetType>version</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="ef371259-95fb-4ba9-ba02-3449fa08c225" name="update"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>update</con:operation><con:request name="update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="28b045c6-55d1-403c-ba97-cb36e9237d64"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:update>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <!--Optional:-->
<document>
            <creation>${UpdateDocument-Properties#creation}</creation>
            <creator>${UpdateDocument-Properties#creator}</creator>
            <creatorId>${UpdateDocument-Properties#creatorId}</creatorId>
            <customId>${UpdateDocument-Properties#customId}</customId>
            <date>${UpdateDocument-Properties#date}</date>
            <exportStatus>${UpdateDocument-Properties#exportStatus}</exportStatus>
            <fileName>TestUpdate.txt</fileName>
            <fileSize>${UpdateDocument-Properties#fileSize}</fileSize>
            <fileVersion>${UpdateDocument-Properties#fileVersion}</fileVersion>
            <folderId>${UpdateDocument-Properties#folderId}</folderId>
            <id>${UpdateDocument-Properties#id}</id>
            <immutable>${UpdateDocument-Properties#immutable}</immutable>
            <indexed>${UpdateDocument-Properties#indexed}</indexed>
            <language>${UpdateDocument-Properties#language}</language>
            <lastModified>${UpdateDocument-Properties#lastModified}</lastModified>
            <nature>${UpdateDocument-Properties#nature}</nature>
            <pages>${UpdateDocument-Properties#pages}</pages>
            <passwordProtected>${UpdateDocument-Properties#passwordProtected}</passwordProtected>
            <published>${UpdateDocument-Properties#published}</published>
            <publisher>${UpdateDocument-Properties#publisher}</publisher>
            <publisherId>${UpdateDocument-Properties#publisherId}</publisherId>
            <rating>${UpdateDocument-Properties#rating}</rating>
            <signed>${UpdateDocument-Properties#signed}</signed>
            <stamped>${UpdateDocument-Properties#stamped}</stamped>
            <startPublishing>${UpdateDocument-Properties#startPublishing}</startPublishing>
            <status>${UpdateDocument-Properties#status}</status>
            <title>${UpdateDocument-Properties#title}</title>
            <type>${UpdateDocument-Properties#type}</type>
            <version>${UpdateDocument-Properties#version}</version>
         </document>
         
      </ws:update>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="118b231c-6322-4b89-a57a-400731c640f5" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3192035e-9927-42cf-ae0c-593134495a27" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="0b8adb06-8169-422c-92e0-2b96dd36ce9f" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="9b6d2442-dec1-451c-a879-4475b5593561" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/update"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="825571e4-14f5-4f62-b534-0c8dc6cea62e" name="getDocumentByCustomId-Request2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>getDocumentByCustomId</con:operation><con:request name="getDocumentByCustomId-Request2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3740dbf3-fff3-49c5-a025-840ba2c45bb0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getDocumentByCustomId>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid><customId>${UpdateDocument-Properties#customId}</customId>
         <!--Optional:-->
         
      </ws:getDocumentByCustomId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d20b60f8-1729-4e09-8af6-d4205d4ce0ce" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="82d5153a-0dc8-4c13-9057-4a1d693793dd" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="5a0ebc8f-b79d-42dc-9a34-2e19a93fb3c3" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="a95b4170-d747-462a-8ca2-fa07338afa11" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getDocumentByCustomId"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>05e90777-cbfb-4068-b56d-694d39c06568</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7fd256dd-f50f-4627-9068-bce280e6cb53</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>515ad750-38a0-4590-bc87-16b2e47e373b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>12d9456f-8ded-481d-bec7-cb9ea2aee666</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4b2ecfa5-bb73-485a-8c64-655e1f0602d2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>567ac73d-e853-4a16-a327-f5d673184ad0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d8496446-e36f-4254-993d-047d7eb77803</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e09d9d0-018a-4190-aee7-8a3510716126</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13681285-2680-4da5-a84b-2d72bb346a70</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d49729a9-7fb9-451a-a37f-d18c7d5ea1b5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d6abfe71-36dd-4904-8d18-2398cc8a93b3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="cb6fd9f4-8042-4c6e-9833-d080cadc1afb" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TestCase_bookmarkDocument" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Login-Properties" id="a2b916ec-6fb8-4487-9d60-7a1656e28099"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>admin</con:value></con:property><con:property><con:name>password</con:name><con:value>admin</con:value></con:property><con:property><con:name>sid</con:name><con:value>e7c350bc-cb35-4ed5-8bde-467f95b60709</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="5833c4fe-161e-4e75-b061-c138ec8db08c" name="login"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapAuthServiceServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="login" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="35ffab89-55e8-49a6-ae4e-2adacdfb6130"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Auth</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:login>
         <!--Optional:-->
         
         <!--Optional:-->
         <username>${Login-Properties#username}</username><password>${Login-Properties#password}</password>
      </ws:login>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e9007555-176d-4cf0-b186-f622490dff70" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="dd2dd279-9739-400f-a820-87a44d8ac7ab" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="d3d39e74-c86b-496d-85c1-91203ecb8c96" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="200992c0-d4ad-4243-8953-ef81651bea4b" name="Contains"><con:configuration><token>${#TestCase#sid}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Auth/login"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-Login" id="1ad72c4b-2730-4b37-93a7-662e5be4429f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>return</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>login</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:loginResponse[1]/return[1]</con:sourcePath><con:targetType>sid</con:targetType><con:targetStep>Login-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="CreateFolder-Properties" id="f80e22ed-4370-4b54-8024-1269211bc781"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>name</con:name><con:value>Test</con:value></con:property><con:property><con:name>parentId</con:name><con:value>4</con:value></con:property><con:property><con:name>folderId</con:name><con:value>3375265</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="bb36e5a3-a09f-43ab-b650-0700e080c8c8" name="createFolder"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapFolderServiceServiceSoapBinding</con:interface><con:operation>createFolder</con:operation><con:request name="createFolder" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="24cf5f7c-05e0-4e70-94a2-91612b8dd58e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:createFolder>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <parentId>${CreateFolder-Properties#parentId}</parentId><name>${CreateFolder-Properties#name}</name>
         <!--Optional:-->
         
      </ws:createFolder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="bf3a3d10-dcdc-43f3-97a9-0361092ecb36" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="605aacae-0f88-408e-af4c-6f57dca4e52f" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="b09c2af7-d3e6-4ce0-9aa5-59bdadec18fb" name="Contains"><con:configuration><token>${#TestCase#folderId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/createFolder"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-CreateFolder" id="ea46c4dd-4b00-4543-9154-3db15904aa5d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>folderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createFolder</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createFolderResponse[1]/folderId[1]</con:sourcePath><con:targetType>folderId</con:targetType><con:targetStep>CreateFolder-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="CreateDocument-Properties" id="9ee4e6e2-3f80-4295-ad5d-1169cda23c81"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>creator</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>creatorId</con:name><con:value>1</con:value></con:property><con:property><con:name>customId</con:name><con:value>e7c350bc-cb35-4ed5-8bde-467f95b60709</con:value></con:property><con:property><con:name>date</con:name><con:value>2018-08-27 17:30:30 +0200</con:value></con:property><con:property><con:name>exportStatus</con:name><con:value>0</con:value></con:property><con:property><con:name>fileName</con:name><con:value>Test.txt</con:value></con:property><con:property><con:name>fileSize</con:name><con:value>12</con:value></con:property><con:property><con:name>fileVersion</con:name><con:value>1.0</con:value></con:property><con:property><con:name>folderId</con:name><con:value><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   <soap:Body>
      <ns2:createResponse xmlns:ns2="http://ws.logicaldoc.com">
         <document>
            <creation>2018-08-27 17:30:30 +0200</creation>
            <creator>Admin Admin</creator>
            <creatorId>1</creatorId>
            <customId>e7c350bc-cb35-4ed5-8bde-467f95b60709</customId>
            <date>2018-08-27 17:30:30 +0200</date>
            <exportStatus>0</exportStatus>
            <fileName>Test.txt</fileName>
            <fileSize>12</fileSize>
            <fileVersion>1.0</fileVersion>
            <folderId>3375265</folderId>
            <id>3408030</id>
            <immutable>0</immutable>
            <indexed>0</indexed>
            <language>fr</language>
            <lastModified>2018-08-28 16:52:09 +0200</lastModified>
            <nature>0</nature>
            <pages>0</pages>
            <passwordProtected>0</passwordProtected>
            <published>1</published>
            <publisher>Admin Admin</publisher>
            <publisherId>1</publisherId>
            <rating>0</rating>
            <signed>0</signed>
            <stamped>0</stamped>
            <startPublishing>2018-08-26 00:00:00 +0200</startPublishing>
            <status>0</status>
            <title>Test</title>
            <type>txt</type>
            <version>1.0</version>
         </document>
      </ns2:createResponse>
   </soap:Body>
</soap:Envelope>]]></con:value></con:property><con:property><con:name>id</con:name><con:value>3408030</con:value></con:property><con:property><con:name>immutable</con:name><con:value>0</con:value></con:property><con:property><con:name>indexed</con:name><con:value>0</con:value></con:property><con:property><con:name>language</con:name><con:value>fr</con:value></con:property><con:property><con:name>lastModified</con:name><con:value>2018-08-28 16:52:09 +0200</con:value></con:property><con:property><con:name>nature</con:name><con:value>0</con:value></con:property><con:property><con:name>pages</con:name><con:value>0</con:value></con:property><con:property><con:name>passwordProtected</con:name><con:value>0</con:value></con:property><con:property><con:name>published</con:name><con:value>1</con:value></con:property><con:property><con:name>publisher</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>publisherId</con:name><con:value>1</con:value></con:property><con:property><con:name>rating</con:name><con:value>0</con:value></con:property><con:property><con:name>signed</con:name><con:value>0</con:value></con:property><con:property><con:name>stamped</con:name><con:value>0</con:value></con:property><con:property><con:name>startPublishing</con:name><con:value>2018-08-26 00:00:00 +0200</con:value></con:property><con:property><con:name>status</con:name><con:value>0</con:value></con:property><con:property><con:name>title</con:name><con:value>Test</con:value></con:property><con:property><con:name>type</con:name><con:value>txt</con:value></con:property><con:property><con:name>version</con:name><con:value>1.0</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="6aa292f0-018b-4bf1-bbf4-7c1cffc32aba" name="createDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>create</con:operation><con:request name="createDocument" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="30765109-a296-4428-9e23-f8f3be296eb0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:create>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <!--Optional:-->
         <document>
            <!--Zero or more repetitions:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            <creator>${CreateDocument-Properties#creator}</creator>
            <creatorId>${CreateDocument-Properties#creatorId}</creatorId>
            <!--Optional:-->
            <customId>${Login-Properties#sid}</customId>
            <!--Optional:-->
            <date>${CreateDocument-Properties#date}</date>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <exportStatus>${CreateDocument-Properties#exportStatus}</exportStatus>
            <!--Optional:-->
            <fileName>${CreateDocument-Properties#fileName}</fileName>
            <fileSize>${CreateDocument-Properties#fileSize}</fileSize>
            <!--Optional:-->
            <fileVersion>${CreateDocument-Properties#fileVersion}</fileVersion>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <folderId>${CreateFolder-Properties#folderId}</folderId><id>${CreateDocument-Properties#id}</id>
            <immutable>${CreateDocument-Properties#immutable}</immutable>
            <indexed>${CreateDocument-Properties#indexed}</indexed>
            <!--Optional:-->
            <language>${CreateDocument-Properties#language}</language>
            <!--Optional:-->
            <lastModified>${CreateDocument-Properties#lastModified}</lastModified>
            <!--Optional:-->
            
            <nature>${CreateDocument-Properties#nature}</nature>
            <pages>${CreateDocument-Properties#pages}</pages>
            <!--Optional:-->
            <passwordProtected>${CreateDocument-Properties#passwordProtected}</passwordProtected>
            <!--Optional:-->
            
            <published>${CreateDocument-Properties#published}</published>
            <!--Optional:-->
            <publisher>${CreateDocument-Properties#publisher}</publisher>
            <publisherId>${CreateDocument-Properties#publisherId}</publisherId>
            <!--Optional:-->
            <rating>${CreateDocument-Properties#rating}</rating>
            <!--Optional:-->
            
            <signed>${CreateDocument-Properties#signed}</signed>
            <stamped>${CreateDocument-Properties#stamped}</stamped>
            <!--Optional:-->
            <startPublishing>${CreateDocument-Properties#startPublishing}</startPublishing>
            <status>${CreateDocument-Properties#status}</status>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Zero or more repetitions:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            <title>${CreateDocument-Properties#title}</title>
            <!--Optional:-->
            <type>${CreateDocument-Properties#type}</type>
            <!--Optional:-->
            <version>${CreateDocument-Properties#version}</version>
            <!--Optional:-->
            
         </document><content>cid:1227959867564</content>
         <!--Optional:-->
         
      </ws:create>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f7f14f8d-344e-4e6e-b6ae-fa02b3c29b45" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="5480d070-4532-472c-8ac9-db041896ccd0" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="9167b28f-56e4-4479-b202-354836309cb3" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="768ffe89-1455-4ece-be5e-a9f3523c5d1b" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/create"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-CreateDocument" id="29953b16-b21d-443c-9b2b-6b90692f95a6"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creator</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/creator[1]</con:sourcePath><con:targetType>creator</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creatorId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/creatorId[1]</con:sourcePath><con:targetType>creatorId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>customId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/customId[1]</con:sourcePath><con:targetType>customId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>date</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/date[1]</con:sourcePath><con:targetType>date</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>exportStatus</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/exportStatus[1]</con:sourcePath><con:targetType>exportStatus</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/fileName[1]</con:sourcePath><con:targetType>fileName</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>fileSize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/fileSize[1]</con:sourcePath><con:targetType>fileSize</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileVersion</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/fileVersion[1]</con:sourcePath><con:targetType>fileVersion</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/id[1]</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>immutable</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/immutable[1]</con:sourcePath><con:targetType>immutable</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>indexed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/indexed[1]</con:sourcePath><con:targetType>indexed</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>language</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/language[1]</con:sourcePath><con:targetType>language</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lastModified</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/lastModified[1]</con:sourcePath><con:targetType>lastModified</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>nature</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/nature[1]</con:sourcePath><con:targetType>nature</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pages</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/pages[1]</con:sourcePath><con:targetType>pages</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passwordProtected</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/passwordProtected[1]</con:sourcePath><con:targetType>passwordProtected</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>published</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/published[1]</con:sourcePath><con:targetType>published</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisher</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/publisher[1]</con:sourcePath><con:targetType>publisher</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisherId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/publisherId[1]</con:sourcePath><con:targetType>publisherId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>rating</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/rating[1]</con:sourcePath><con:targetType>rating</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>signed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/signed[1]</con:sourcePath><con:targetType>signed</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>stamped</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/stamped[1]</con:sourcePath><con:targetType>stamped</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>startPublishing</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/startPublishing[1]</con:sourcePath><con:targetType>startPublishing</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>status</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/status[1]</con:sourcePath><con:targetType>status</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>title</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/title[1]</con:sourcePath><con:targetType>title</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/type[1]</con:sourcePath><con:targetType>type</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>version</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/version[1]</con:sourcePath><con:targetType>version</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>folderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath/><con:targetType>folderId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="b508982e-dd05-4ffc-b9e4-f2dd6b72c95e" name="getDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>getDocument</con:operation><con:request name="getDocument" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6efc1e9b-1127-4db7-ba97-aca600cff543"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getDocument>
         <!--Optional:-->
         
         <sid>${Login-Properties#sid}</sid><docId>${CreateDocument-Properties#id}</docId>
      </ws:getDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0394bfe2-64a2-4524-93da-40244412f3ab" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="d628340b-7008-440d-9faa-fb9d74fa4c67" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="ef0a31ab-39da-4ab9-bc19-ab41b5d92264" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="597f19c8-29f0-4b14-8447-a5a5bfdc3154" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getDocument"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="UpdateDocument-Properties" id="ab62c24d-dc94-48bc-983a-2b45a12958f9"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>creator</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>creation</con:name><con:value>2018-08-27 17:30:30 +0200</con:value></con:property><con:property><con:name>creatorId</con:name><con:value>1</con:value></con:property><con:property><con:name>customId</con:name><con:value>e7c350bc-cb35-4ed5-8bde-467f95b60709</con:value></con:property><con:property><con:name>date</con:name><con:value>2018-08-27 17:30:30 +0200</con:value></con:property><con:property><con:name>exportStatus</con:name><con:value>0</con:value></con:property><con:property><con:name>fileName</con:name><con:value>Test.txt</con:value></con:property><con:property><con:name>fileSize</con:name><con:value>12</con:value></con:property><con:property><con:name>fileVersion</con:name><con:value>1.0</con:value></con:property><con:property><con:name>folderId</con:name><con:value>3375265</con:value></con:property><con:property><con:name>id</con:name><con:value>3408030</con:value></con:property><con:property><con:name>immutable</con:name><con:value>0</con:value></con:property><con:property><con:name>indexed</con:name><con:value>0</con:value></con:property><con:property><con:name>language</con:name><con:value>fr</con:value></con:property><con:property><con:name>lastModified</con:name><con:value>2018-08-28 16:52:09 +0200</con:value></con:property><con:property><con:name>nature</con:name><con:value>0</con:value></con:property><con:property><con:name>pages</con:name><con:value>0</con:value></con:property><con:property><con:name>passwordProtected</con:name><con:value>0</con:value></con:property><con:property><con:name>published</con:name><con:value>1</con:value></con:property><con:property><con:name>publisher</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>publisherId</con:name><con:value>1</con:value></con:property><con:property><con:name>rating</con:name><con:value>0</con:value></con:property><con:property><con:name>signed</con:name><con:value>0</con:value></con:property><con:property><con:name>stamped</con:name><con:value>0</con:value></con:property><con:property><con:name>startPublishing</con:name><con:value>2018-08-26 00:00:00 +0200</con:value></con:property><con:property><con:name>status</con:name><con:value>0</con:value></con:property><con:property><con:name>title</con:name><con:value>Test</con:value></con:property><con:property><con:name>type</con:name><con:value>txt</con:value></con:property><con:property><con:name>version</con:name><con:value>1.0</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="ed6f5a1f-d65f-44a6-957c-944af91d81b0" name="getDocumentByCustomId-Request1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>getDocumentByCustomId</con:operation><con:request name="getDocumentByCustomId-Request1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3740dbf3-fff3-49c5-a025-840ba2c45bb0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getDocumentByCustomId>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid><customId>${UpdateDocument-Properties#customId}</customId>
         <!--Optional:-->
         
      </ws:getDocumentByCustomId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d20b60f8-1729-4e09-8af6-d4205d4ce0ce" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="82d5153a-0dc8-4c13-9057-4a1d693793dd" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="5a0ebc8f-b79d-42dc-9a34-2e19a93fb3c3" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="a95b4170-d747-462a-8ca2-fa07338afa11" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getDocumentByCustomId"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-GetDocumentByCustomId" id="e9b04314-0db9-4b3f-80b3-7d0a470b54be"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creation</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/creation[1]</con:sourcePath><con:targetType>creation</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creator</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/creator[1]</con:sourcePath><con:targetType>creator</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>creatorId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/creatorId[1]</con:sourcePath><con:targetType>creatorId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>customId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/customId[1]</con:sourcePath><con:targetType>customId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>date</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/date[1]</con:sourcePath><con:targetType>date</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>exportStatus</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/exportStatus[1]</con:sourcePath><con:targetType>exportStatus</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/fileName[1]</con:sourcePath><con:targetType>fileName</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileSize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/fileSize[1]</con:sourcePath><con:targetType>fileSize</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileVersion</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/fileVersion[1]</con:sourcePath><con:targetType>fileVersion</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>folderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/folderId[1]</con:sourcePath><con:targetType>folderId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/id[1]</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>immutable</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/immutable[1]</con:sourcePath><con:targetType>immutable</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>indexed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/indexed[1]</con:sourcePath><con:targetType>indexed</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>language</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/language[1]</con:sourcePath><con:targetType>language</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>lastModified</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/lastModified[1]</con:sourcePath><con:targetType>lastModified</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>nature</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/nature[1]</con:sourcePath><con:targetType>nature</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pages</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/pages[1]</con:sourcePath><con:targetType>pages</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>passwordProtected</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/passwordProtected[1]</con:sourcePath><con:targetType>passwordProtected</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>published</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/published[1]</con:sourcePath><con:targetType>published</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisher</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/publisher[1]</con:sourcePath><con:targetType>publisher</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisherId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/publisherId[1]</con:sourcePath><con:targetType>publisherId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>rating</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/rating[1]</con:sourcePath><con:targetType>rating</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>signed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/signed[1]</con:sourcePath><con:targetType>signed</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>stamped</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/stamped[1]</con:sourcePath><con:targetType>stamped</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>startPublishing</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/startPublishing[1]</con:sourcePath><con:targetType>startPublishing</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>status</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/status[1]</con:sourcePath><con:targetType>status</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>title</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/title[1]</con:sourcePath><con:targetType>title</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/type[1]</con:sourcePath><con:targetType>type</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" ignoreEmpty="false" transferToAll="false" transferChildNodes="false"><con:name>version</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/version[1]</con:sourcePath><con:targetType>version</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="3b9ba330-dc13-4331-b305-45cd4b9f37d4" name="update"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>update</con:operation><con:request name="update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="28b045c6-55d1-403c-ba97-cb36e9237d64"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:update>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <!--Optional:-->
<document>
            <creation>${UpdateDocument-Properties#creation}</creation>
            <creator>${UpdateDocument-Properties#creator}</creator>
            <creatorId>${UpdateDocument-Properties#creatorId}</creatorId>
            <customId>${UpdateDocument-Properties#customId}</customId>
            <date>${UpdateDocument-Properties#date}</date>
            <exportStatus>${UpdateDocument-Properties#exportStatus}</exportStatus>
            <fileName>TestUpdate.txt</fileName>
            <fileSize>${UpdateDocument-Properties#fileSize}</fileSize>
            <fileVersion>${UpdateDocument-Properties#fileVersion}</fileVersion>
            <folderId>${UpdateDocument-Properties#folderId}</folderId>
            <id>${UpdateDocument-Properties#id}</id>
            <immutable>${UpdateDocument-Properties#immutable}</immutable>
            <indexed>${UpdateDocument-Properties#indexed}</indexed>
            <language>${UpdateDocument-Properties#language}</language>
            <lastModified>${UpdateDocument-Properties#lastModified}</lastModified>
            <nature>${UpdateDocument-Properties#nature}</nature>
            <pages>${UpdateDocument-Properties#pages}</pages>
            <passwordProtected>${UpdateDocument-Properties#passwordProtected}</passwordProtected>
            <published>${UpdateDocument-Properties#published}</published>
            <publisher>${UpdateDocument-Properties#publisher}</publisher>
            <publisherId>${UpdateDocument-Properties#publisherId}</publisherId>
            <rating>${UpdateDocument-Properties#rating}</rating>
            <signed>${UpdateDocument-Properties#signed}</signed>
            <stamped>${UpdateDocument-Properties#stamped}</stamped>
            <startPublishing>${UpdateDocument-Properties#startPublishing}</startPublishing>
            <status>${UpdateDocument-Properties#status}</status>
            <title>${UpdateDocument-Properties#title}</title>
            <type>${UpdateDocument-Properties#type}</type>
            <version>${UpdateDocument-Properties#version}</version>
         </document>
         
      </ws:update>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="118b231c-6322-4b89-a57a-400731c640f5" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3192035e-9927-42cf-ae0c-593134495a27" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="0b8adb06-8169-422c-92e0-2b96dd36ce9f" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="9b6d2442-dec1-451c-a879-4475b5593561" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/update"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="4e4c0f3f-eac6-4a9b-acfe-9d5c1059a722" name="getDocumentByCustomId-Request2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>getDocumentByCustomId</con:operation><con:request name="getDocumentByCustomId-Request2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3740dbf3-fff3-49c5-a025-840ba2c45bb0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getDocumentByCustomId>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid><customId>${UpdateDocument-Properties#customId}</customId>
         <!--Optional:-->
         
      </ws:getDocumentByCustomId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d20b60f8-1729-4e09-8af6-d4205d4ce0ce" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="82d5153a-0dc8-4c13-9057-4a1d693793dd" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="5a0ebc8f-b79d-42dc-9a34-2e19a93fb3c3" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="a95b4170-d747-462a-8ca2-fa07338afa11" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getDocumentByCustomId"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="Properties_bookmark_document" id="a0d8fe57-bd66-4f1e-beb1-50d5f3f39963"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>sid</con:name><con:value>36e00e26-305f-4aab-970e-14e664390d09</con:value></con:property><con:property><con:name>docId</con:name><con:value>163905537</con:value></con:property><con:property><con:name>fileType</con:name><con:value>txt</con:value></con:property><con:property><con:name>id</con:name><con:value>3473440</con:value></con:property><con:property><con:name>position</con:name><con:value>0</con:value></con:property><con:property><con:name>targetId</con:name><con:value>3408030</con:value></con:property><con:property><con:name>title</con:name><con:value>Test</con:value></con:property><con:property><con:name>type</con:name><con:value>0</con:value></con:property><con:property><con:name>userId</con:name><con:value>1</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="25638f56-d344-4f7c-bd64-4fd5076c5fb4" name="bookmarkDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapBookmarkServiceServiceSoapBinding</con:interface><con:operation>bookmarkDocument</con:operation><con:request name="bookmarkDocument" id="38dbae87-6507-4929-9e3c-9274e6aa7c73"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Bookmark</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:bookmarkDocument>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <docId>${UpdateDocument-Properties#id}</docId>
      </ws:bookmarkDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="63d22cbd-6d6b-4a27-8bad-2f93d2045d18" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="85a8c6b3-1e03-4619-9a0d-7edd62f7e32d" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="a0afbabb-876a-4268-a9c8-bfdfceb7fc9b" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="328c5d8a-eaf6-4d77-b982-fef5316ffca7" name="Contains"><con:configuration><token>${#TestCase#id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Bookmark/bookmarkDocument" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer_Bookmark_Document" id="dd1efbe9-cc60-4f76-893f-75f821138749"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>fileType</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/fileType[1]</con:sourcePath><con:targetType>fileType</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/id[1]</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>position</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/position[1]</con:sourcePath><con:targetType>position</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>targetId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/targetId[1]</con:sourcePath><con:targetType>targetId</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>title</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/title[1]</con:sourcePath><con:targetType>title</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/type[1]</con:sourcePath><con:targetType>type</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>userId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/userId[1]</con:sourcePath><con:targetType>userId</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>a0d8fe57-bd66-4f1e-beb1-50d5f3f39963</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>25638f56-d344-4f7c-bd64-4fd5076c5fb4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dd1efbe9-cc60-4f76-893f-75f821138749</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="5d692838-5aa7-4ec0-a49c-44804e17cb0b" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TestCase_unbookmarkDocument" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Login-Properties" id="b6cc2137-48e9-47b1-80da-8ba023311ed2"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>admin</con:value></con:property><con:property><con:name>password</con:name><con:value>admin</con:value></con:property><con:property><con:name>sid</con:name><con:value>86975ec9-94ca-4d95-a86a-fb11ca2c626f</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="4d30afaa-63c5-4c42-8d0a-b95ec5945370" name="login"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapAuthServiceServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="login" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="35ffab89-55e8-49a6-ae4e-2adacdfb6130"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Auth</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:login>
         <!--Optional:-->
         
         <!--Optional:-->
         <username>${Login-Properties#username}</username><password>${Login-Properties#password}</password>
      </ws:login>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e9007555-176d-4cf0-b186-f622490dff70" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="dd2dd279-9739-400f-a820-87a44d8ac7ab" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="d3d39e74-c86b-496d-85c1-91203ecb8c96" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="200992c0-d4ad-4243-8953-ef81651bea4b" name="Contains"><con:configuration><token>${#TestCase#sid}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Auth/login"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-Login" id="eda52d1e-b203-4808-b929-0730211ded54"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>return</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>login</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:loginResponse[1]/return[1]</con:sourcePath><con:targetType>sid</con:targetType><con:targetStep>Login-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="CreateFolder-Properties" id="d5c5a670-0c06-4dd7-b8ae-67f0fb5b2b61"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>name</con:name><con:value>Test</con:value></con:property><con:property><con:name>parentId</con:name><con:value>4</con:value></con:property><con:property><con:name>folderId</con:name><con:value>3375266</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="03028974-bd94-4aae-af9b-cfd0afb77a5c" name="createFolder"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapFolderServiceServiceSoapBinding</con:interface><con:operation>createFolder</con:operation><con:request name="createFolder" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="24cf5f7c-05e0-4e70-94a2-91612b8dd58e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:createFolder>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <parentId>${CreateFolder-Properties#parentId}</parentId><name>${CreateFolder-Properties#name}</name>
         <!--Optional:-->
         
      </ws:createFolder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="bf3a3d10-dcdc-43f3-97a9-0361092ecb36" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="605aacae-0f88-408e-af4c-6f57dca4e52f" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="b09c2af7-d3e6-4ce0-9aa5-59bdadec18fb" name="Contains"><con:configuration><token>${#TestCase#folderId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/createFolder"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-CreateFolder" id="092ce56b-d770-41cb-add1-c5aad82da25d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>folderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createFolder</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createFolderResponse[1]/folderId[1]</con:sourcePath><con:targetType>folderId</con:targetType><con:targetStep>CreateFolder-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="CreateDocument-Properties" id="c6499f95-f4fe-4a28-95d6-9ad096878563"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>creator</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>creatorId</con:name><con:value>1</con:value></con:property><con:property><con:name>customId</con:name><con:value>86975ec9-94ca-4d95-a86a-fb11ca2c626f</con:value></con:property><con:property><con:name>date</con:name><con:value>2018-08-27 17:30:30 +0200</con:value></con:property><con:property><con:name>exportStatus</con:name><con:value>0</con:value></con:property><con:property><con:name>fileName</con:name><con:value>Test.txt</con:value></con:property><con:property><con:name>fileSize</con:name><con:value>12</con:value></con:property><con:property><con:name>fileVersion</con:name><con:value>1.0</con:value></con:property><con:property><con:name>folderId</con:name><con:value><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   <soap:Body>
      <ns2:createResponse xmlns:ns2="http://ws.logicaldoc.com">
         <document>
            <creation>2018-08-27 17:30:30 +0200</creation>
            <creator>Admin Admin</creator>
            <creatorId>1</creatorId>
            <customId>86975ec9-94ca-4d95-a86a-fb11ca2c626f</customId>
            <date>2018-08-27 17:30:30 +0200</date>
            <exportStatus>0</exportStatus>
            <fileName>Test.txt</fileName>
            <fileSize>12</fileSize>
            <fileVersion>1.0</fileVersion>
            <folderId>3375266</folderId>
            <id>3408031</id>
            <immutable>0</immutable>
            <indexed>0</indexed>
            <language>fr</language>
            <lastModified>2018-08-28 16:52:10 +0200</lastModified>
            <nature>0</nature>
            <pages>0</pages>
            <passwordProtected>0</passwordProtected>
            <published>1</published>
            <publisher>Admin Admin</publisher>
            <publisherId>1</publisherId>
            <rating>0</rating>
            <signed>0</signed>
            <stamped>0</stamped>
            <startPublishing>2018-08-26 00:00:00 +0200</startPublishing>
            <status>0</status>
            <title>Test</title>
            <type>txt</type>
            <version>1.0</version>
         </document>
      </ns2:createResponse>
   </soap:Body>
</soap:Envelope>]]></con:value></con:property><con:property><con:name>id</con:name><con:value>3408031</con:value></con:property><con:property><con:name>immutable</con:name><con:value>0</con:value></con:property><con:property><con:name>indexed</con:name><con:value>0</con:value></con:property><con:property><con:name>language</con:name><con:value>fr</con:value></con:property><con:property><con:name>lastModified</con:name><con:value>2018-08-28 16:52:10 +0200</con:value></con:property><con:property><con:name>nature</con:name><con:value>0</con:value></con:property><con:property><con:name>pages</con:name><con:value>0</con:value></con:property><con:property><con:name>passwordProtected</con:name><con:value>0</con:value></con:property><con:property><con:name>published</con:name><con:value>1</con:value></con:property><con:property><con:name>publisher</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>publisherId</con:name><con:value>1</con:value></con:property><con:property><con:name>rating</con:name><con:value>0</con:value></con:property><con:property><con:name>signed</con:name><con:value>0</con:value></con:property><con:property><con:name>stamped</con:name><con:value>0</con:value></con:property><con:property><con:name>startPublishing</con:name><con:value>2018-08-26 00:00:00 +0200</con:value></con:property><con:property><con:name>status</con:name><con:value>0</con:value></con:property><con:property><con:name>title</con:name><con:value>Test</con:value></con:property><con:property><con:name>type</con:name><con:value>txt</con:value></con:property><con:property><con:name>version</con:name><con:value>1.0</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="85fd195a-24b0-4e99-9a96-d86778eefb23" name="createDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>create</con:operation><con:request name="createDocument" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="30765109-a296-4428-9e23-f8f3be296eb0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:create>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <!--Optional:-->
         <document>
            <!--Zero or more repetitions:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            <creator>${CreateDocument-Properties#creator}</creator>
            <creatorId>${CreateDocument-Properties#creatorId}</creatorId>
            <!--Optional:-->
            <customId>${Login-Properties#sid}</customId>
            <!--Optional:-->
            <date>${CreateDocument-Properties#date}</date>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <exportStatus>${CreateDocument-Properties#exportStatus}</exportStatus>
            <!--Optional:-->
            <fileName>${CreateDocument-Properties#fileName}</fileName>
            <fileSize>${CreateDocument-Properties#fileSize}</fileSize>
            <!--Optional:-->
            <fileVersion>${CreateDocument-Properties#fileVersion}</fileVersion>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <folderId>${CreateFolder-Properties#folderId}</folderId><id>${CreateDocument-Properties#id}</id>
            <immutable>${CreateDocument-Properties#immutable}</immutable>
            <indexed>${CreateDocument-Properties#indexed}</indexed>
            <!--Optional:-->
            <language>${CreateDocument-Properties#language}</language>
            <!--Optional:-->
            <lastModified>${CreateDocument-Properties#lastModified}</lastModified>
            <!--Optional:-->
            
            <nature>${CreateDocument-Properties#nature}</nature>
            <pages>${CreateDocument-Properties#pages}</pages>
            <!--Optional:-->
            <passwordProtected>${CreateDocument-Properties#passwordProtected}</passwordProtected>
            <!--Optional:-->
            
            <published>${CreateDocument-Properties#published}</published>
            <!--Optional:-->
            <publisher>${CreateDocument-Properties#publisher}</publisher>
            <publisherId>${CreateDocument-Properties#publisherId}</publisherId>
            <!--Optional:-->
            <rating>${CreateDocument-Properties#rating}</rating>
            <!--Optional:-->
            
            <signed>${CreateDocument-Properties#signed}</signed>
            <stamped>${CreateDocument-Properties#stamped}</stamped>
            <!--Optional:-->
            <startPublishing>${CreateDocument-Properties#startPublishing}</startPublishing>
            <status>${CreateDocument-Properties#status}</status>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Zero or more repetitions:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            <title>${CreateDocument-Properties#title}</title>
            <!--Optional:-->
            <type>${CreateDocument-Properties#type}</type>
            <!--Optional:-->
            <version>${CreateDocument-Properties#version}</version>
            <!--Optional:-->
            
         </document><content>cid:1227959867564</content>
         <!--Optional:-->
         
      </ws:create>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f7f14f8d-344e-4e6e-b6ae-fa02b3c29b45" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="5480d070-4532-472c-8ac9-db041896ccd0" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="9167b28f-56e4-4479-b202-354836309cb3" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="768ffe89-1455-4ece-be5e-a9f3523c5d1b" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/create"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-CreateDocument" id="f81b1d35-80a4-4efd-a782-c086d8c4507f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creator</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/creator[1]</con:sourcePath><con:targetType>creator</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creatorId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/creatorId[1]</con:sourcePath><con:targetType>creatorId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>customId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/customId[1]</con:sourcePath><con:targetType>customId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>date</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/date[1]</con:sourcePath><con:targetType>date</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>exportStatus</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/exportStatus[1]</con:sourcePath><con:targetType>exportStatus</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/fileName[1]</con:sourcePath><con:targetType>fileName</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>fileSize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/fileSize[1]</con:sourcePath><con:targetType>fileSize</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileVersion</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/fileVersion[1]</con:sourcePath><con:targetType>fileVersion</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/id[1]</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>immutable</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/immutable[1]</con:sourcePath><con:targetType>immutable</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>indexed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/indexed[1]</con:sourcePath><con:targetType>indexed</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>language</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/language[1]</con:sourcePath><con:targetType>language</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lastModified</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/lastModified[1]</con:sourcePath><con:targetType>lastModified</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>nature</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/nature[1]</con:sourcePath><con:targetType>nature</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pages</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/pages[1]</con:sourcePath><con:targetType>pages</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passwordProtected</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/passwordProtected[1]</con:sourcePath><con:targetType>passwordProtected</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>published</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/published[1]</con:sourcePath><con:targetType>published</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisher</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/publisher[1]</con:sourcePath><con:targetType>publisher</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisherId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/publisherId[1]</con:sourcePath><con:targetType>publisherId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>rating</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/rating[1]</con:sourcePath><con:targetType>rating</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>signed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/signed[1]</con:sourcePath><con:targetType>signed</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>stamped</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/stamped[1]</con:sourcePath><con:targetType>stamped</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>startPublishing</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/startPublishing[1]</con:sourcePath><con:targetType>startPublishing</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>status</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/status[1]</con:sourcePath><con:targetType>status</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>title</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/title[1]</con:sourcePath><con:targetType>title</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/type[1]</con:sourcePath><con:targetType>type</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>version</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/version[1]</con:sourcePath><con:targetType>version</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>folderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath/><con:targetType>folderId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="d8b0bd89-4f70-410b-a129-0fd7bb3954c6" name="getDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>getDocument</con:operation><con:request name="getDocument" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6efc1e9b-1127-4db7-ba97-aca600cff543"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getDocument>
         <!--Optional:-->
         
         <sid>${Login-Properties#sid}</sid><docId>${CreateDocument-Properties#id}</docId>
      </ws:getDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0394bfe2-64a2-4524-93da-40244412f3ab" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="d628340b-7008-440d-9faa-fb9d74fa4c67" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="ef0a31ab-39da-4ab9-bc19-ab41b5d92264" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="597f19c8-29f0-4b14-8447-a5a5bfdc3154" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getDocument"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="UpdateDocument-Properties" id="bcb0f202-7850-43c5-8da0-50314715a1f7"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>creator</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>creation</con:name><con:value>2018-08-27 17:30:30 +0200</con:value></con:property><con:property><con:name>creatorId</con:name><con:value>1</con:value></con:property><con:property><con:name>customId</con:name><con:value>86975ec9-94ca-4d95-a86a-fb11ca2c626f</con:value></con:property><con:property><con:name>date</con:name><con:value>2018-08-27 17:30:30 +0200</con:value></con:property><con:property><con:name>exportStatus</con:name><con:value>0</con:value></con:property><con:property><con:name>fileName</con:name><con:value>Test.txt</con:value></con:property><con:property><con:name>fileSize</con:name><con:value>12</con:value></con:property><con:property><con:name>fileVersion</con:name><con:value>1.0</con:value></con:property><con:property><con:name>folderId</con:name><con:value>3375266</con:value></con:property><con:property><con:name>id</con:name><con:value>3408031</con:value></con:property><con:property><con:name>immutable</con:name><con:value>0</con:value></con:property><con:property><con:name>indexed</con:name><con:value>0</con:value></con:property><con:property><con:name>language</con:name><con:value>fr</con:value></con:property><con:property><con:name>lastModified</con:name><con:value>2018-08-28 16:52:10 +0200</con:value></con:property><con:property><con:name>nature</con:name><con:value>0</con:value></con:property><con:property><con:name>pages</con:name><con:value>0</con:value></con:property><con:property><con:name>passwordProtected</con:name><con:value>0</con:value></con:property><con:property><con:name>published</con:name><con:value>1</con:value></con:property><con:property><con:name>publisher</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>publisherId</con:name><con:value>1</con:value></con:property><con:property><con:name>rating</con:name><con:value>0</con:value></con:property><con:property><con:name>signed</con:name><con:value>0</con:value></con:property><con:property><con:name>stamped</con:name><con:value>0</con:value></con:property><con:property><con:name>startPublishing</con:name><con:value>2018-08-26 00:00:00 +0200</con:value></con:property><con:property><con:name>status</con:name><con:value>0</con:value></con:property><con:property><con:name>title</con:name><con:value>Test</con:value></con:property><con:property><con:name>type</con:name><con:value>txt</con:value></con:property><con:property><con:name>version</con:name><con:value>1.0</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="efb1dc55-c638-446d-aa9f-6930770359a0" name="getDocumentByCustomId-Request1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>getDocumentByCustomId</con:operation><con:request name="getDocumentByCustomId-Request1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3740dbf3-fff3-49c5-a025-840ba2c45bb0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getDocumentByCustomId>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid><customId>${UpdateDocument-Properties#customId}</customId>
         <!--Optional:-->
         
      </ws:getDocumentByCustomId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d20b60f8-1729-4e09-8af6-d4205d4ce0ce" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="82d5153a-0dc8-4c13-9057-4a1d693793dd" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="5a0ebc8f-b79d-42dc-9a34-2e19a93fb3c3" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="a95b4170-d747-462a-8ca2-fa07338afa11" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getDocumentByCustomId"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-GetDocumentByCustomId" id="2c743a5c-22e9-4aa9-9b89-d17184981e3a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creation</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/creation[1]</con:sourcePath><con:targetType>creation</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creator</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/creator[1]</con:sourcePath><con:targetType>creator</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>creatorId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/creatorId[1]</con:sourcePath><con:targetType>creatorId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>customId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/customId[1]</con:sourcePath><con:targetType>customId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>date</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/date[1]</con:sourcePath><con:targetType>date</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>exportStatus</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/exportStatus[1]</con:sourcePath><con:targetType>exportStatus</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/fileName[1]</con:sourcePath><con:targetType>fileName</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileSize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/fileSize[1]</con:sourcePath><con:targetType>fileSize</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileVersion</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/fileVersion[1]</con:sourcePath><con:targetType>fileVersion</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>folderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/folderId[1]</con:sourcePath><con:targetType>folderId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/id[1]</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>immutable</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/immutable[1]</con:sourcePath><con:targetType>immutable</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>indexed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/indexed[1]</con:sourcePath><con:targetType>indexed</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>language</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/language[1]</con:sourcePath><con:targetType>language</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>lastModified</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/lastModified[1]</con:sourcePath><con:targetType>lastModified</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>nature</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/nature[1]</con:sourcePath><con:targetType>nature</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pages</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/pages[1]</con:sourcePath><con:targetType>pages</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>passwordProtected</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/passwordProtected[1]</con:sourcePath><con:targetType>passwordProtected</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>published</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/published[1]</con:sourcePath><con:targetType>published</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisher</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/publisher[1]</con:sourcePath><con:targetType>publisher</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisherId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/publisherId[1]</con:sourcePath><con:targetType>publisherId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>rating</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/rating[1]</con:sourcePath><con:targetType>rating</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>signed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/signed[1]</con:sourcePath><con:targetType>signed</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>stamped</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/stamped[1]</con:sourcePath><con:targetType>stamped</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>startPublishing</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/startPublishing[1]</con:sourcePath><con:targetType>startPublishing</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>status</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/status[1]</con:sourcePath><con:targetType>status</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>title</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/title[1]</con:sourcePath><con:targetType>title</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/type[1]</con:sourcePath><con:targetType>type</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" ignoreEmpty="false" transferToAll="false" transferChildNodes="false"><con:name>version</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/version[1]</con:sourcePath><con:targetType>version</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="1e57c8de-f44e-4673-8a98-3b7f28d9cf5c" name="update"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>update</con:operation><con:request name="update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="28b045c6-55d1-403c-ba97-cb36e9237d64"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:update>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <!--Optional:-->
<document>
            <creation>${UpdateDocument-Properties#creation}</creation>
            <creator>${UpdateDocument-Properties#creator}</creator>
            <creatorId>${UpdateDocument-Properties#creatorId}</creatorId>
            <customId>${UpdateDocument-Properties#customId}</customId>
            <date>${UpdateDocument-Properties#date}</date>
            <exportStatus>${UpdateDocument-Properties#exportStatus}</exportStatus>
            <fileName>TestUpdate.txt</fileName>
            <fileSize>${UpdateDocument-Properties#fileSize}</fileSize>
            <fileVersion>${UpdateDocument-Properties#fileVersion}</fileVersion>
            <folderId>${UpdateDocument-Properties#folderId}</folderId>
            <id>${UpdateDocument-Properties#id}</id>
            <immutable>${UpdateDocument-Properties#immutable}</immutable>
            <indexed>${UpdateDocument-Properties#indexed}</indexed>
            <language>${UpdateDocument-Properties#language}</language>
            <lastModified>${UpdateDocument-Properties#lastModified}</lastModified>
            <nature>${UpdateDocument-Properties#nature}</nature>
            <pages>${UpdateDocument-Properties#pages}</pages>
            <passwordProtected>${UpdateDocument-Properties#passwordProtected}</passwordProtected>
            <published>${UpdateDocument-Properties#published}</published>
            <publisher>${UpdateDocument-Properties#publisher}</publisher>
            <publisherId>${UpdateDocument-Properties#publisherId}</publisherId>
            <rating>${UpdateDocument-Properties#rating}</rating>
            <signed>${UpdateDocument-Properties#signed}</signed>
            <stamped>${UpdateDocument-Properties#stamped}</stamped>
            <startPublishing>${UpdateDocument-Properties#startPublishing}</startPublishing>
            <status>${UpdateDocument-Properties#status}</status>
            <title>${UpdateDocument-Properties#title}</title>
            <type>${UpdateDocument-Properties#type}</type>
            <version>${UpdateDocument-Properties#version}</version>
         </document>
         
      </ws:update>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="118b231c-6322-4b89-a57a-400731c640f5" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3192035e-9927-42cf-ae0c-593134495a27" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="0b8adb06-8169-422c-92e0-2b96dd36ce9f" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="9b6d2442-dec1-451c-a879-4475b5593561" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/update"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="c413a55f-c0e7-45fa-b189-beb87b12d610" name="getDocumentByCustomId-Request2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>getDocumentByCustomId</con:operation><con:request name="getDocumentByCustomId-Request2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3740dbf3-fff3-49c5-a025-840ba2c45bb0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getDocumentByCustomId>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid><customId>${UpdateDocument-Properties#customId}</customId>
         <!--Optional:-->
         
      </ws:getDocumentByCustomId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d20b60f8-1729-4e09-8af6-d4205d4ce0ce" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="82d5153a-0dc8-4c13-9057-4a1d693793dd" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="5a0ebc8f-b79d-42dc-9a34-2e19a93fb3c3" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="a95b4170-d747-462a-8ca2-fa07338afa11" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getDocumentByCustomId"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="Properties_bookmark_document" id="57da0474-a6aa-4356-bb92-d422241d04d6"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>sid</con:name><con:value>36e00e26-305f-4aab-970e-14e664390d09</con:value></con:property><con:property><con:name>docId</con:name><con:value>163905537</con:value></con:property><con:property><con:name>fileType</con:name><con:value>txt</con:value></con:property><con:property><con:name>id</con:name><con:value>3473441</con:value></con:property><con:property><con:name>position</con:name><con:value>0</con:value></con:property><con:property><con:name>targetId</con:name><con:value>3408031</con:value></con:property><con:property><con:name>title</con:name><con:value>Test</con:value></con:property><con:property><con:name>type</con:name><con:value>0</con:value></con:property><con:property><con:name>userId</con:name><con:value>1</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="7209a442-07b1-4054-baed-63487caceb4e" name="bookmarkDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapBookmarkServiceServiceSoapBinding</con:interface><con:operation>bookmarkDocument</con:operation><con:request name="bookmarkDocument" id="38dbae87-6507-4929-9e3c-9274e6aa7c73"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Bookmark</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:bookmarkDocument>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <docId>${UpdateDocument-Properties#id}</docId>
      </ws:bookmarkDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="63d22cbd-6d6b-4a27-8bad-2f93d2045d18" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="85a8c6b3-1e03-4619-9a0d-7edd62f7e32d" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="a0afbabb-876a-4268-a9c8-bfdfceb7fc9b" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="328c5d8a-eaf6-4d77-b982-fef5316ffca7" name="Contains"><con:configuration><token>${#TestCase#id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Bookmark/bookmarkDocument" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer_Bookmark_Document" id="836a39fb-61b3-4b16-be2c-c56c3dd0c034"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>fileType</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/fileType[1]</con:sourcePath><con:targetType>fileType</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/id[1]</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>position</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/position[1]</con:sourcePath><con:targetType>position</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>targetId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/targetId[1]</con:sourcePath><con:targetType>targetId</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>title</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/title[1]</con:sourcePath><con:targetType>title</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/type[1]</con:sourcePath><con:targetType>type</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>userId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/userId[1]</con:sourcePath><con:targetType>userId</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="55304bdf-f883-4da7-86e8-316a50d0c149" name="unbookmarkDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapBookmarkServiceServiceSoapBinding</con:interface><con:operation>unbookmarkDocument</con:operation><con:request name="unbookmarkDocument" id="2043c332-d701-4191-8c07-8b8321cf8973"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Bookmark</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:unbookmarkDocument>
         <!--Optional:-->
         
         <sid>${Login-Properties#sid}</sid><docId>${UpdateDocument-Properties#id}</docId>
      </ws:unbookmarkDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a4c6aaaf-1262-4cf8-b121-64be86666da2" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="7ebea717-b26c-44a0-bf1a-4bf2a44bf9e5" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="ae0f9d6a-fdd7-4ddb-861e-b2aa80777e5c" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Bookmark/unbookmarkDocument" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="2216702d-0342-4bee-abd3-d800f6498181" name="getBookmarks"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapBookmarkServiceServiceSoapBinding</con:interface><con:operation>getBookmarks</con:operation><con:request name="getBookmarks" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e44431aa-5cf4-4337-bde7-3484e448e51e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Bookmark</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getBookmarks>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
      </ws:getBookmarks>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="74dc884f-3ff7-4857-8f1f-dd701335f9cc" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="26e4a1c1-c6d5-4aef-a3ba-63f6fedaa0b2" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="deeafd87-ae2e-47ce-acfb-27ff02d8cd85" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="c775874d-ebf3-434a-98c1-10bbff4acac4" name="Not Contains"><con:configuration><token>${#TestCase#targetId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Bookmark/getBookmarks"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>55304bdf-f883-4da7-86e8-316a50d0c149</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="dd54129d-93a7-4ff3-a311-d0eb2c3d239f" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TestCase_FindDocumentByDate" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Login-Properties" id="7dd7e694-152b-4f00-aff8-2b3e127bbc0e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>admin</con:value></con:property><con:property><con:name>password</con:name><con:value>admin</con:value></con:property><con:property><con:name>sid</con:name><con:value>44e31bd8-89db-4a0f-b1a1-aea987142b64</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="9a907884-7d53-4748-9459-153e961979ae" name="login"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapAuthServiceServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="login" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="35ffab89-55e8-49a6-ae4e-2adacdfb6130"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Auth</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:login>
         <!--Optional:-->
         
         <!--Optional:-->
         <username>${Login-Properties#username}</username><password>${Login-Properties#password}</password>
      </ws:login>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e9007555-176d-4cf0-b186-f622490dff70" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="dd2dd279-9739-400f-a820-87a44d8ac7ab" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="d3d39e74-c86b-496d-85c1-91203ecb8c96" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="200992c0-d4ad-4243-8953-ef81651bea4b" name="Contains"><con:configuration><token>${#TestCase#sid}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Auth/login"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-Login" id="220311ba-3980-434d-be33-5964233e9dad"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>return</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>login</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:loginResponse[1]/return[1]</con:sourcePath><con:targetType>sid</con:targetType><con:targetStep>Login-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="CreateFolder-Properties" id="089efbf8-3d62-46e7-b913-ada06e78c897"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>name</con:name><con:value>Test</con:value></con:property><con:property><con:name>parentId</con:name><con:value>4</con:value></con:property><con:property><con:name>folderId</con:name><con:value>3375267</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="2ef11f72-cf4c-4d50-92f4-52a26893cb78" name="createFolder"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapFolderServiceServiceSoapBinding</con:interface><con:operation>createFolder</con:operation><con:request name="createFolder" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="24cf5f7c-05e0-4e70-94a2-91612b8dd58e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:createFolder>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <parentId>${CreateFolder-Properties#parentId}</parentId><name>${CreateFolder-Properties#name}</name>
         <!--Optional:-->
         
      </ws:createFolder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="bf3a3d10-dcdc-43f3-97a9-0361092ecb36" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="605aacae-0f88-408e-af4c-6f57dca4e52f" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="b09c2af7-d3e6-4ce0-9aa5-59bdadec18fb" name="Contains"><con:configuration><token>${#TestCase#folderId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/createFolder"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-CreateFolder" id="14d5005b-2fe3-445c-86db-3971cf8b001e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>folderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createFolder</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createFolderResponse[1]/folderId[1]</con:sourcePath><con:targetType>folderId</con:targetType><con:targetStep>CreateFolder-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="CreateDocument-Properties" id="0d5c6be5-cee1-4d75-b9b5-1cd40946d3f5"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>creator</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>creatorId</con:name><con:value>1</con:value></con:property><con:property><con:name>customId</con:name><con:value>44e31bd8-89db-4a0f-b1a1-aea987142b64</con:value></con:property><con:property><con:name>date</con:name><con:value>2018-08-27 17:30:30 +0200</con:value></con:property><con:property><con:name>exportStatus</con:name><con:value>0</con:value></con:property><con:property><con:name>fileName</con:name><con:value>Test.txt</con:value></con:property><con:property><con:name>fileSize</con:name><con:value>12</con:value></con:property><con:property><con:name>fileVersion</con:name><con:value>1.0</con:value></con:property><con:property><con:name>folderId</con:name><con:value><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   <soap:Body>
      <ns2:createResponse xmlns:ns2="http://ws.logicaldoc.com">
         <document>
            <creation>2018-08-27 17:30:30 +0200</creation>
            <creator>Admin Admin</creator>
            <creatorId>1</creatorId>
            <customId>44e31bd8-89db-4a0f-b1a1-aea987142b64</customId>
            <date>2018-08-27 17:30:30 +0200</date>
            <exportStatus>0</exportStatus>
            <fileName>Test.txt</fileName>
            <fileSize>12</fileSize>
            <fileVersion>1.0</fileVersion>
            <folderId>3375267</folderId>
            <id>3408032</id>
            <immutable>0</immutable>
            <indexed>0</indexed>
            <language>fr</language>
            <lastModified>2018-08-28 16:52:10 +0200</lastModified>
            <nature>0</nature>
            <pages>0</pages>
            <passwordProtected>0</passwordProtected>
            <published>1</published>
            <publisher>Admin Admin</publisher>
            <publisherId>1</publisherId>
            <rating>0</rating>
            <signed>0</signed>
            <stamped>0</stamped>
            <startPublishing>2018-08-26 00:00:00 +0200</startPublishing>
            <status>0</status>
            <title>Test</title>
            <type>txt</type>
            <version>1.0</version>
         </document>
      </ns2:createResponse>
   </soap:Body>
</soap:Envelope>]]></con:value></con:property><con:property><con:name>id</con:name><con:value>3408032</con:value></con:property><con:property><con:name>immutable</con:name><con:value>0</con:value></con:property><con:property><con:name>indexed</con:name><con:value>0</con:value></con:property><con:property><con:name>language</con:name><con:value>fr</con:value></con:property><con:property><con:name>lastModified</con:name><con:value>2018-08-28 16:52:10 +0200</con:value></con:property><con:property><con:name>nature</con:name><con:value>0</con:value></con:property><con:property><con:name>pages</con:name><con:value>0</con:value></con:property><con:property><con:name>passwordProtected</con:name><con:value>0</con:value></con:property><con:property><con:name>published</con:name><con:value>1</con:value></con:property><con:property><con:name>publisher</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>publisherId</con:name><con:value>1</con:value></con:property><con:property><con:name>rating</con:name><con:value>0</con:value></con:property><con:property><con:name>signed</con:name><con:value>0</con:value></con:property><con:property><con:name>stamped</con:name><con:value>0</con:value></con:property><con:property><con:name>startPublishing</con:name><con:value>2018-08-26 00:00:00 +0200</con:value></con:property><con:property><con:name>status</con:name><con:value>0</con:value></con:property><con:property><con:name>title</con:name><con:value>Test</con:value></con:property><con:property><con:name>type</con:name><con:value>txt</con:value></con:property><con:property><con:name>version</con:name><con:value>1.0</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="52c5f12b-f08a-4058-ba97-d8eb5c52104f" name="createDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>create</con:operation><con:request name="createDocument" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="30765109-a296-4428-9e23-f8f3be296eb0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:create>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <!--Optional:-->
         <document>
            <!--Zero or more repetitions:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            <creator>${CreateDocument-Properties#creator}</creator>
            <creatorId>${CreateDocument-Properties#creatorId}</creatorId>
            <!--Optional:-->
            <customId>${Login-Properties#sid}</customId>
            <!--Optional:-->
            <date>${CreateDocument-Properties#date}</date>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <exportStatus>${CreateDocument-Properties#exportStatus}</exportStatus>
            <!--Optional:-->
            <fileName>${CreateDocument-Properties#fileName}</fileName>
            <fileSize>${CreateDocument-Properties#fileSize}</fileSize>
            <!--Optional:-->
            <fileVersion>${CreateDocument-Properties#fileVersion}</fileVersion>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <folderId>${CreateFolder-Properties#folderId}</folderId><id>${CreateDocument-Properties#id}</id>
            <immutable>${CreateDocument-Properties#immutable}</immutable>
            <indexed>${CreateDocument-Properties#indexed}</indexed>
            <!--Optional:-->
            <language>${CreateDocument-Properties#language}</language>
            <!--Optional:-->
            <lastModified>${CreateDocument-Properties#lastModified}</lastModified>
            <!--Optional:-->
            
            <nature>${CreateDocument-Properties#nature}</nature>
            <pages>${CreateDocument-Properties#pages}</pages>
            <!--Optional:-->
            <passwordProtected>${CreateDocument-Properties#passwordProtected}</passwordProtected>
            <!--Optional:-->
            
            <published>${CreateDocument-Properties#published}</published>
            <!--Optional:-->
            <publisher>${CreateDocument-Properties#publisher}</publisher>
            <publisherId>${CreateDocument-Properties#publisherId}</publisherId>
            <!--Optional:-->
            <rating>${CreateDocument-Properties#rating}</rating>
            <!--Optional:-->
            
            <signed>${CreateDocument-Properties#signed}</signed>
            <stamped>${CreateDocument-Properties#stamped}</stamped>
            <!--Optional:-->
            <startPublishing>${CreateDocument-Properties#startPublishing}</startPublishing>
            <status>${CreateDocument-Properties#status}</status>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Zero or more repetitions:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            <title>${CreateDocument-Properties#title}</title>
            <!--Optional:-->
            <type>${CreateDocument-Properties#type}</type>
            <!--Optional:-->
            <version>${CreateDocument-Properties#version}</version>
            <!--Optional:-->
            
         </document><content>cid:1227959867564</content>
         <!--Optional:-->
         
      </ws:create>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f7f14f8d-344e-4e6e-b6ae-fa02b3c29b45" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="5480d070-4532-472c-8ac9-db041896ccd0" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="9167b28f-56e4-4479-b202-354836309cb3" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="768ffe89-1455-4ece-be5e-a9f3523c5d1b" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/create"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-CreateDocument" id="a2fee644-f4a1-4a1e-a828-5e9c36f5f33b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creator</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/creator[1]</con:sourcePath><con:targetType>creator</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creatorId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/creatorId[1]</con:sourcePath><con:targetType>creatorId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>customId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/customId[1]</con:sourcePath><con:targetType>customId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>date</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/date[1]</con:sourcePath><con:targetType>date</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>exportStatus</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/exportStatus[1]</con:sourcePath><con:targetType>exportStatus</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/fileName[1]</con:sourcePath><con:targetType>fileName</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>fileSize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/fileSize[1]</con:sourcePath><con:targetType>fileSize</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileVersion</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/fileVersion[1]</con:sourcePath><con:targetType>fileVersion</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/id[1]</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>immutable</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/immutable[1]</con:sourcePath><con:targetType>immutable</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>indexed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/indexed[1]</con:sourcePath><con:targetType>indexed</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>language</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/language[1]</con:sourcePath><con:targetType>language</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lastModified</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/lastModified[1]</con:sourcePath><con:targetType>lastModified</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>nature</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/nature[1]</con:sourcePath><con:targetType>nature</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pages</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/pages[1]</con:sourcePath><con:targetType>pages</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passwordProtected</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/passwordProtected[1]</con:sourcePath><con:targetType>passwordProtected</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>published</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/published[1]</con:sourcePath><con:targetType>published</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisher</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/publisher[1]</con:sourcePath><con:targetType>publisher</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisherId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/publisherId[1]</con:sourcePath><con:targetType>publisherId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>rating</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/rating[1]</con:sourcePath><con:targetType>rating</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>signed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/signed[1]</con:sourcePath><con:targetType>signed</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>stamped</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/stamped[1]</con:sourcePath><con:targetType>stamped</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>startPublishing</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/startPublishing[1]</con:sourcePath><con:targetType>startPublishing</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>status</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/status[1]</con:sourcePath><con:targetType>status</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>title</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/title[1]</con:sourcePath><con:targetType>title</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/type[1]</con:sourcePath><con:targetType>type</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>version</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/version[1]</con:sourcePath><con:targetType>version</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>folderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath/><con:targetType>folderId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="ee6187c0-52bd-485d-825d-6afd1d621039" name="getDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>getDocument</con:operation><con:request name="getDocument" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6efc1e9b-1127-4db7-ba97-aca600cff543"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getDocument>
         <!--Optional:-->
         
         <sid>${Login-Properties#sid}</sid><docId>${CreateDocument-Properties#id}</docId>
      </ws:getDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0394bfe2-64a2-4524-93da-40244412f3ab" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="d628340b-7008-440d-9faa-fb9d74fa4c67" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="ef0a31ab-39da-4ab9-bc19-ab41b5d92264" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="597f19c8-29f0-4b14-8447-a5a5bfdc3154" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getDocument"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="UpdateDocument-Properties" id="cdad3613-b13b-4c22-b5ac-dd80e27ba000"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>creator</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>creation</con:name><con:value>2018-08-27 17:30:30 +0200</con:value></con:property><con:property><con:name>creatorId</con:name><con:value>1</con:value></con:property><con:property><con:name>customId</con:name><con:value>44e31bd8-89db-4a0f-b1a1-aea987142b64</con:value></con:property><con:property><con:name>date</con:name><con:value>2018-08-27 17:30:30 +0200</con:value></con:property><con:property><con:name>exportStatus</con:name><con:value>0</con:value></con:property><con:property><con:name>fileName</con:name><con:value>Test.txt</con:value></con:property><con:property><con:name>fileSize</con:name><con:value>12</con:value></con:property><con:property><con:name>fileVersion</con:name><con:value>1.0</con:value></con:property><con:property><con:name>folderId</con:name><con:value>3375267</con:value></con:property><con:property><con:name>id</con:name><con:value>3408032</con:value></con:property><con:property><con:name>immutable</con:name><con:value>0</con:value></con:property><con:property><con:name>indexed</con:name><con:value>0</con:value></con:property><con:property><con:name>language</con:name><con:value>fr</con:value></con:property><con:property><con:name>lastModified</con:name><con:value>2018-08-28 16:52:10 +0200</con:value></con:property><con:property><con:name>nature</con:name><con:value>0</con:value></con:property><con:property><con:name>pages</con:name><con:value>0</con:value></con:property><con:property><con:name>passwordProtected</con:name><con:value>0</con:value></con:property><con:property><con:name>published</con:name><con:value>1</con:value></con:property><con:property><con:name>publisher</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>publisherId</con:name><con:value>1</con:value></con:property><con:property><con:name>rating</con:name><con:value>0</con:value></con:property><con:property><con:name>signed</con:name><con:value>0</con:value></con:property><con:property><con:name>stamped</con:name><con:value>0</con:value></con:property><con:property><con:name>startPublishing</con:name><con:value>2018-08-26 00:00:00 +0200</con:value></con:property><con:property><con:name>status</con:name><con:value>0</con:value></con:property><con:property><con:name>title</con:name><con:value>Test</con:value></con:property><con:property><con:name>type</con:name><con:value>txt</con:value></con:property><con:property><con:name>version</con:name><con:value>1.0</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="7b34d8ef-fd57-40ca-a369-88004f781201" name="getDocumentByCustomId-Request1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>getDocumentByCustomId</con:operation><con:request name="getDocumentByCustomId-Request1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3740dbf3-fff3-49c5-a025-840ba2c45bb0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getDocumentByCustomId>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid><customId>${UpdateDocument-Properties#customId}</customId>
         <!--Optional:-->
         
      </ws:getDocumentByCustomId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d20b60f8-1729-4e09-8af6-d4205d4ce0ce" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="82d5153a-0dc8-4c13-9057-4a1d693793dd" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="5a0ebc8f-b79d-42dc-9a34-2e19a93fb3c3" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="a95b4170-d747-462a-8ca2-fa07338afa11" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getDocumentByCustomId"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-GetDocumentByCustomId" id="187ed321-dc47-4702-a393-d5a1e1400ed0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creation</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/creation[1]</con:sourcePath><con:targetType>creation</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creator</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/creator[1]</con:sourcePath><con:targetType>creator</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>creatorId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/creatorId[1]</con:sourcePath><con:targetType>creatorId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>customId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/customId[1]</con:sourcePath><con:targetType>customId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>date</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/date[1]</con:sourcePath><con:targetType>date</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>exportStatus</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/exportStatus[1]</con:sourcePath><con:targetType>exportStatus</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/fileName[1]</con:sourcePath><con:targetType>fileName</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileSize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/fileSize[1]</con:sourcePath><con:targetType>fileSize</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileVersion</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/fileVersion[1]</con:sourcePath><con:targetType>fileVersion</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>folderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/folderId[1]</con:sourcePath><con:targetType>folderId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/id[1]</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>immutable</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/immutable[1]</con:sourcePath><con:targetType>immutable</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>indexed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/indexed[1]</con:sourcePath><con:targetType>indexed</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>language</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/language[1]</con:sourcePath><con:targetType>language</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>lastModified</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/lastModified[1]</con:sourcePath><con:targetType>lastModified</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>nature</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/nature[1]</con:sourcePath><con:targetType>nature</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pages</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/pages[1]</con:sourcePath><con:targetType>pages</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>passwordProtected</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/passwordProtected[1]</con:sourcePath><con:targetType>passwordProtected</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>published</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/published[1]</con:sourcePath><con:targetType>published</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisher</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/publisher[1]</con:sourcePath><con:targetType>publisher</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisherId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/publisherId[1]</con:sourcePath><con:targetType>publisherId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>rating</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/rating[1]</con:sourcePath><con:targetType>rating</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>signed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/signed[1]</con:sourcePath><con:targetType>signed</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>stamped</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/stamped[1]</con:sourcePath><con:targetType>stamped</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>startPublishing</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/startPublishing[1]</con:sourcePath><con:targetType>startPublishing</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>status</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/status[1]</con:sourcePath><con:targetType>status</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>title</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/title[1]</con:sourcePath><con:targetType>title</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/type[1]</con:sourcePath><con:targetType>type</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" ignoreEmpty="false" transferToAll="false" transferChildNodes="false"><con:name>version</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/version[1]</con:sourcePath><con:targetType>version</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="e8597f62-6066-43b4-b4ee-37f2d051903b" name="update"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>update</con:operation><con:request name="update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="28b045c6-55d1-403c-ba97-cb36e9237d64"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:update>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <!--Optional:-->
<document>
            <creation>${UpdateDocument-Properties#creation}</creation>
            <creator>${UpdateDocument-Properties#creator}</creator>
            <creatorId>${UpdateDocument-Properties#creatorId}</creatorId>
            <customId>${UpdateDocument-Properties#customId}</customId>
            <date>${UpdateDocument-Properties#date}</date>
            <exportStatus>${UpdateDocument-Properties#exportStatus}</exportStatus>
            <fileName>TestUpdate.txt</fileName>
            <fileSize>${UpdateDocument-Properties#fileSize}</fileSize>
            <fileVersion>${UpdateDocument-Properties#fileVersion}</fileVersion>
            <folderId>${UpdateDocument-Properties#folderId}</folderId>
            <id>${UpdateDocument-Properties#id}</id>
            <immutable>${UpdateDocument-Properties#immutable}</immutable>
            <indexed>${UpdateDocument-Properties#indexed}</indexed>
            <language>${UpdateDocument-Properties#language}</language>
            <lastModified>${UpdateDocument-Properties#lastModified}</lastModified>
            <nature>${UpdateDocument-Properties#nature}</nature>
            <pages>${UpdateDocument-Properties#pages}</pages>
            <passwordProtected>${UpdateDocument-Properties#passwordProtected}</passwordProtected>
            <published>${UpdateDocument-Properties#published}</published>
            <publisher>${UpdateDocument-Properties#publisher}</publisher>
            <publisherId>${UpdateDocument-Properties#publisherId}</publisherId>
            <rating>${UpdateDocument-Properties#rating}</rating>
            <signed>${UpdateDocument-Properties#signed}</signed>
            <stamped>${UpdateDocument-Properties#stamped}</stamped>
            <startPublishing>${UpdateDocument-Properties#startPublishing}</startPublishing>
            <status>${UpdateDocument-Properties#status}</status>
            <title>${UpdateDocument-Properties#title}</title>
            <type>${UpdateDocument-Properties#type}</type>
            <version>${UpdateDocument-Properties#version}</version>
         </document>
         
      </ws:update>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="118b231c-6322-4b89-a57a-400731c640f5" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3192035e-9927-42cf-ae0c-593134495a27" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="0b8adb06-8169-422c-92e0-2b96dd36ce9f" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="9b6d2442-dec1-451c-a879-4475b5593561" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/update"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="0fc2b94e-c121-4aa4-8742-03febb1fdd3e" name="getDocumentByCustomId-Request2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>getDocumentByCustomId</con:operation><con:request name="getDocumentByCustomId-Request2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3740dbf3-fff3-49c5-a025-840ba2c45bb0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getDocumentByCustomId>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid><customId>${UpdateDocument-Properties#customId}</customId>
         <!--Optional:-->
         
      </ws:getDocumentByCustomId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d20b60f8-1729-4e09-8af6-d4205d4ce0ce" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="82d5153a-0dc8-4c13-9057-4a1d693793dd" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="5a0ebc8f-b79d-42dc-9a34-2e19a93fb3c3" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="a95b4170-d747-462a-8ca2-fa07338afa11" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getDocumentByCustomId"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="Properties_bookmark_document" id="0ef6e6e4-8b68-4f4c-94c4-2a59d2f8e267"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>sid</con:name><con:value>36e00e26-305f-4aab-970e-14e664390d09</con:value></con:property><con:property><con:name>docId</con:name><con:value>163905537</con:value></con:property><con:property><con:name>fileType</con:name><con:value>txt</con:value></con:property><con:property><con:name>id</con:name><con:value>3473442</con:value></con:property><con:property><con:name>position</con:name><con:value>0</con:value></con:property><con:property><con:name>targetId</con:name><con:value>3408032</con:value></con:property><con:property><con:name>title</con:name><con:value>Test</con:value></con:property><con:property><con:name>type</con:name><con:value>0</con:value></con:property><con:property><con:name>userId</con:name><con:value>1</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="8bcd5cb5-d2db-42a2-b195-cf88e9391727" name="bookmarkDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapBookmarkServiceServiceSoapBinding</con:interface><con:operation>bookmarkDocument</con:operation><con:request name="bookmarkDocument" id="38dbae87-6507-4929-9e3c-9274e6aa7c73"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Bookmark</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:bookmarkDocument>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <docId>${UpdateDocument-Properties#id}</docId>
      </ws:bookmarkDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="63d22cbd-6d6b-4a27-8bad-2f93d2045d18" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="85a8c6b3-1e03-4619-9a0d-7edd62f7e32d" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="a0afbabb-876a-4268-a9c8-bfdfceb7fc9b" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="328c5d8a-eaf6-4d77-b982-fef5316ffca7" name="Contains"><con:configuration><token>${#TestCase#id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Bookmark/bookmarkDocument" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer_Bookmark_Document" id="619a5465-7112-4762-bd3b-b3a575a31eba"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>fileType</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/fileType[1]</con:sourcePath><con:targetType>fileType</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/id[1]</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>position</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/position[1]</con:sourcePath><con:targetType>position</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>targetId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/targetId[1]</con:sourcePath><con:targetType>targetId</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>title</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/title[1]</con:sourcePath><con:targetType>title</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/type[1]</con:sourcePath><con:targetType>type</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>userId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/userId[1]</con:sourcePath><con:targetType>userId</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="97c9c50f-750e-4158-803c-382734989697" name="unbookmarkDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapBookmarkServiceServiceSoapBinding</con:interface><con:operation>unbookmarkDocument</con:operation><con:request name="unbookmarkDocument" id="2043c332-d701-4191-8c07-8b8321cf8973"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Bookmark</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:unbookmarkDocument>
         <!--Optional:-->
         
         <sid>${Login-Properties#sid}</sid><docId>${UpdateDocument-Properties#id}</docId>
      </ws:unbookmarkDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a4c6aaaf-1262-4cf8-b121-64be86666da2" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="7ebea717-b26c-44a0-bf1a-4bf2a44bf9e5" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="ae0f9d6a-fdd7-4ddb-861e-b2aa80777e5c" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Bookmark/unbookmarkDocument" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="Properties_find_by_date" id="55bb6080-35b9-48d1-8fc0-ea69844c7f03"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>sid</con:name><con:value>aa06a344-05b3-4d20-b075-a4106c8db3d2</con:value></con:property><con:property><con:name>caseSensitive</con:name><con:value>0</con:value></con:property><con:property><con:name>creationFrom</con:name><con:value>27/08/2018</con:value></con:property><con:property><con:name>expression</con:name><con:value>Test</con:value></con:property><con:property><con:name>maxHits</con:name><con:value>50</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="5e07491f-18d8-4310-ad98-1b0e6b9e5bf6" name="findDocument_by_date"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapSearchServiceServiceSoapBinding</con:interface><con:operation>find</con:operation><con:request name="findDocument_by_date" id="d1920c48-97bc-4e81-b09c-11aa2f93bd8c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Search</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:find>
         <!--Optional:-->
         
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid><options>
            <caseSensitive>${Properties_find_by_date#caseSensitive}</caseSensitive>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            <creationFrom>${Properties_find_by_date#creationFrom}</creationFrom>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Zero or more repetitions:-->
            
            <!--Zero or more repetitions:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <expression>${Properties_find_by_date#expression}</expression><maxHits>${Properties_find_by_date#maxHits}</maxHits>
            <!--Optional:-->
            
            <retrieveAliases/>
            <searchInSubPath/>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <type/>
         </options>
      </ws:find>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="a1b243c8-5a70-471f-b745-c02273793494" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="0c8678f5-812d-40a9-90f3-b9ce92a790c6" name="SOAP Response"/><con:assertion type="XPath Match" id="3c7e524d-d315-4510-b296-0f03b1680438" name="Match content of [hits]"><con:configuration><path>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:findResponse[1]/searchResult[1]/estimatedHitsNumber[1]</path><content>${findDocument_by_date#Response#declare namespace ns2='http://ws.logicaldoc.com'; //ns2:findResponse[1]/searchResult[1]/estimatedHitsNumber[1]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="4614df0c-9a52-45ce-9844-e20a3bbbfa87" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="f487c5ca-fbd4-4f41-9272-093909181e18" name="Contains"><con:configuration><token>${#TestCase#estimatedHitsNumber}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Search/find" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>401543f0-0e71-48f4-9266-2fdc8f4d7122</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>55bb6080-35b9-48d1-8fc0-ea69844c7f03</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5e07491f-18d8-4310-ad98-1b0e6b9e5bf6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="8faeb5c4-c12b-465f-a57a-d120d095e7de" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TestCase_FindDocumentByKeywords" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Login-Properties" id="2fa97293-762b-4cd2-af4e-0b6fa4b068cf"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>admin</con:value></con:property><con:property><con:name>password</con:name><con:value>admin</con:value></con:property><con:property><con:name>sid</con:name><con:value>01b2e77d-903b-45f0-919a-fe3d9b7b9fae</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="078bbbba-6337-421b-9bd1-c22b427e58fb" name="login"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapAuthServiceServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="login" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="35ffab89-55e8-49a6-ae4e-2adacdfb6130"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Auth</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:login>
         <!--Optional:-->
         
         <!--Optional:-->
         <username>${Login-Properties#username}</username><password>${Login-Properties#password}</password>
      </ws:login>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e9007555-176d-4cf0-b186-f622490dff70" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="dd2dd279-9739-400f-a820-87a44d8ac7ab" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="d3d39e74-c86b-496d-85c1-91203ecb8c96" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="200992c0-d4ad-4243-8953-ef81651bea4b" name="Contains"><con:configuration><token>${#TestCase#sid}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Auth/login"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-Login" id="83d9ea5f-5a47-4156-a4da-3203223e8177"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>return</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>login</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:loginResponse[1]/return[1]</con:sourcePath><con:targetType>sid</con:targetType><con:targetStep>Login-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="CreateFolder-Properties" id="5b1186f0-8cff-4f19-af7a-2e6e5eeed55e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>name</con:name><con:value>Test</con:value></con:property><con:property><con:name>parentId</con:name><con:value>4</con:value></con:property><con:property><con:name>folderId</con:name><con:value>3375268</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="ca4c0bf3-f315-49a0-a6f5-2c036d0ae991" name="createFolder"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapFolderServiceServiceSoapBinding</con:interface><con:operation>createFolder</con:operation><con:request name="createFolder" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="24cf5f7c-05e0-4e70-94a2-91612b8dd58e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:createFolder>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <parentId>${CreateFolder-Properties#parentId}</parentId><name>${CreateFolder-Properties#name}</name>
         <!--Optional:-->
         
      </ws:createFolder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="bf3a3d10-dcdc-43f3-97a9-0361092ecb36" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="605aacae-0f88-408e-af4c-6f57dca4e52f" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="b09c2af7-d3e6-4ce0-9aa5-59bdadec18fb" name="Contains"><con:configuration><token>${#TestCase#folderId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/createFolder"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-CreateFolder" id="a8077612-446d-47be-8730-426b14a6238d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>folderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createFolder</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createFolderResponse[1]/folderId[1]</con:sourcePath><con:targetType>folderId</con:targetType><con:targetStep>CreateFolder-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="CreateDocument-Properties" id="8c17dbf8-52e6-44a6-87f1-d1e531f8f92b"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>creator</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>creatorId</con:name><con:value>1</con:value></con:property><con:property><con:name>customId</con:name><con:value>01b2e77d-903b-45f0-919a-fe3d9b7b9fae</con:value></con:property><con:property><con:name>date</con:name><con:value>2018-08-27 17:30:30 +0200</con:value></con:property><con:property><con:name>exportStatus</con:name><con:value>0</con:value></con:property><con:property><con:name>fileName</con:name><con:value>Test.txt</con:value></con:property><con:property><con:name>fileSize</con:name><con:value>12</con:value></con:property><con:property><con:name>fileVersion</con:name><con:value>1.0</con:value></con:property><con:property><con:name>folderId</con:name><con:value><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   <soap:Body>
      <ns2:createResponse xmlns:ns2="http://ws.logicaldoc.com">
         <document>
            <creation>2018-08-27 17:30:30 +0200</creation>
            <creator>Admin Admin</creator>
            <creatorId>1</creatorId>
            <customId>01b2e77d-903b-45f0-919a-fe3d9b7b9fae</customId>
            <date>2018-08-27 17:30:30 +0200</date>
            <exportStatus>0</exportStatus>
            <fileName>Test.txt</fileName>
            <fileSize>12</fileSize>
            <fileVersion>1.0</fileVersion>
            <folderId>3375268</folderId>
            <id>3408033</id>
            <immutable>0</immutable>
            <indexed>0</indexed>
            <language>fr</language>
            <lastModified>2018-08-28 16:52:10 +0200</lastModified>
            <nature>0</nature>
            <pages>0</pages>
            <passwordProtected>0</passwordProtected>
            <published>1</published>
            <publisher>Admin Admin</publisher>
            <publisherId>1</publisherId>
            <rating>0</rating>
            <signed>0</signed>
            <stamped>0</stamped>
            <startPublishing>2018-08-26 00:00:00 +0200</startPublishing>
            <status>0</status>
            <title>Test</title>
            <type>txt</type>
            <version>1.0</version>
         </document>
      </ns2:createResponse>
   </soap:Body>
</soap:Envelope>]]></con:value></con:property><con:property><con:name>id</con:name><con:value>3408033</con:value></con:property><con:property><con:name>immutable</con:name><con:value>0</con:value></con:property><con:property><con:name>indexed</con:name><con:value>0</con:value></con:property><con:property><con:name>language</con:name><con:value>fr</con:value></con:property><con:property><con:name>lastModified</con:name><con:value>2018-08-28 16:52:10 +0200</con:value></con:property><con:property><con:name>nature</con:name><con:value>0</con:value></con:property><con:property><con:name>pages</con:name><con:value>0</con:value></con:property><con:property><con:name>passwordProtected</con:name><con:value>0</con:value></con:property><con:property><con:name>published</con:name><con:value>1</con:value></con:property><con:property><con:name>publisher</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>publisherId</con:name><con:value>1</con:value></con:property><con:property><con:name>rating</con:name><con:value>0</con:value></con:property><con:property><con:name>signed</con:name><con:value>0</con:value></con:property><con:property><con:name>stamped</con:name><con:value>0</con:value></con:property><con:property><con:name>startPublishing</con:name><con:value>2018-08-26 00:00:00 +0200</con:value></con:property><con:property><con:name>status</con:name><con:value>0</con:value></con:property><con:property><con:name>title</con:name><con:value>Test</con:value></con:property><con:property><con:name>type</con:name><con:value>txt</con:value></con:property><con:property><con:name>version</con:name><con:value>1.0</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="eec52b36-498a-4046-bf6a-9d3f8fd37ea2" name="createDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>create</con:operation><con:request name="createDocument" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="30765109-a296-4428-9e23-f8f3be296eb0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:create>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <!--Optional:-->
         <document>
            <!--Zero or more repetitions:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            <creator>${CreateDocument-Properties#creator}</creator>
            <creatorId>${CreateDocument-Properties#creatorId}</creatorId>
            <!--Optional:-->
            <customId>${Login-Properties#sid}</customId>
            <!--Optional:-->
            <date>${CreateDocument-Properties#date}</date>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <exportStatus>${CreateDocument-Properties#exportStatus}</exportStatus>
            <!--Optional:-->
            <fileName>${CreateDocument-Properties#fileName}</fileName>
            <fileSize>${CreateDocument-Properties#fileSize}</fileSize>
            <!--Optional:-->
            <fileVersion>${CreateDocument-Properties#fileVersion}</fileVersion>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <folderId>${CreateFolder-Properties#folderId}</folderId><id>${CreateDocument-Properties#id}</id>
            <immutable>${CreateDocument-Properties#immutable}</immutable>
            <indexed>${CreateDocument-Properties#indexed}</indexed>
            <!--Optional:-->
            <language>${CreateDocument-Properties#language}</language>
            <!--Optional:-->
            <lastModified>${CreateDocument-Properties#lastModified}</lastModified>
            <!--Optional:-->
            
            <nature>${CreateDocument-Properties#nature}</nature>
            <pages>${CreateDocument-Properties#pages}</pages>
            <!--Optional:-->
            <passwordProtected>${CreateDocument-Properties#passwordProtected}</passwordProtected>
            <!--Optional:-->
            
            <published>${CreateDocument-Properties#published}</published>
            <!--Optional:-->
            <publisher>${CreateDocument-Properties#publisher}</publisher>
            <publisherId>${CreateDocument-Properties#publisherId}</publisherId>
            <!--Optional:-->
            <rating>${CreateDocument-Properties#rating}</rating>
            <!--Optional:-->
            
            <signed>${CreateDocument-Properties#signed}</signed>
            <stamped>${CreateDocument-Properties#stamped}</stamped>
            <!--Optional:-->
            <startPublishing>${CreateDocument-Properties#startPublishing}</startPublishing>
            <status>${CreateDocument-Properties#status}</status>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Zero or more repetitions:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            <title>${CreateDocument-Properties#title}</title>
            <!--Optional:-->
            <type>${CreateDocument-Properties#type}</type>
            <!--Optional:-->
            <version>${CreateDocument-Properties#version}</version>
            <!--Optional:-->
            
         </document><content>cid:1227959867564</content>
         <!--Optional:-->
         
      </ws:create>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f7f14f8d-344e-4e6e-b6ae-fa02b3c29b45" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="5480d070-4532-472c-8ac9-db041896ccd0" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="9167b28f-56e4-4479-b202-354836309cb3" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="768ffe89-1455-4ece-be5e-a9f3523c5d1b" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/create"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-CreateDocument" id="08641c8e-2978-49b8-a30f-477061922abf"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creator</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/creator[1]</con:sourcePath><con:targetType>creator</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creatorId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/creatorId[1]</con:sourcePath><con:targetType>creatorId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>customId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/customId[1]</con:sourcePath><con:targetType>customId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>date</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/date[1]</con:sourcePath><con:targetType>date</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>exportStatus</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/exportStatus[1]</con:sourcePath><con:targetType>exportStatus</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/fileName[1]</con:sourcePath><con:targetType>fileName</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>fileSize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/fileSize[1]</con:sourcePath><con:targetType>fileSize</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileVersion</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/fileVersion[1]</con:sourcePath><con:targetType>fileVersion</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/id[1]</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>immutable</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/immutable[1]</con:sourcePath><con:targetType>immutable</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>indexed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/indexed[1]</con:sourcePath><con:targetType>indexed</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>language</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/language[1]</con:sourcePath><con:targetType>language</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lastModified</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/lastModified[1]</con:sourcePath><con:targetType>lastModified</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>nature</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/nature[1]</con:sourcePath><con:targetType>nature</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pages</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/pages[1]</con:sourcePath><con:targetType>pages</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passwordProtected</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/passwordProtected[1]</con:sourcePath><con:targetType>passwordProtected</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>published</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/published[1]</con:sourcePath><con:targetType>published</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisher</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/publisher[1]</con:sourcePath><con:targetType>publisher</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisherId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/publisherId[1]</con:sourcePath><con:targetType>publisherId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>rating</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/rating[1]</con:sourcePath><con:targetType>rating</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>signed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/signed[1]</con:sourcePath><con:targetType>signed</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>stamped</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/stamped[1]</con:sourcePath><con:targetType>stamped</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>startPublishing</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/startPublishing[1]</con:sourcePath><con:targetType>startPublishing</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>status</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/status[1]</con:sourcePath><con:targetType>status</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>title</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/title[1]</con:sourcePath><con:targetType>title</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/type[1]</con:sourcePath><con:targetType>type</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>version</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/version[1]</con:sourcePath><con:targetType>version</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>folderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath/><con:targetType>folderId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="3f8132ef-a570-4bd2-adb8-6dbc52ae5b5b" name="getDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>getDocument</con:operation><con:request name="getDocument" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6efc1e9b-1127-4db7-ba97-aca600cff543"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getDocument>
         <!--Optional:-->
         
         <sid>${Login-Properties#sid}</sid><docId>${CreateDocument-Properties#id}</docId>
      </ws:getDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0394bfe2-64a2-4524-93da-40244412f3ab" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="d628340b-7008-440d-9faa-fb9d74fa4c67" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="ef0a31ab-39da-4ab9-bc19-ab41b5d92264" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="597f19c8-29f0-4b14-8447-a5a5bfdc3154" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getDocument"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="UpdateDocument-Properties" id="52bc70f1-7baf-4fca-a4d2-4843b2c2a569"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>creator</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>creation</con:name><con:value>2018-08-27 17:30:30 +0200</con:value></con:property><con:property><con:name>creatorId</con:name><con:value>1</con:value></con:property><con:property><con:name>customId</con:name><con:value>01b2e77d-903b-45f0-919a-fe3d9b7b9fae</con:value></con:property><con:property><con:name>date</con:name><con:value>2018-08-27 17:30:30 +0200</con:value></con:property><con:property><con:name>exportStatus</con:name><con:value>0</con:value></con:property><con:property><con:name>fileName</con:name><con:value>Test.txt</con:value></con:property><con:property><con:name>fileSize</con:name><con:value>12</con:value></con:property><con:property><con:name>fileVersion</con:name><con:value>1.0</con:value></con:property><con:property><con:name>folderId</con:name><con:value>3375268</con:value></con:property><con:property><con:name>id</con:name><con:value>3408033</con:value></con:property><con:property><con:name>immutable</con:name><con:value>0</con:value></con:property><con:property><con:name>indexed</con:name><con:value>0</con:value></con:property><con:property><con:name>language</con:name><con:value>fr</con:value></con:property><con:property><con:name>lastModified</con:name><con:value>2018-08-28 16:52:10 +0200</con:value></con:property><con:property><con:name>nature</con:name><con:value>0</con:value></con:property><con:property><con:name>pages</con:name><con:value>0</con:value></con:property><con:property><con:name>passwordProtected</con:name><con:value>0</con:value></con:property><con:property><con:name>published</con:name><con:value>1</con:value></con:property><con:property><con:name>publisher</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>publisherId</con:name><con:value>1</con:value></con:property><con:property><con:name>rating</con:name><con:value>0</con:value></con:property><con:property><con:name>signed</con:name><con:value>0</con:value></con:property><con:property><con:name>stamped</con:name><con:value>0</con:value></con:property><con:property><con:name>startPublishing</con:name><con:value>2018-08-26 00:00:00 +0200</con:value></con:property><con:property><con:name>status</con:name><con:value>0</con:value></con:property><con:property><con:name>title</con:name><con:value>Test</con:value></con:property><con:property><con:name>type</con:name><con:value>txt</con:value></con:property><con:property><con:name>version</con:name><con:value>1.0</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="1802f1ef-6e1a-4bcc-9714-9285485d18ab" name="getDocumentByCustomId-Request1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>getDocumentByCustomId</con:operation><con:request name="getDocumentByCustomId-Request1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3740dbf3-fff3-49c5-a025-840ba2c45bb0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getDocumentByCustomId>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid><customId>${UpdateDocument-Properties#customId}</customId>
         <!--Optional:-->
         
      </ws:getDocumentByCustomId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d20b60f8-1729-4e09-8af6-d4205d4ce0ce" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="82d5153a-0dc8-4c13-9057-4a1d693793dd" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="5a0ebc8f-b79d-42dc-9a34-2e19a93fb3c3" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="a95b4170-d747-462a-8ca2-fa07338afa11" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getDocumentByCustomId"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-GetDocumentByCustomId" id="14f519d3-fd86-474f-8a27-870a85a341e0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creation</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/creation[1]</con:sourcePath><con:targetType>creation</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creator</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/creator[1]</con:sourcePath><con:targetType>creator</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>creatorId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/creatorId[1]</con:sourcePath><con:targetType>creatorId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>customId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/customId[1]</con:sourcePath><con:targetType>customId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>date</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/date[1]</con:sourcePath><con:targetType>date</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>exportStatus</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/exportStatus[1]</con:sourcePath><con:targetType>exportStatus</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/fileName[1]</con:sourcePath><con:targetType>fileName</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileSize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/fileSize[1]</con:sourcePath><con:targetType>fileSize</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileVersion</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/fileVersion[1]</con:sourcePath><con:targetType>fileVersion</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>folderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/folderId[1]</con:sourcePath><con:targetType>folderId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/id[1]</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>immutable</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/immutable[1]</con:sourcePath><con:targetType>immutable</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>indexed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/indexed[1]</con:sourcePath><con:targetType>indexed</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>language</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/language[1]</con:sourcePath><con:targetType>language</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>lastModified</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/lastModified[1]</con:sourcePath><con:targetType>lastModified</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>nature</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/nature[1]</con:sourcePath><con:targetType>nature</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pages</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/pages[1]</con:sourcePath><con:targetType>pages</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>passwordProtected</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/passwordProtected[1]</con:sourcePath><con:targetType>passwordProtected</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>published</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/published[1]</con:sourcePath><con:targetType>published</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisher</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/publisher[1]</con:sourcePath><con:targetType>publisher</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisherId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/publisherId[1]</con:sourcePath><con:targetType>publisherId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>rating</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/rating[1]</con:sourcePath><con:targetType>rating</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>signed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/signed[1]</con:sourcePath><con:targetType>signed</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>stamped</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/stamped[1]</con:sourcePath><con:targetType>stamped</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>startPublishing</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/startPublishing[1]</con:sourcePath><con:targetType>startPublishing</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>status</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/status[1]</con:sourcePath><con:targetType>status</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>title</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/title[1]</con:sourcePath><con:targetType>title</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/type[1]</con:sourcePath><con:targetType>type</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" ignoreEmpty="false" transferToAll="false" transferChildNodes="false"><con:name>version</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/version[1]</con:sourcePath><con:targetType>version</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="9abebe68-0e97-492a-a8f6-f061f1a23e84" name="update"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>update</con:operation><con:request name="update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="28b045c6-55d1-403c-ba97-cb36e9237d64"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:update>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <!--Optional:-->
<document>
            <creation>${UpdateDocument-Properties#creation}</creation>
            <creator>${UpdateDocument-Properties#creator}</creator>
            <creatorId>${UpdateDocument-Properties#creatorId}</creatorId>
            <customId>${UpdateDocument-Properties#customId}</customId>
            <date>${UpdateDocument-Properties#date}</date>
            <exportStatus>${UpdateDocument-Properties#exportStatus}</exportStatus>
            <fileName>TestUpdate.txt</fileName>
            <fileSize>${UpdateDocument-Properties#fileSize}</fileSize>
            <fileVersion>${UpdateDocument-Properties#fileVersion}</fileVersion>
            <folderId>${UpdateDocument-Properties#folderId}</folderId>
            <id>${UpdateDocument-Properties#id}</id>
            <immutable>${UpdateDocument-Properties#immutable}</immutable>
            <indexed>${UpdateDocument-Properties#indexed}</indexed>
            <language>${UpdateDocument-Properties#language}</language>
            <lastModified>${UpdateDocument-Properties#lastModified}</lastModified>
            <nature>${UpdateDocument-Properties#nature}</nature>
            <pages>${UpdateDocument-Properties#pages}</pages>
            <passwordProtected>${UpdateDocument-Properties#passwordProtected}</passwordProtected>
            <published>${UpdateDocument-Properties#published}</published>
            <publisher>${UpdateDocument-Properties#publisher}</publisher>
            <publisherId>${UpdateDocument-Properties#publisherId}</publisherId>
            <rating>${UpdateDocument-Properties#rating}</rating>
            <signed>${UpdateDocument-Properties#signed}</signed>
            <stamped>${UpdateDocument-Properties#stamped}</stamped>
            <startPublishing>${UpdateDocument-Properties#startPublishing}</startPublishing>
            <status>${UpdateDocument-Properties#status}</status>
            <title>${UpdateDocument-Properties#title}</title>
            <type>${UpdateDocument-Properties#type}</type>
            <version>${UpdateDocument-Properties#version}</version>
         </document>
         
      </ws:update>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="118b231c-6322-4b89-a57a-400731c640f5" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3192035e-9927-42cf-ae0c-593134495a27" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="0b8adb06-8169-422c-92e0-2b96dd36ce9f" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="9b6d2442-dec1-451c-a879-4475b5593561" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/update"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="49bfc269-79b4-407a-86bb-4fbbe4dede63" name="getDocumentByCustomId-Request2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>getDocumentByCustomId</con:operation><con:request name="getDocumentByCustomId-Request2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3740dbf3-fff3-49c5-a025-840ba2c45bb0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getDocumentByCustomId>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid><customId>${UpdateDocument-Properties#customId}</customId>
         <!--Optional:-->
         
      </ws:getDocumentByCustomId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d20b60f8-1729-4e09-8af6-d4205d4ce0ce" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="82d5153a-0dc8-4c13-9057-4a1d693793dd" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="5a0ebc8f-b79d-42dc-9a34-2e19a93fb3c3" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="a95b4170-d747-462a-8ca2-fa07338afa11" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getDocumentByCustomId"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="Properties_bookmark_document" id="28a9a78e-4428-4136-8f12-a32b2a522a4b"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>sid</con:name><con:value>36e00e26-305f-4aab-970e-14e664390d09</con:value></con:property><con:property><con:name>docId</con:name><con:value>163905537</con:value></con:property><con:property><con:name>fileType</con:name><con:value>txt</con:value></con:property><con:property><con:name>id</con:name><con:value>3473443</con:value></con:property><con:property><con:name>position</con:name><con:value>0</con:value></con:property><con:property><con:name>targetId</con:name><con:value>3408033</con:value></con:property><con:property><con:name>title</con:name><con:value>Test</con:value></con:property><con:property><con:name>type</con:name><con:value>0</con:value></con:property><con:property><con:name>userId</con:name><con:value>1</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="fa51b671-058d-4849-adc6-de7aa10a4a3c" name="bookmarkDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapBookmarkServiceServiceSoapBinding</con:interface><con:operation>bookmarkDocument</con:operation><con:request name="bookmarkDocument" id="38dbae87-6507-4929-9e3c-9274e6aa7c73"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Bookmark</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:bookmarkDocument>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <docId>${UpdateDocument-Properties#id}</docId>
      </ws:bookmarkDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="63d22cbd-6d6b-4a27-8bad-2f93d2045d18" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="85a8c6b3-1e03-4619-9a0d-7edd62f7e32d" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="a0afbabb-876a-4268-a9c8-bfdfceb7fc9b" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="328c5d8a-eaf6-4d77-b982-fef5316ffca7" name="Contains"><con:configuration><token>${#TestCase#id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Bookmark/bookmarkDocument" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer_Bookmark_Document" id="e1e3c011-0bc4-4be6-a20a-c675f1a16ad0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>fileType</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/fileType[1]</con:sourcePath><con:targetType>fileType</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/id[1]</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>position</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/position[1]</con:sourcePath><con:targetType>position</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>targetId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/targetId[1]</con:sourcePath><con:targetType>targetId</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>title</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/title[1]</con:sourcePath><con:targetType>title</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/type[1]</con:sourcePath><con:targetType>type</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>userId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/userId[1]</con:sourcePath><con:targetType>userId</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="2cdd95b1-b443-4a70-9233-8ab5c35891cd" name="unbookmarkDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapBookmarkServiceServiceSoapBinding</con:interface><con:operation>unbookmarkDocument</con:operation><con:request name="unbookmarkDocument" id="2043c332-d701-4191-8c07-8b8321cf8973"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Bookmark</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:unbookmarkDocument>
         <!--Optional:-->
         
         <sid>${Login-Properties#sid}</sid><docId>${UpdateDocument-Properties#id}</docId>
      </ws:unbookmarkDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a4c6aaaf-1262-4cf8-b121-64be86666da2" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="7ebea717-b26c-44a0-bf1a-4bf2a44bf9e5" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="ae0f9d6a-fdd7-4ddb-861e-b2aa80777e5c" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Bookmark/unbookmarkDocument" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="Properties_find_by_keywords" id="914a249c-b00e-4ee3-a105-6dfa1f9f2b15"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>sid</con:name><con:value>aa06a344-05b3-4d20-b075-a4106c8db3d2</con:value></con:property><con:property><con:name>caseSensitive</con:name><con:value>0</con:value></con:property><con:property><con:name>creationFrom</con:name><con:value/></con:property><con:property><con:name>expression</con:name><con:value>Test</con:value></con:property><con:property><con:name>maxHits</con:name><con:value>50</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="5be20187-eed7-4d13-a58b-e6b9dc247297" name="findDocument_by_keywords"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapSearchServiceServiceSoapBinding</con:interface><con:operation>find</con:operation><con:request name="findDocument_by_keywords" id="d1920c48-97bc-4e81-b09c-11aa2f93bd8c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Search</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:find>
         <!--Optional:-->
         
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid><options>
            <caseSensitive>${Properties_find_by_keywords#caseSensitive}</caseSensitive>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Zero or more repetitions:-->
            
            <!--Zero or more repetitions:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <expression>${Properties_find_by_keywords#expression}</expression><maxHits>${Properties_find_by_keywords#maxHits}</maxHits>
            <!--Optional:-->
            
            <retrieveAliases/>
            <searchInSubPath/>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <type/>
         </options>
      </ws:find>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="a1b243c8-5a70-471f-b745-c02273793494" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="0c8678f5-812d-40a9-90f3-b9ce92a790c6" name="SOAP Response"/><con:assertion type="XPath Match" id="3c7e524d-d315-4510-b296-0f03b1680438" name="Match content of [hits]"><con:configuration><path>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:findResponse[1]/searchResult[1]/estimatedHitsNumber[1]</path><content>${findDocument_by_keywords#Response#declare namespace ns2='http://ws.logicaldoc.com'; //ns2:findResponse[1]/searchResult[1]/estimatedHitsNumber[1]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a6b7459f-821c-433c-ba67-596a8b904f51" name="Contains"><con:configuration><token>${#TestCase#estimatedHitsNumber}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="16862274-4a33-4e31-8889-53a965fd1c9b" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Search/find" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>401543f0-0e71-48f4-9266-2fdc8f4d7122</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>914a249c-b00e-4ee3-a105-6dfa1f9f2b15</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5be20187-eed7-4d13-a58b-e6b9dc247297</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="6c8032a7-e2c6-4284-813e-bc2be3adf858" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TestCase_DeleteDocument" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Login-Properties" id="9ad7fa6e-5afb-4519-a39d-de3db7123699"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>admin</con:value></con:property><con:property><con:name>password</con:name><con:value>admin</con:value></con:property><con:property><con:name>sid</con:name><con:value>7a269177-ef15-4583-8304-8d73408ec8fb</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="c79b73ac-2a44-45b2-a707-86c7f8badf25" name="login"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapAuthServiceServiceSoapBinding</con:interface><con:operation>login</con:operation><con:request name="login" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="35ffab89-55e8-49a6-ae4e-2adacdfb6130"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Auth</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:login>
         <!--Optional:-->
         
         <!--Optional:-->
         <username>${Login-Properties#username}</username><password>${Login-Properties#password}</password>
      </ws:login>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e9007555-176d-4cf0-b186-f622490dff70" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="dd2dd279-9739-400f-a820-87a44d8ac7ab" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="d3d39e74-c86b-496d-85c1-91203ecb8c96" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="200992c0-d4ad-4243-8953-ef81651bea4b" name="Contains"><con:configuration><token>${#TestCase#sid}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Auth/login"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-Login" id="165a5334-d28e-47f4-a837-c53b2d63f272"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>return</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>login</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:loginResponse[1]/return[1]</con:sourcePath><con:targetType>sid</con:targetType><con:targetStep>Login-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="CreateFolder-Properties" id="904e8c06-ec6e-4a90-addd-72835831964f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>name</con:name><con:value>Test</con:value></con:property><con:property><con:name>parentId</con:name><con:value>4</con:value></con:property><con:property><con:name>folderId</con:name><con:value>3375269</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="0655e235-adad-4838-984d-61aa79b1f4f6" name="createFolder"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapFolderServiceServiceSoapBinding</con:interface><con:operation>createFolder</con:operation><con:request name="createFolder" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="24cf5f7c-05e0-4e70-94a2-91612b8dd58e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Folder</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:createFolder>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <parentId>${CreateFolder-Properties#parentId}</parentId><name>${CreateFolder-Properties#name}</name>
         <!--Optional:-->
         
      </ws:createFolder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="bf3a3d10-dcdc-43f3-97a9-0361092ecb36" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="605aacae-0f88-408e-af4c-6f57dca4e52f" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="b09c2af7-d3e6-4ce0-9aa5-59bdadec18fb" name="Contains"><con:configuration><token>${#TestCase#folderId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Folder/createFolder"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-CreateFolder" id="d127f3c3-d7b3-4d89-8d7a-148387fbc0f9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>folderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createFolder</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createFolderResponse[1]/folderId[1]</con:sourcePath><con:targetType>folderId</con:targetType><con:targetStep>CreateFolder-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="CreateDocument-Properties" id="0824f5ef-04b4-4584-b9ed-0b5c638c039c"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>creator</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>creatorId</con:name><con:value>1</con:value></con:property><con:property><con:name>customId</con:name><con:value>7a269177-ef15-4583-8304-8d73408ec8fb</con:value></con:property><con:property><con:name>date</con:name><con:value>2018-08-27 17:30:30 +0200</con:value></con:property><con:property><con:name>exportStatus</con:name><con:value>0</con:value></con:property><con:property><con:name>fileName</con:name><con:value>Test.txt</con:value></con:property><con:property><con:name>fileSize</con:name><con:value>12</con:value></con:property><con:property><con:name>fileVersion</con:name><con:value>1.0</con:value></con:property><con:property><con:name>folderId</con:name><con:value><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   <soap:Body>
      <ns2:createResponse xmlns:ns2="http://ws.logicaldoc.com">
         <document>
            <creation>2018-08-27 17:30:30 +0200</creation>
            <creator>Admin Admin</creator>
            <creatorId>1</creatorId>
            <customId>7a269177-ef15-4583-8304-8d73408ec8fb</customId>
            <date>2018-08-27 17:30:30 +0200</date>
            <exportStatus>0</exportStatus>
            <fileName>Test.txt</fileName>
            <fileSize>12</fileSize>
            <fileVersion>1.0</fileVersion>
            <folderId>3375269</folderId>
            <id>3408034</id>
            <immutable>0</immutable>
            <indexed>0</indexed>
            <language>fr</language>
            <lastModified>2018-08-28 16:52:11 +0200</lastModified>
            <nature>0</nature>
            <pages>0</pages>
            <passwordProtected>0</passwordProtected>
            <published>1</published>
            <publisher>Admin Admin</publisher>
            <publisherId>1</publisherId>
            <rating>0</rating>
            <signed>0</signed>
            <stamped>0</stamped>
            <startPublishing>2018-08-26 00:00:00 +0200</startPublishing>
            <status>0</status>
            <title>Test</title>
            <type>txt</type>
            <version>1.0</version>
         </document>
      </ns2:createResponse>
   </soap:Body>
</soap:Envelope>]]></con:value></con:property><con:property><con:name>id</con:name><con:value>3408034</con:value></con:property><con:property><con:name>immutable</con:name><con:value>0</con:value></con:property><con:property><con:name>indexed</con:name><con:value>0</con:value></con:property><con:property><con:name>language</con:name><con:value>fr</con:value></con:property><con:property><con:name>lastModified</con:name><con:value>2018-08-28 16:52:11 +0200</con:value></con:property><con:property><con:name>nature</con:name><con:value>0</con:value></con:property><con:property><con:name>pages</con:name><con:value>0</con:value></con:property><con:property><con:name>passwordProtected</con:name><con:value>0</con:value></con:property><con:property><con:name>published</con:name><con:value>1</con:value></con:property><con:property><con:name>publisher</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>publisherId</con:name><con:value>1</con:value></con:property><con:property><con:name>rating</con:name><con:value>0</con:value></con:property><con:property><con:name>signed</con:name><con:value>0</con:value></con:property><con:property><con:name>stamped</con:name><con:value>0</con:value></con:property><con:property><con:name>startPublishing</con:name><con:value>2018-08-26 00:00:00 +0200</con:value></con:property><con:property><con:name>status</con:name><con:value>0</con:value></con:property><con:property><con:name>title</con:name><con:value>Test</con:value></con:property><con:property><con:name>type</con:name><con:value>txt</con:value></con:property><con:property><con:name>version</con:name><con:value>1.0</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="9d0d59f5-7ba5-4d94-bdae-0a137b0a6012" name="createDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>create</con:operation><con:request name="createDocument" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="30765109-a296-4428-9e23-f8f3be296eb0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:create>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <!--Optional:-->
         <document>
            <!--Zero or more repetitions:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            <creator>${CreateDocument-Properties#creator}</creator>
            <creatorId>${CreateDocument-Properties#creatorId}</creatorId>
            <!--Optional:-->
            <customId>${Login-Properties#sid}</customId>
            <!--Optional:-->
            <date>${CreateDocument-Properties#date}</date>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <exportStatus>${CreateDocument-Properties#exportStatus}</exportStatus>
            <!--Optional:-->
            <fileName>${CreateDocument-Properties#fileName}</fileName>
            <fileSize>${CreateDocument-Properties#fileSize}</fileSize>
            <!--Optional:-->
            <fileVersion>${CreateDocument-Properties#fileVersion}</fileVersion>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            
            <folderId>${CreateFolder-Properties#folderId}</folderId><id>${CreateDocument-Properties#id}</id>
            <immutable>${CreateDocument-Properties#immutable}</immutable>
            <indexed>${CreateDocument-Properties#indexed}</indexed>
            <!--Optional:-->
            <language>${CreateDocument-Properties#language}</language>
            <!--Optional:-->
            <lastModified>${CreateDocument-Properties#lastModified}</lastModified>
            <!--Optional:-->
            
            <nature>${CreateDocument-Properties#nature}</nature>
            <pages>${CreateDocument-Properties#pages}</pages>
            <!--Optional:-->
            <passwordProtected>${CreateDocument-Properties#passwordProtected}</passwordProtected>
            <!--Optional:-->
            
            <published>${CreateDocument-Properties#published}</published>
            <!--Optional:-->
            <publisher>${CreateDocument-Properties#publisher}</publisher>
            <publisherId>${CreateDocument-Properties#publisherId}</publisherId>
            <!--Optional:-->
            <rating>${CreateDocument-Properties#rating}</rating>
            <!--Optional:-->
            
            <signed>${CreateDocument-Properties#signed}</signed>
            <stamped>${CreateDocument-Properties#stamped}</stamped>
            <!--Optional:-->
            <startPublishing>${CreateDocument-Properties#startPublishing}</startPublishing>
            <status>${CreateDocument-Properties#status}</status>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Zero or more repetitions:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            <title>${CreateDocument-Properties#title}</title>
            <!--Optional:-->
            <type>${CreateDocument-Properties#type}</type>
            <!--Optional:-->
            <version>${CreateDocument-Properties#version}</version>
            <!--Optional:-->
            
         </document><content>cid:1227959867564</content>
         <!--Optional:-->
         
      </ws:create>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f7f14f8d-344e-4e6e-b6ae-fa02b3c29b45" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="5480d070-4532-472c-8ac9-db041896ccd0" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="9167b28f-56e4-4479-b202-354836309cb3" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="768ffe89-1455-4ece-be5e-a9f3523c5d1b" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/create"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-CreateDocument" id="7ae80462-f73d-4140-b4a5-6078498957ee"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creator</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/creator[1]</con:sourcePath><con:targetType>creator</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creatorId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/creatorId[1]</con:sourcePath><con:targetType>creatorId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>customId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/customId[1]</con:sourcePath><con:targetType>customId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>date</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/date[1]</con:sourcePath><con:targetType>date</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>exportStatus</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/exportStatus[1]</con:sourcePath><con:targetType>exportStatus</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/fileName[1]</con:sourcePath><con:targetType>fileName</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>fileSize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/fileSize[1]</con:sourcePath><con:targetType>fileSize</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileVersion</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/fileVersion[1]</con:sourcePath><con:targetType>fileVersion</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/id[1]</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>immutable</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/immutable[1]</con:sourcePath><con:targetType>immutable</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>indexed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/indexed[1]</con:sourcePath><con:targetType>indexed</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>language</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/language[1]</con:sourcePath><con:targetType>language</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>lastModified</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/lastModified[1]</con:sourcePath><con:targetType>lastModified</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>nature</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/nature[1]</con:sourcePath><con:targetType>nature</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pages</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/pages[1]</con:sourcePath><con:targetType>pages</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passwordProtected</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/passwordProtected[1]</con:sourcePath><con:targetType>passwordProtected</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>published</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/published[1]</con:sourcePath><con:targetType>published</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisher</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/publisher[1]</con:sourcePath><con:targetType>publisher</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisherId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/publisherId[1]</con:sourcePath><con:targetType>publisherId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>rating</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/rating[1]</con:sourcePath><con:targetType>rating</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>signed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/signed[1]</con:sourcePath><con:targetType>signed</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>stamped</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/stamped[1]</con:sourcePath><con:targetType>stamped</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>startPublishing</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/startPublishing[1]</con:sourcePath><con:targetType>startPublishing</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>status</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/status[1]</con:sourcePath><con:targetType>status</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>title</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/title[1]</con:sourcePath><con:targetType>title</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/type[1]</con:sourcePath><con:targetType>type</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>version</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:createResponse[1]/document[1]/version[1]</con:sourcePath><con:targetType>version</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>folderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createDocument</con:sourceStep><con:sourcePath/><con:targetType>folderId</con:targetType><con:targetStep>CreateDocument-Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="5af9a7b4-c5b9-4c67-92d5-7fffab275a53" name="getDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>getDocument</con:operation><con:request name="getDocument" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6efc1e9b-1127-4db7-ba97-aca600cff543"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getDocument>
         <!--Optional:-->
         
         <sid>${Login-Properties#sid}</sid><docId>${CreateDocument-Properties#id}</docId>
      </ws:getDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0394bfe2-64a2-4524-93da-40244412f3ab" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="d628340b-7008-440d-9faa-fb9d74fa4c67" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="ef0a31ab-39da-4ab9-bc19-ab41b5d92264" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="597f19c8-29f0-4b14-8447-a5a5bfdc3154" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getDocument"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="UpdateDocument-Properties" id="34d96732-1d69-4aa8-9f4a-ea5b5300b979"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>creator</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>creation</con:name><con:value>2018-08-27 17:30:30 +0200</con:value></con:property><con:property><con:name>creatorId</con:name><con:value>1</con:value></con:property><con:property><con:name>customId</con:name><con:value>7a269177-ef15-4583-8304-8d73408ec8fb</con:value></con:property><con:property><con:name>date</con:name><con:value>2018-08-27 17:30:30 +0200</con:value></con:property><con:property><con:name>exportStatus</con:name><con:value>0</con:value></con:property><con:property><con:name>fileName</con:name><con:value>Test.txt</con:value></con:property><con:property><con:name>fileSize</con:name><con:value>12</con:value></con:property><con:property><con:name>fileVersion</con:name><con:value>1.0</con:value></con:property><con:property><con:name>folderId</con:name><con:value>3375269</con:value></con:property><con:property><con:name>id</con:name><con:value>3408034</con:value></con:property><con:property><con:name>immutable</con:name><con:value>0</con:value></con:property><con:property><con:name>indexed</con:name><con:value>0</con:value></con:property><con:property><con:name>language</con:name><con:value>fr</con:value></con:property><con:property><con:name>lastModified</con:name><con:value>2018-08-28 16:52:11 +0200</con:value></con:property><con:property><con:name>nature</con:name><con:value>0</con:value></con:property><con:property><con:name>pages</con:name><con:value>0</con:value></con:property><con:property><con:name>passwordProtected</con:name><con:value>0</con:value></con:property><con:property><con:name>published</con:name><con:value>1</con:value></con:property><con:property><con:name>publisher</con:name><con:value>Admin Admin</con:value></con:property><con:property><con:name>publisherId</con:name><con:value>1</con:value></con:property><con:property><con:name>rating</con:name><con:value>0</con:value></con:property><con:property><con:name>signed</con:name><con:value>0</con:value></con:property><con:property><con:name>stamped</con:name><con:value>0</con:value></con:property><con:property><con:name>startPublishing</con:name><con:value>2018-08-26 00:00:00 +0200</con:value></con:property><con:property><con:name>status</con:name><con:value>0</con:value></con:property><con:property><con:name>title</con:name><con:value>Test</con:value></con:property><con:property><con:name>type</con:name><con:value>txt</con:value></con:property><con:property><con:name>version</con:name><con:value>1.0</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="8be3b7ba-e5d6-4e53-ac85-170a9ee36a5c" name="getDocumentByCustomId-Request1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>getDocumentByCustomId</con:operation><con:request name="getDocumentByCustomId-Request1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3740dbf3-fff3-49c5-a025-840ba2c45bb0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getDocumentByCustomId>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid><customId>${UpdateDocument-Properties#customId}</customId>
         <!--Optional:-->
         
      </ws:getDocumentByCustomId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d20b60f8-1729-4e09-8af6-d4205d4ce0ce" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="82d5153a-0dc8-4c13-9057-4a1d693793dd" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="5a0ebc8f-b79d-42dc-9a34-2e19a93fb3c3" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="a95b4170-d747-462a-8ca2-fa07338afa11" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getDocumentByCustomId"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer-GetDocumentByCustomId" id="b3f09054-43e3-46cc-abbd-c87ce3598997"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creation</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/creation[1]</con:sourcePath><con:targetType>creation</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>creator</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/creator[1]</con:sourcePath><con:targetType>creator</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>creatorId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/creatorId[1]</con:sourcePath><con:targetType>creatorId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>customId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/customId[1]</con:sourcePath><con:targetType>customId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>date</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/date[1]</con:sourcePath><con:targetType>date</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>exportStatus</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/exportStatus[1]</con:sourcePath><con:targetType>exportStatus</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/fileName[1]</con:sourcePath><con:targetType>fileName</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileSize</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/fileSize[1]</con:sourcePath><con:targetType>fileSize</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>fileVersion</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/fileVersion[1]</con:sourcePath><con:targetType>fileVersion</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>folderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/folderId[1]</con:sourcePath><con:targetType>folderId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/id[1]</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>immutable</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/immutable[1]</con:sourcePath><con:targetType>immutable</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>indexed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/indexed[1]</con:sourcePath><con:targetType>indexed</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>language</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/language[1]</con:sourcePath><con:targetType>language</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" transferChildNodes="false"><con:name>lastModified</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/lastModified[1]</con:sourcePath><con:targetType>lastModified</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>nature</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/nature[1]</con:sourcePath><con:targetType>nature</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pages</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/pages[1]</con:sourcePath><con:targetType>pages</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>passwordProtected</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/passwordProtected[1]</con:sourcePath><con:targetType>passwordProtected</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>published</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/published[1]</con:sourcePath><con:targetType>published</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisher</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/publisher[1]</con:sourcePath><con:targetType>publisher</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>publisherId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/publisherId[1]</con:sourcePath><con:targetType>publisherId</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>rating</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/rating[1]</con:sourcePath><con:targetType>rating</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>signed</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/signed[1]</con:sourcePath><con:targetType>signed</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>stamped</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/stamped[1]</con:sourcePath><con:targetType>stamped</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>startPublishing</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/startPublishing[1]</con:sourcePath><con:targetType>startPublishing</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>status</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/status[1]</con:sourcePath><con:targetType>status</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>title</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/title[1]</con:sourcePath><con:targetType>title</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/type[1]</con:sourcePath><con:targetType>type</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" ignoreEmpty="false" transferToAll="false" transferChildNodes="false"><con:name>version</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:getDocumentResponse[1]/document[1]/version[1]</con:sourcePath><con:targetType>version</con:targetType><con:targetStep>UpdateDocument-Properties</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="a902edc9-8619-4af0-8f7f-f661aa9979c3" name="update"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>update</con:operation><con:request name="update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="28b045c6-55d1-403c-ba97-cb36e9237d64"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:update>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <!--Optional:-->
<document>
            <creation>${UpdateDocument-Properties#creation}</creation>
            <creator>${UpdateDocument-Properties#creator}</creator>
            <creatorId>${UpdateDocument-Properties#creatorId}</creatorId>
            <customId>${UpdateDocument-Properties#customId}</customId>
            <date>${UpdateDocument-Properties#date}</date>
            <exportStatus>${UpdateDocument-Properties#exportStatus}</exportStatus>
            <fileName>TestUpdate.txt</fileName>
            <fileSize>${UpdateDocument-Properties#fileSize}</fileSize>
            <fileVersion>${UpdateDocument-Properties#fileVersion}</fileVersion>
            <folderId>${UpdateDocument-Properties#folderId}</folderId>
            <id>${UpdateDocument-Properties#id}</id>
            <immutable>${UpdateDocument-Properties#immutable}</immutable>
            <indexed>${UpdateDocument-Properties#indexed}</indexed>
            <language>${UpdateDocument-Properties#language}</language>
            <lastModified>${UpdateDocument-Properties#lastModified}</lastModified>
            <nature>${UpdateDocument-Properties#nature}</nature>
            <pages>${UpdateDocument-Properties#pages}</pages>
            <passwordProtected>${UpdateDocument-Properties#passwordProtected}</passwordProtected>
            <published>${UpdateDocument-Properties#published}</published>
            <publisher>${UpdateDocument-Properties#publisher}</publisher>
            <publisherId>${UpdateDocument-Properties#publisherId}</publisherId>
            <rating>${UpdateDocument-Properties#rating}</rating>
            <signed>${UpdateDocument-Properties#signed}</signed>
            <stamped>${UpdateDocument-Properties#stamped}</stamped>
            <startPublishing>${UpdateDocument-Properties#startPublishing}</startPublishing>
            <status>${UpdateDocument-Properties#status}</status>
            <title>${UpdateDocument-Properties#title}</title>
            <type>${UpdateDocument-Properties#type}</type>
            <version>${UpdateDocument-Properties#version}</version>
         </document>
         
      </ws:update>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="118b231c-6322-4b89-a57a-400731c640f5" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="3192035e-9927-42cf-ae0c-593134495a27" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="0b8adb06-8169-422c-92e0-2b96dd36ce9f" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="9b6d2442-dec1-451c-a879-4475b5593561" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/update"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="20f61c75-04e6-4698-a7c0-87770689a9ab" name="getDocumentByCustomId-Request2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>getDocumentByCustomId</con:operation><con:request name="getDocumentByCustomId-Request2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3740dbf3-fff3-49c5-a025-840ba2c45bb0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:getDocumentByCustomId>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid><customId>${UpdateDocument-Properties#customId}</customId>
         <!--Optional:-->
         
      </ws:getDocumentByCustomId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d20b60f8-1729-4e09-8af6-d4205d4ce0ce" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="82d5153a-0dc8-4c13-9057-4a1d693793dd" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="5a0ebc8f-b79d-42dc-9a34-2e19a93fb3c3" name="Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="a95b4170-d747-462a-8ca2-fa07338afa11" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://endpoint.soap.webservice.logicaldoc.com/Document/getDocumentByCustomId"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="Properties_bookmark_document" id="0d8253f8-8598-4657-82ce-2413f685b3f1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>sid</con:name><con:value>36e00e26-305f-4aab-970e-14e664390d09</con:value></con:property><con:property><con:name>docId</con:name><con:value>163905537</con:value></con:property><con:property><con:name>fileType</con:name><con:value>txt</con:value></con:property><con:property><con:name>id</con:name><con:value>3473444</con:value></con:property><con:property><con:name>position</con:name><con:value>0</con:value></con:property><con:property><con:name>targetId</con:name><con:value>3408034</con:value></con:property><con:property><con:name>title</con:name><con:value>Test</con:value></con:property><con:property><con:name>type</con:name><con:value>0</con:value></con:property><con:property><con:name>userId</con:name><con:value>1</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="630e5fac-31df-4079-a23f-1f0d40619e8b" name="bookmarkDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapBookmarkServiceServiceSoapBinding</con:interface><con:operation>bookmarkDocument</con:operation><con:request name="bookmarkDocument" id="38dbae87-6507-4929-9e3c-9274e6aa7c73"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Bookmark</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:bookmarkDocument>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <docId>${UpdateDocument-Properties#id}</docId>
      </ws:bookmarkDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="63d22cbd-6d6b-4a27-8bad-2f93d2045d18" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="85a8c6b3-1e03-4619-9a0d-7edd62f7e32d" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="a0afbabb-876a-4268-a9c8-bfdfceb7fc9b" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" id="328c5d8a-eaf6-4d77-b982-fef5316ffca7" name="Contains"><con:configuration><token>${#TestCase#id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Bookmark/bookmarkDocument" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer_Bookmark_Document" id="c262fe8d-5730-4924-a49c-18247cd488db"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>fileType</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/fileType[1]</con:sourcePath><con:targetType>fileType</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/id[1]</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>position</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/position[1]</con:sourcePath><con:targetType>position</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>targetId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/targetId[1]</con:sourcePath><con:targetType>targetId</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>title</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/title[1]</con:sourcePath><con:targetType>title</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>type</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/type[1]</con:sourcePath><con:targetType>type</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>userId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>bookmarkDocument</con:sourceStep><con:sourcePath>declare namespace ns2='http://ws.logicaldoc.com';
//ns2:bookmarkDocumentResponse[1]/bookmark[1]/userId[1]</con:sourcePath><con:targetType>userId</con:targetType><con:targetStep>Properties_bookmark_document</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="8b10e0f3-17d7-4d2f-be18-bb69405ef4ae" name="unbookmarkDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapBookmarkServiceServiceSoapBinding</con:interface><con:operation>unbookmarkDocument</con:operation><con:request name="unbookmarkDocument" id="2043c332-d701-4191-8c07-8b8321cf8973"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Bookmark</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:unbookmarkDocument>
         <!--Optional:-->
         
         <sid>${Login-Properties#sid}</sid><docId>${UpdateDocument-Properties#id}</docId>
      </ws:unbookmarkDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a4c6aaaf-1262-4cf8-b121-64be86666da2" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="7ebea717-b26c-44a0-bf1a-4bf2a44bf9e5" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="ae0f9d6a-fdd7-4ddb-861e-b2aa80777e5c" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Bookmark/unbookmarkDocument" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="Properties_Delete_Document" id="640d9efd-98fb-4be7-8fba-e3e9fda3ecd5"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>sid</con:name><con:value>aa06a344-05b3-4d20-b075-a4106c8db3d2</con:value></con:property><con:property><con:name>docId</con:name><con:value>163905538</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="6f5d7ff5-2916-4280-a615-ccaa0faa51fe" name="delete_Document"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapDocumentServiceServiceSoapBinding</con:interface><con:operation>delete</con:operation><con:request name="delete_Document" id="0162bfd8-3d37-4263-a57c-ab475f501bc5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/logicaldoc/services/Document</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.logicaldoc.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:delete>
         <!--Optional:-->
         <sid>${Login-Properties#sid}</sid>
         <docId>${UpdateDocument-Properties#id}</docId>
      </ws:delete>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="53352a07-a24d-4c2c-8397-767b987af0da" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="ff3ed577-151b-4359-a2d3-72d744573e57" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="f3798034-ad52-491c-9326-8363777a0437" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="9272ced1-28ea-4486-8ef0-82ca9b6c77d6" name="Not Contains"><con:configuration><token>${#TestCase#customId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig action="http://endpoint.soap.webservice.logicaldoc.com/Document/delete" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>640d9efd-98fb-4be7-8fba-e3e9fda3ecd5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6f5d7ff5-2916-4280-a615-ccaa0faa51fe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:savedRecentRuns>1</con:savedRecentRuns><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// def token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// def token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// def headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:authRepository/><con:tags/></con:soapui-project>